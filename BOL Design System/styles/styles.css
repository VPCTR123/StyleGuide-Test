:root {
  --thumbW: .5rem;
  --thumbH: .5rem;
  --thumbX: 50%;
  --thumbY: 50%;
  --buttonW: 2rem;
  --selectorH: 2rem;
  --padXxs: .25rem;
  --padXs: .5rem;
  --padSm: .75rem;
  --padMd: 1rem;
  --padLg: 3rem;
  --padXl: 5rem;
  --padXxl:10rem;
  --padfMin: 1rem;
  --marXxs: .25rem;
  --marXs: .5rem;
  --marSm: .75rem;
  --marMd: 1rem;
  --marLg: 3rem;
  --marXl: 5rem;
  --marXxl: 10rem;
  --userColor: red;
}

button, .button {
  text-wrap: nowrap;
  border: none;
  background-color: black;
  color: white;
  cursor: pointer;
  overflow: hidden;
  min-height: 2rem;
  display: flex;
  align-items: center;
  justify-content: center;
  min-width: var(--buttonW);
  line-height: var(--buttonW);
}
button.disabled, .button.disabled {
  pointer-events: none;
  cursor: not-allowed;
}
button.but-xxs, .button.but-xxs {
  --buttonW: 2rem;
}
button.but-xs, .button.but-xs {
  --buttonW: 3rem;
}
button.but-sm, .button.but-sm {
  --buttonW: 4rem;
}
button.but-md, .button.but-md {
  --buttonW: 8rem;
}
button.but-lg, .button.but-lg {
  --buttonW: 10rem;
}
button.but-xl, .button.but-xl {
  --buttonW: 12rem;
}
button.but-xxl, .button.but-xxl {
  --buttonW: 14rem;
}
button.but-circle, .button.but-circle {
  height: var(--buttonW);
  border-radius: 100%;
}
button.but-square, .button.but-square {
  height: var(--buttonW);
  border-radius: 0%;
}
button.but-bordered, .button.but-bordered {
  border: 1px solid;
}

.toggle {
  background-color: black;
  height: 1.5rem;
  width: 2.5rem;
  position: relative;
  display: flex;
  align-items: center;
  padding: 0.1rem;
}
.toggle > input {
  display: none;
}
.toggle > span {
  height: 1.25rem;
  width: 1.25rem;
  background-color: white;
  transition: transform 0.4s ease;
}
.toggle input[type=checkbox]:checked + span {
  transform: translateX(1rem);
  /* Adjust the translation */
}

:root {
  --thumbW: .5rem;
  --thumbH: .5rem;
  --thumbX: 50%;
  --thumbY: 50%;
  --buttonW: 2rem;
  --selectorH: 2rem;
  --padXxs: .25rem;
  --padXs: .5rem;
  --padSm: .75rem;
  --padMd: 1rem;
  --padLg: 3rem;
  --padXl: 5rem;
  --padXxl:10rem;
  --padfMin: 1rem;
  --marXxs: .25rem;
  --marXs: .5rem;
  --marSm: .75rem;
  --marMd: 1rem;
  --marLg: 3rem;
  --marXl: 5rem;
  --marXxl: 10rem;
  --userColor: red;
}

.card {
  position: relative;
}
.card header {
  border-radius: inherit;
  border-bottom-left-radius: 0;
  border-bottom-right-radius: 0;
}
.card footer {
  border-radius: inherit;
  border-top-left-radius: 0;
  border-top-right-radius: 0;
}
.card.car-xxs {
  width: 6rem;
}
.card.car-xs {
  width: 9rem;
}
.card.car-sm {
  width: 13rem;
}
.card.car-md {
  width: 25rem;
}
.card.car-lg {
  width: 37rem;
}
.card.car-xl {
  width: 50rem;
}
.card.car-xxl {
  width: 75rem;
}
.card.car-xxsVr {
  height: 6rem;
}
.card.car-xsVr {
  height: 9rem;
}
.card.car-smVr {
  height: 13rem;
}
.card.car-mdVr {
  height: 25rem;
}
.card.car-lgVr {
  height: 37rem;
}
.card.car-xlVr {
  height: 50rem;
}
.card.car-xxlVr {
  width: 75rem;
}

.thumb {
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  position: absolute;
  width: 100%;
  height: 100%;
  -webkit-clip-path: ellipse(var(--thumbW) var(--thumbH) at var(--thumbX) var(--thumbY));
          clip-path: ellipse(var(--thumbW) var(--thumbH) at var(--thumbX) var(--thumbY));
  background-color: rgb(0, 0, 0);
  border-radius: inherit;
}
.thumb.thu-xs {
  --thumbW: .5rem;
  --thumbH: .5rem;
}
.thumb.thu-sm {
  --thumbW: 1rem;
  --thumbH: 1rem;
}
.thumb.thu-md {
  --thumbW: 1.5rem;
  --thumbH: 1.5rem;
}
.thumb.thu-lg {
  --thumbW: 2.8rem;
  --thumbH: 2.8rem;
}
.thumb.thu-xl {
  --thumbW: 4rem;
  --thumbH: 4rem;
}
.thumb.thu-full {
  --thumbW: 100%;
}
.thumb.thu-fullH {
  --thumbH: 100%;
}
.thumb.thu-tl {
  --thumbX: 0%;
  --thumbY: 0%;
}
.thumb.thu-tm {
  --thumbX: 50%;
  --thumbY: 0%;
}
.thumb.thu-tr {
  --thumbX: 100%;
  --thumbY: 0%;
}
.thumb.thu-ml {
  --thumbX: 0%;
  --thumbY: 50%;
}
.thumb.thu-mm {
  --thumbX: 50%;
  --thumbY: 50%;
}
.thumb.thu-mr {
  --thumbX: 100%;
  --thumbY: 50%;
}
.thumb.thu-bl {
  --thumbX: 0%;
  --thumbY: 100%;
}
.thumb.thu-bm {
  --thumbX: 50%;
  --thumbY: 100%;
}
.thumb.thu-br {
  --thumbX: 100%;
  --thumbY: 100%;
}

.drawer {
  overflow: hidden;
  max-height: 0;
  transition: max-height 0.5s cubic-bezier(0, 1, 0, 1);
}
.drawer.active {
  max-height: 999rem;
  transition: max-height 1s ease-in-out;
}

.drawer-handle {
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  cursor: pointer;
  align-items: center;
  display: flex;
  height: 2rem;
}
.drawer-handle.drah-xxs {
  height: 1rem;
}
.drawer-handle.drah-xs {
  height: 2rem;
}
.drawer-handle.drah-sm {
  height: 3rem;
}
.drawer-handle.drah-md {
  height: 4rem;
}
.drawer-handle.drah-lg {
  height: 5rem;
}
.drawer-handle.drah-xl {
  height: 6rem;
}
.drawer-handle.drah-xxl {
  height: 7rem;
}
.drawer-handle > input {
  display: none;
}
.drawer-handle > input:checked + .icon {
  transform: rotate(-90deg);
  transform-origin: center;
}
.drawer-handle .icon {
  transition: 0.2s;
}

footer, .footer {
  z-index: 10;
  background-color: white;
}

.header,
header {
  width: 100%;
}
.header.hea-xxs,
header.hea-xxs {
  height: 1rem;
}
.header.hea-xs,
header.hea-xs {
  height: 2rem;
}
.header.hea-sm,
header.hea-sm {
  height: 3rem;
}
.header.hea-md,
header.hea-md {
  height: 4rem;
}
.header.hea-lg,
header.hea-lg {
  height: 5rem;
}
.header.hea-xl,
header.hea-xl {
  height: 6rem;
}
.header.hea-xxl,
header.hea-xxl {
  height: 7rem;
}

@font-face {
  font-family: "test";
  src: url("../fonts/icon packs/test pack/abba.eot") format("embedded-opentype"), url("../fonts/icon packs/test pack/abba.ttf") format("truetype"), url("../fonts/icon packs/test pack/abba.woff") format("woff"), url("../fonts/icon packs/test pack/abba.svg") format("svg");
  font-weight: normal;
  font-style: normal;
  font-display: block;
}
@font-face {
  font-family: "earlypack";
  src: url("../fonts/icon packs/earlyIconPack/earlyiconpack.eot") format("embedded-opentype"), url("../fonts/icon packs/earlyIconPack/earlyiconpack.ttf") format("truetype"), url("../fonts/icon packs/earlyIconPack/earlyiconpack.woff") format("woff"), url("../fonts/icon packs/earlyIconPack/earlyiconpack.svg") format("svg");
  font-weight: normal;
  font-style: normal;
  font-display: block;
}
.icon {
  font-family: "earlypack" !important;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-size: 3rem;
  speak: never;
  color: gray;
}
.icon.ico-xs {
  font-size: 0.75rem;
}
.icon.ico-sm {
  font-size: 1rem;
}
.icon.ico-md {
  font-size: 3rem;
}
.icon.ico-lg {
  font-size: 5rem;
}
.icon.ico-xl {
  font-size: 7rem;
}

.ico-PLACEHOLDER:before {
  speak: never;
  content: "\e900";
  color: gray;
}

.ico-carret-d:before {
  content: "\e900";
}

.ico-carret-l:before {
  content: "\e901";
}

.ico-carret-r:before {
  content: "\e902";
}

.ico-carret-u:before {
  content: "\e903";
}

.ico-closeX:before {
  content: "\e904";
}

.ico-ellipsis-hr:before {
  content: "\e905";
}

.ico-ellipsis-vr:before {
  content: "\e906";
}

.ico-home:before {
  content: "\e907";
}

.ico-th:before {
  content: "\e908";
}

.circle {
  border-radius: 100%;
}
.circle.cir-xxs {
  width: 0.5rem;
  height: 0.5rem;
}
.circle.cir-xs {
  width: 1rem;
  height: 1rem;
}
.circle.cir-sm {
  width: 2rem;
  height: 2rem;
}
.circle.cir-md {
  width: 3rem;
  height: 3rem;
}
.circle.cir-lg {
  width: 4rem;
  height: 4rem;
}
.circle.cir-xl {
  width: 5rem;
  height: 5rem;
}
.circle.cir-xxl {
  width: 6rem;
  height: 6rem;
}

.color-tile {
  width: 100%;
  height: 100%;
}

.background-image {
  position: fixed;
  top: 0;
  left: 0;
  z-index: -1;
  min-width: 100vw;
  height: 100vh;
  min-height: 1000px;
}

input[type=text],
input[type=password],
input[type=email],
input[type=url],
input[type=tel],
input[type=number],
input[type=search] {
  height: 1.9rem;
  border-style: solid;
  border-width: 1px;
}

textarea {
  resize: none;
  height: 100%;
}

input.inp-full, .input.inp-full {
  width: 100%;
  height: 100%;
}
input.inp-fullVr, .input.inp-fullVr {
  height: 100%;
}
input.inp-fullHr, .input.inp-fullHr {
  width: 100%;
}

:root {
  --thumbW: .5rem;
  --thumbH: .5rem;
  --thumbX: 50%;
  --thumbY: 50%;
  --buttonW: 2rem;
  --selectorH: 2rem;
  --padXxs: .25rem;
  --padXs: .5rem;
  --padSm: .75rem;
  --padMd: 1rem;
  --padLg: 3rem;
  --padXl: 5rem;
  --padXxl:10rem;
  --padfMin: 1rem;
  --marXxs: .25rem;
  --marXs: .5rem;
  --marSm: .75rem;
  --marMd: 1rem;
  --marLg: 3rem;
  --marXl: 5rem;
  --marXxl: 10rem;
  --userColor: red;
}

.spacer {
  height: 5rem;
}
.spacer.spa-xxs {
  height: 1rem;
}
.spacer.spa-xs {
  height: 2rem;
}
.spacer.spa-sm {
  height: 3rem;
}
.spacer.spa-md {
  height: 4rem;
}
.spacer.spa-lg {
  height: 5rem;
}
.spacer.spa-xl {
  height: 6rem;
}
.spacer.spa-xl {
  height: 7rem;
}

.page-content {
  display: flex;
  flex-direction: column;
  flex-grow: 1;
}

.grid {
  display: grid;
}
.grid.gri-justifyContent-center {
  justify-content: center;
}
.grid.gri-xxs {
  grid-template-columns: repeat(auto-fill, 6rem);
}
.grid.gri-xs {
  grid-template-columns: repeat(auto-fill, 9rem);
}
.grid.gri-sm {
  grid-template-columns: repeat(auto-fill, 13rem);
}
.grid.gri-md {
  grid-template-columns: repeat(auto-fill, 25rem);
}
.grid.gri-lg {
  grid-template-columns: repeat(auto-fill, 37rem);
}
.grid.gri-xl {
  grid-template-columns: repeat(auto-fill, 50rem);
}
.grid.gri-xxl {
  grid-template-columns: repeat(auto-fill, 75rem);
}
.grid.gri-full {
  grid-template-columns: repeat(auto-fill, 100%);
}
.grid.gri-halves {
  grid-template-columns: repeat(auto-fill, 50%);
}
.grid.gri-thirds {
  grid-template-columns: repeat(auto-fill, 33.33%);
}
.grid.gri-quarters {
  grid-template-columns: repeat(auto-fill, 25%);
}
.grid.gri-fifths {
  grid-template-columns: repeat(auto-fill, 20%);
}
.grid.gri-sixths {
  grid-template-columns: repeat(auto-fill, 16.6666666667%);
}
.grid.gri-sevenths {
  grid-template-columns: repeat(auto-fill, 14.2857142857%);
}
.grid.gri-eighths {
  grid-template-columns: repeat(auto-fill, 12.5%);
}
.grid.gri-nineths {
  grid-template-columns: repeat(auto-fill, 11.1111111111%);
}
.grid.gri-tenths {
  grid-template-columns: repeat(auto-fill, 10%);
}

hr,
.hr {
  border-style: solid;
  border-width: 0.0625rem;
  border-color: black;
}
hr.hr-xs,
.hr.hr-xs {
  border-width: 0.0625rem;
}
hr.hr-sm,
.hr.hr-sm {
  border-width: 0.25rem;
}
hr.hr-md,
.hr.hr-md {
  border-width: 0.5rem;
}
hr.hr-lg,
.hr.hr-lg {
  border-width: 0.75rem;
}
hr.hr-xl,
.hr.hr-xl {
  border-width: 1rem;
}

:root {
  --thumbW: .5rem;
  --thumbH: .5rem;
  --thumbX: 50%;
  --thumbY: 50%;
  --buttonW: 2rem;
  --selectorH: 2rem;
  --padXxs: .25rem;
  --padXs: .5rem;
  --padSm: .75rem;
  --padMd: 1rem;
  --padLg: 3rem;
  --padXl: 5rem;
  --padXxl:10rem;
  --padfMin: 1rem;
  --marXxs: .25rem;
  --marXs: .5rem;
  --marSm: .75rem;
  --marMd: 1rem;
  --marLg: 3rem;
  --marXl: 5rem;
  --marXxl: 10rem;
  --userColor: red;
}

.popup {
  position: absolute;
  max-height: 90vh;
  max-width: 90vw;
  display: none;
  justify-content: center;
  align-items: center;
  z-index: 100;
}
.popup.pop-center {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}
.popup.menu, .popup .card {
  max-width: 90vw;
  max-height: min(90vh, 100rem);
}
.popup.pop-debug {
  background-color: red;
  width: 2rem;
  height: 2rem;
}
.popup.visible {
  display: block;
}

.overlay {
  z-index: 99;
  position: fixed;
  height: 100vh;
  width: 100vw;
  top: 0;
  left: 0;
  background-color: rgb(255, 255, 255);
  display: none;
}
.overlay.visible {
  display: block;
}
.overlay.ove-cover {
  position: absolute;
  z-index: 100;
  width: 100%;
  height: 100%;
}
.overlay > .overlay-message {
  z-index: 101;
}

.overlay-message {
  height: 100%;
  width: 100%;
}

.focus-overlay {
  pointer-events: none;
  position: fixed;
  height: 100%;
  width: 100vw;
  display: flex;
  justify-content: space-between;
}
.focus-overlay .foco-xxsL,
.focus-overlay .foco-xxsR {
  pointer-events: none;
  width: calc((100% - 12rem) / 2);
}
.focus-overlay .foco-xsL,
.focus-overlay .foco-xsR {
  pointer-events: none;
  width: calc((100% - 18rem) / 2);
}
.focus-overlay .foco-smL,
.focus-overlay .foco-smR {
  pointer-events: none;
  width: calc((100% - 26rem) / 2);
}
.focus-overlay .foco-mdL,
.focus-overlay .foco-mdR {
  pointer-events: none;
  width: calc((100% - 50rem) / 2);
}
.focus-overlay .foco-lgL,
.focus-overlay .foco-lgR {
  pointer-events: none;
  width: calc((100% - 74rem) / 2);
}
.focus-overlay .foco-xlL,
.focus-overlay .foco-xlR {
  pointer-events: none;
  width: calc((100% - 100rem) / 2);
}
.focus-overlay .foco-xxlL,
.focus-overlay .foco-xxlR {
  pointer-events: none;
  width: calc((100% - 150rem) / 2);
}

.left-fade,
.right-fade {
  flex-grow: 1;
}

.link-nostyle {
  text-decoration: none;
}

.word-break.worB-breakAll {
  word-break: break-all;
}

:root {
  --thumbW: .5rem;
  --thumbH: .5rem;
  --thumbX: 50%;
  --thumbY: 50%;
  --buttonW: 2rem;
  --selectorH: 2rem;
  --padXxs: .25rem;
  --padXs: .5rem;
  --padSm: .75rem;
  --padMd: 1rem;
  --padLg: 3rem;
  --padXl: 5rem;
  --padXxl:10rem;
  --padfMin: 1rem;
  --marXxs: .25rem;
  --marXs: .5rem;
  --marSm: .75rem;
  --marMd: 1rem;
  --marLg: 3rem;
  --marXl: 5rem;
  --marXxl: 10rem;
  --userColor: red;
}

.menu {
  background-color: white;
  overflow: hidden;
}
.menu.men-xxs {
  width: 6rem;
}
.menu.men-xs {
  width: 9rem;
}
.menu.men-sm {
  width: 13rem;
}
.menu.men-md {
  width: 25rem;
}
.menu.men-lg {
  width: 37rem;
}
.menu.men-xl {
  width: 50rem;
}
.menu.men-xxl {
  width: 75rem;
}
.menu.men-xxsVr {
  height: 6rem;
}
.menu.men-xsVr {
  height: 9rem;
}
.menu.men-smVr {
  height: 13rem;
}
.menu.men-mdVr {
  height: 25rem;
}
.menu.men-lgVr {
  height: 37rem;
}
.menu.men-xlVr {
  height: 50rem;
}
.menu.men-xxlVr {
  height: 75rem;
}
.menu.men-fullVr {
  height: 100%;
}
.menu.men-fullHr {
  width: 100%;
}
.menu.men-full {
  width: 100%;
  height: 100%;
}

.selector {
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  background-color: lightgray;
  list-style: none;
  font-size: 0.8125rem;
  text-decoration: none;
  display: flex;
  height: 2rem;
  line-height: 2rem;
  height: var(--selectorH);
}
.selector.sel-xxs {
  --selectorH: 1rem;
  line-height: 1rem;
}
.selector.sel-xs {
  --selectorH: 2rem;
  line-height: 2rem;
}
.selector.sel-sm {
  --selectorH: 3rem;
  line-height: 3rem;
}
.selector.sel-md {
  --selectorH: 4rem;
  line-height: 4rem;
}
.selector.sel-lg {
  --selectorH: 5rem;
  line-height: 5rem;
}
.selector.sel-xl {
  --selectorH: 6rem;
  line-height: 6rem;
}
.selector.sel-xxl {
  --selectorH: 7rem;
  line-height: 7rem;
}
.selector.sel-square {
  width: var(--selectorH);
}
.selector.sel-bordered {
  border: 1px solid;
}

.selector-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(5rem, 1fr));
  overflow: hidden;
  flex-wrap: wrap;
  gap: 1px;
}
.selector-grid .selector {
  width: 100%;
  height: 100%;
  aspect-ratio: 1/1;
  display: flex;
  align-items: center;
  justify-content: center;
}
.selector-grid .selector > input {
  display: none;
}

.popup-trigger-pair {
  position: relative;
  display: inline-block;
}
.popup-trigger-pair .popup-trigger {
  position: relative;
  z-index: 2;
}
.popup-trigger-pair .overlay {
  z-index: 1;
}
.popup-trigger-pair .popup {
  z-index: 3;
}

.search-dropdown input[type=text]:focus + .search-dropdown-icon .icon {
  transform: rotate(-90deg);
}

.search-dropdown:focus-within .popup {
  display: block;
}
.search-dropdown:focus-within .popup ~ .overlay {
  display: block;
  z-index: -1;
}

.search-dropdown input[type=text] + .search-dropdown-icon .icon {
  transition: transform 0.3s ease;
  transform-origin: center;
}

.search-dropdown {
  position: relative;
}

.search-dropdown-icon {
  position: absolute;
  top: 0;
  right: 0;
  left: 0;
  bottom: 0;
  pointer-events: none;
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: end;
}

.page-wrapper {
  display: flex;
  flex-direction: column;
  min-height: 100vh;
  height: auto;
}

.navigation,
nav {
  height: 3rem;
  width: 100%;
}
.navigation.nav-fixed,
nav.nav-fixed {
  position: fixed;
}
.navigation.nav-xxs,
nav.nav-xxs {
  height: 1rem;
}
.navigation.nav-xs,
nav.nav-xs {
  height: 2rem;
}
.navigation.nav-sm,
nav.nav-sm {
  height: 3rem;
}
.navigation.nav-md,
nav.nav-md {
  height: 4rem;
}
.navigation.nav-lg,
nav.nav-lg {
  height: 5rem;
}
.navigation.nav-xl,
nav.nav-xl {
  height: 6rem;
}
.navigation.nav-xxl,
nav.nav-xxl {
  height: 7rem;
}
.navigation.nav-main,
nav.nav-main {
  z-index: 50;
  position: fixed;
  top: 0;
  left: 0;
}

.nav-container {
  gap: inherit;
  height: inherit;
  display: inherit;
  align-items: inherit;
}

:root {
  --thumbW: .5rem;
  --thumbH: .5rem;
  --thumbX: 50%;
  --thumbY: 50%;
  --buttonW: 2rem;
  --selectorH: 2rem;
  --padXxs: .25rem;
  --padXs: .5rem;
  --padSm: .75rem;
  --padMd: 1rem;
  --padLg: 3rem;
  --padXl: 5rem;
  --padXxl:10rem;
  --padfMin: 1rem;
  --marXxs: .25rem;
  --marXs: .5rem;
  --marSm: .75rem;
  --marMd: 1rem;
  --marLg: 3rem;
  --marXl: 5rem;
  --marXxl: 10rem;
  --userColor: red;
}

.cell.cel-xxs {
  width: 6rem;
}
.cell.cel-xs {
  width: 9rem;
}
.cell.cel-sm {
  width: 13rem;
}
.cell.cel-md {
  width: 25rem;
}
.cell.cel-lg {
  width: 37rem;
}
.cell.cel-xl {
  width: 50rem;
}
.cell.cel-xxl {
  width: 75rem;
}
.cell.cel-xxsMin {
  min-width: 6rem;
}
.cell.cel-xsMin {
  min-width: 9rem;
}
.cell.cel-smMin {
  min-width: 13rem;
}
.cell.cel-mdMin {
  min-width: 25rem;
}
.cell.cel-lgMin {
  min-width: 37rem;
}
.cell.cel-xlMin {
  min-width: 50rem;
}
.cell.cel-xxlMin {
  min-width: 75rem;
}
.cell.cel-xxsMax {
  max-width: 6rem;
}
.cell.cel-xsMax {
  max-width: 9rem;
}
.cell.cel-smMax {
  max-width: 13rem;
}
.cell.cel-mdMax {
  max-width: 25rem;
}
.cell.cel-lgMax {
  max-width: 37rem;
}
.cell.cel-xlMax {
  max-width: 50rem;
}
.cell.cel-xxlMax {
  max-width: 75rem;
}

.cursor {
  cursor: default;
}
.cursor.cur-pointer {
  cursor: pointer;
}

.content.con-scrollY {
  overflow-y: scroll;
}
.content.con-scrollY-auto {
  overflow-y: auto;
}
.content.con-scrollX {
  overflow-y: scroll;
}
.content.con-scrollX-auto {
  overflow-y: auto;
}
.content.con-xxsMax {
  max-width: 12rem;
}
.content.con-xsMax {
  max-width: 18rem;
}
.content.con-smMax {
  max-width: 26rem;
}
.content.con-mdMax {
  max-width: 50rem;
}
.content.con-lgMax {
  max-width: 74rem;
}
.content.con-xlMax {
  max-width: 100rem;
}
.content.con-xxlMax {
  max-width: 150rem;
}
.content.con-xxsMin {
  min-width: 12rem;
}
.content.con-xsMin {
  min-width: 18rem;
}
.content.con-smMin {
  min-width: 26rem;
}
.content.con-mdMin {
  min-width: 50rem;
}
.content.con-lgMin {
  min-width: 74rem;
}
.content.con-xlMin {
  min-width: 100rem;
}
.content.con-xxlMin {
  min-width: 150rem;
}
.content.con-xxs {
  width: 12rem;
}
.content.con-xs {
  width: 18rem;
}
.content.con-sm {
  width: 26rem;
}
.content.con-md {
  width: 50rem;
}
.content.con-lg {
  width: 74rem;
}
.content.con-xl {
  width: 100rem;
}
.content.con-xxl {
  width: 150rem;
}
.content.con-100pMax {
  max-width: 100%;
}
.content.con-90pMax {
  max-width: 90%;
}
.content.con-80pMax {
  max-width: 80%;
}
.content.con-70pMax {
  max-width: 70%;
}
.content.con-60pMax {
  max-width: 60%;
}
.content.con-50pMax {
  max-width: 50%;
}
.content.con-40pMax {
  max-width: 40%;
}
.content.con-30pMax {
  max-width: 30%;
}
.content.con-20pMax {
  max-width: 20%;
}
.content.con-10pMax {
  max-width: 10%;
}
.content.con-25pMax {
  max-width: 25%;
}
.content.con-75pMax {
  max-width: 75%;
}
.content.con-33pMax {
  max-width: 33.33333%;
}
.content.con-66pMax {
  max-width: 66.66666%;
}
.content.con-full {
  width: 100%;
  height: 100%;
}
.content.con-100p {
  width: 100%;
}
.content.con-90p {
  width: 90%;
}
.content.con-80p {
  width: 80%;
}
.content.con-70p {
  width: 70%;
}
.content.con-60p {
  width: 60%;
}
.content.con-50p {
  width: 50%;
}
.content.con-40p {
  width: 40%;
}
.content.con-30p {
  width: 30%;
}
.content.con-20p {
  width: 20%;
}
.content.con-10p {
  width: 10%;
}
.content.con-25p {
  width: 25%;
}
.content.con-75p {
  width: 75%;
}
.content.con-33p {
  width: 33.33333%;
}
.content.con-66p {
  width: 66.66666%;
}
.content.con-100vwMax {
  max-width: 100vw;
}
.content.con-90vwMax {
  max-width: 90vw;
}
.content.con-80vwMax {
  max-width: 80vw;
}
.content.con-70vwMax {
  max-width: 70vw;
}
.content.con-60vwMax {
  max-width: 60vw;
}
.content.con-50vwMax {
  max-width: 50vw;
}
.content.con-40vwMax {
  max-width: 40vw;
}
.content.con-30vwMax {
  max-width: 30vw;
}
.content.con-20vwMax {
  max-width: 20vw;
}
.content.con-10vwMax {
  max-width: 10vw;
}
.content.con-25vwMax {
  max-width: 25vw;
}
.content.con-75vwMax {
  max-width: 75vw;
}
.content.con-33vwMax {
  max-width: 33.33333vw;
}
.content.con-66vwMax {
  max-width: 66.66666vw;
}
.content.con-100vw {
  width: 100vw;
}
.content.con-90vw {
  width: 90vw;
}
.content.con-80vw {
  width: 80vw;
}
.content.con-70vw {
  width: 70vw;
}
.content.con-60vw {
  width: 60vw;
}
.content.con-50vw {
  width: 50vw;
}
.content.con-40vw {
  width: 40vw;
}
.content.con-30vw {
  width: 30vw;
}
.content.con-20vw {
  width: 20vw;
}
.content.con-10vw {
  width: 10vw;
}
.content.con-25vw {
  width: 25vw;
}
.content.con-75vw {
  width: 75vw;
}
.content.con-33vw {
  width: 33.33333vw;
}
.content.con-66vw {
  width: 66.66666vw;
}
.content.con-xxsMaxVr {
  max-height: 12rem;
}
.content.con-xsMaxVr {
  max-height: 18rem;
}
.content.con-smMaxVr {
  max-height: 26rem;
}
.content.con-mdMaxVr {
  max-height: 50rem;
}
.content.con-lgMaxVr {
  max-height: 74rem;
}
.content.con-xlMaxVr {
  max-height: 100rem;
}
.content.con-xxlMaxVr {
  max-height: 150rem;
}
.content.con-xxsMinVr {
  min-height: 12rem;
}
.content.con-xsMinVr {
  min-height: 18rem;
}
.content.con-smMinVr {
  min-height: 26rem;
}
.content.con-mdMinVr {
  min-height: 50rem;
}
.content.con-lgMinVr {
  min-height: 74rem;
}
.content.con-xlMinVr {
  min-height: 100rem;
}
.content.con-xxlMinVr {
  min-height: 150rem;
}
.content.con-xxsVr {
  height: 12rem;
}
.content.con-xsVr {
  height: 18rem;
}
.content.con-smVr {
  height: 26rem;
}
.content.con-mdVr {
  height: 50rem;
  height: 10rem !important;
}
.content.con-lgVr {
  height: 74rem;
}
.content.con-xlVr {
  height: 100rem;
}
.content.con-xxlVr {
  height: 150rem;
}
.content.con-100pMaxVr {
  max-height: 100%;
}
.content.con-90pMaxVr {
  max-height: 90%;
}
.content.con-80pMaxVr {
  max-height: 80%;
}
.content.con-70pMaxVr {
  max-height: 70%;
}
.content.con-60pMaxVr {
  max-height: 60%;
}
.content.con-50pMaxVr {
  max-height: 50%;
}
.content.con-40pMaxVr {
  max-height: 40%;
}
.content.con-30pMaxVr {
  max-height: 30%;
}
.content.con-20pMaxVr {
  max-height: 20%;
}
.content.con-10pMaxVr {
  max-height: 10%;
}
.content.con-25pMaxVr {
  max-height: 25%;
}
.content.con-75pMaxVr {
  max-height: 75%;
}
.content.con-33pMaxVr {
  max-height: 33.33333%;
}
.content.con-66pMaxVr {
  max-height: 66.66666%;
}
.content.con-100pVr {
  height: 100%;
}
.content.con-90pVr {
  height: 90%;
}
.content.con-80pVr {
  height: 80%;
}
.content.con-70pVr {
  height: 70%;
}
.content.con-60pVr {
  height: 60%;
}
.content.con-50pVr {
  height: 50%;
}
.content.con-40pVr {
  height: 40%;
}
.content.con-30pVr {
  height: 30%;
}
.content.con-20pVr {
  height: 20%;
}
.content.con-10pVr {
  height: 10%;
}
.content.con-25pVr {
  height: 25%;
}
.content.con-75pVr {
  height: 75%;
}
.content.con-33pVr {
  height: 33.33333%;
}
.content.con-66pVr {
  height: 66.66666%;
}
.content.con-100vhMax {
  max-height: 100vh;
}
.content.con-90vhMax {
  max-height: 90vh;
}
.content.con-80vhMax {
  max-height: 80vh;
}
.content.con-70vhMax {
  max-height: 70vh;
}
.content.con-60vhMax {
  max-height: 60vh;
}
.content.con-50vhMax {
  max-height: 50vh;
}
.content.con-40vhMax {
  max-height: 40vh;
}
.content.con-30vhMax {
  max-height: 30vh;
}
.content.con-20vhMax {
  max-height: 20vh;
}
.content.con-10vhMax {
  max-height: 10vh;
}
.content.con-25vhMax {
  max-height: 25vh;
}
.content.con-75vhMax {
  max-height: 75vh;
}
.content.con-33vhMax {
  max-height: 33.33333vh;
}
.content.con-66vhMax {
  max-height: 66.66666vh;
}
.content.con-100vh {
  height: 100vh;
}
.content.con-90vh {
  height: 90vh;
}
.content.con-80vh {
  height: 80vh;
}
.content.con-70vh {
  height: 70vh;
}
.content.con-60vh {
  height: 60vh;
}
.content.con-50vh {
  height: 50vh;
}
.content.con-40vh {
  height: 40vh;
}
.content.con-30vh {
  height: 30vh;
}
.content.con-20vh {
  height: 20vh;
}
.content.con-10vh {
  height: 10vh;
}
.content.con-25vh {
  width: 25vh;
}
.content.con-75vh {
  width: 75vh;
}
.content.con-33vh {
  width: 33.33333vh;
}
.content.con-66vh {
  width: 66.66666vh;
}

.disabled {
  pointer-events: none;
}

.display {
  display: block;
}
.display.dis-grid {
  display: grid;
}
.display.dis-block {
  display: block;
}
.display.dis-inline-block {
  display: inline-block;
}

.edge-left {
  right: 100%;
}
.edge-left.to-right {
  right: auto;
  left: 0;
}

.edge-right {
  left: 100%;
}
.edge-right.to-left {
  left: auto;
  right: 0;
}

.fade {
  transition: 0;
}
.fade .fad-out {
  transition: 0.5s;
  opacity: 0;
}
.fade .fad-in {
  transition: 0.5s;
  opacity: 100;
}

.flex {
  display: flex;
}
.flex.fle-rowreverse {
  flex-direction: row-reverse;
}
.flex.fle-column {
  flex-direction: column;
}
.flex.fle-space-between {
  justify-content: space-between;
}
.flex.fle-centerHr {
  justify-content: center;
}
.flex.fle-start {
  justify-content: flex-start;
}
.flex.fle-align-start {
  align-items: start;
}
.flex.fle-end {
  justify-content: flex-end;
}
.flex.fle-one {
  flex: 1;
}
.flex.fle-centerVr {
  align-items: center;
}
.flex.fle-baseline {
  align-items: baseline;
}
.flex.fle-alignItems-baseline {
  align-items: baseline;
}
.flex.fle-alignItems-center {
  align-items: center;
}
.flex.fle-alignItems-end {
  align-items: end;
}
.flex.fle-alignItems-start {
  align-items: start;
}
.flex.fle-alignItems-flexStart {
  align-items: flex-start;
}
.flex.fle-alignItems-inherit {
  align-items: inherit;
}
.flex.fle-alignItems-stretch {
  align-items: stretch;
}
.flex.fle-alignContent-baseline {
  align-content: baseline;
}
.flex.fle-alignContent-center {
  align-content: center;
}
.flex.fle-alignContent-end {
  align-content: end;
}
.flex.fle-alignContent-start {
  align-content: start;
}
.flex.fle-alignContent-inherit {
  align-content: inherit;
}
.flex.fle-alignContent-stretch {
  align-content: stretch;
}
.flex.fle-alignContent-spaceBetween {
  align-content: space-between;
}
.flex.fle-alignContent-spaceAround {
  align-content: space-around;
}
.flex.fle-alignContent-spaceEvenly {
  align-content: space-evenly;
}
.flex.fle-alignSelf-baseline {
  align-self: baseline;
}
.flex.fle-alignSelf-center {
  align-self: center;
}
.flex.fle-alignSelf-flexEnd {
  align-self: flex-end;
}
.flex.fle-alignSelf-selfEnd {
  align-self: self-end;
}
.flex.fle-alignSelf-flexStart {
  align-self: flex-start;
}
.flex.fle-alignSelf-selfStart {
  align-self: self-start;
}
.flex.fle-alignSelf-stretch {
  align-self: stretch;
}
.flex.fle-basis-xxs {
  flex-basis: 3.125rem;
}
.flex.fle-basis-xs {
  flex-basis: 6.25rem;
}
.flex.fle-basis-sm {
  flex-basis: 12.5rem;
}
.flex.fle-basis-md {
  flex-basis: 25rem;
}
.flex.fle-basis-lg {
  flex-basis: 37.5rem;
}
.flex.fle-basis-xl {
  flex-basis: 50rem;
}
.flex.fle-basis-xxl {
  flex-basis: 75rem;
}
.flex.fle-direction-column {
  flex-direction: column;
}
.flex.fle-direction-columnReverse {
  flex-direction: column-reverse;
}
.flex.fle-direction-row {
  flex-direction: row;
}
.flex.fle-direction-rowReverse {
  flex-direction: row-reverse;
}
.flex.fle-direction-inherit {
  flex-direction: inherit;
}
.flex.fle-flow-row {
  flex-flow: row;
}
.flex.fle-flow-rowReverse {
  flex-flow: row-reverse;
}
.flex.fle-flow-column {
  flex-flow: column;
}
.flex.fle-flow-columnReverse {
  flex-flow: column-reverse;
}
.flex.fle-flow-wrap {
  flex-flow: wrap;
}
.flex.fle-flow-nowrap {
  flex-flow: nowrap;
}
.flex.fle-flow-wrapReverse {
  flex-flow: wrap-reverse;
}
.flex.fle-wrap {
  flex-wrap: wrap;
}
.flex.fle-wrapReverse {
  flex-wrap: wrap-reverse;
}
.flex.fle-nowrap {
  flex-wrap: nowrap;
}
.flex.fle-justifyContent-baseline {
  justify-content: baseline;
}
.flex.fle-justifyContent-center {
  justify-content: center;
}
.flex.fle-justifyContent-end {
  justify-content: end;
}
.flex.fle-justifyContent-start {
  justify-content: start;
}
.flex.fle-justifyContent-inherit {
  justify-content: inherit;
}
.flex.fle-justifyContent-stretch {
  justify-content: stretch;
}
.flex.fle-justifyContent-spaceBetween {
  justify-content: space-between;
}
.flex.fle-justifyContent-spaceAround {
  justify-content: space-around;
}
.flex.fle-justifyContent-spaceEvenly {
  justify-content: space-evenly;
}

.float.flo-right {
  float: right;
}

.gap {
  gap: 0.5rem;
}
.gap.gap-xxs {
  gap: 0.25rem;
}
.gap.gap-xs {
  gap: 0.5rem;
}
.gap.gap-sm {
  gap: 0.75rem;
}
.gap.gap-md {
  gap: 1rem;
}
.gap.gap-lg {
  gap: 3rem;
}
.gap.gap-xl {
  gap: 5rem;
}
.gap.gap-xxl {
  gap: 10rem;
}

.ghost:not(:hover) {
  background-color: hsla(0, 0%, 0%, 0) !important;
}
.ghost:not(:hover).gho-transXxs {
  transition: background-color 0.1s;
}

.grow.gro-one {
  flex-grow: 1;
}
.grow.gro-two {
  flex-grow: 2;
}
.grow.gro-three {
  flex-grow: 3;
}
.grow.gro-four {
  flex-grow: 4;
}
.grow.gro-five {
  flex-grow: 5;
}
.grow.gro-six {
  flex-grow: 6;
}
.grow.gro-seven {
  flex-grow: 7;
}
.grow.gro-eight {
  flex-grow: 8;
}
.grow.gro-nine {
  flex-grow: 9;
}
.grow.gro-ten {
  flex-grow: 10;
}
.grow.gro-half {
  flex-grow: 0.5;
}
.grow .gro-third {
  flex-grow: 0.33333;
}
.grow .gro-quarter {
  flex-grow: 0.25;
}
.grow .gro-fifth {
  flex-grow: 0.2;
}
.grow .gro-sixth {
  flex-grow: 0.166666;
}
.grow .gro-seventh {
  flex-grow: 0.143;
}
.grow .gro-eighth {
  flex-grow: 0.125;
}
.grow .gro-ninth {
  flex-grow: 0.1111;
}
.grow .gro-tenth {
  flex-grow: 0.1;
}

.hide-bg {
  background-color: hsla(0, 0%, 0%, 0) !important;
}

.magic {
  container: magic/inline-size;
}

@container magic (max-width: calc(6rem * 2)) {
  .mag-xxs > .magic-parent {
    width: 6rem;
  }
}
@container magic (width > calc(6rem * 2)) and (max-width: calc(6rem * 3)) {
  .mag-xxs > .magic-parent {
    width: calc(6rem * 2);
  }
}
@container magic (width > calc(6rem * 1)) {
  .mag-1Max.mag-xxs > .magic-parent {
    width: calc(6rem * 1);
  }
}

@container magic (width > calc(6rem * 3)) and (max-width: calc(6rem * 4)) {
  .mag-xxs > .magic-parent {
    width: calc(6rem * 3);
  }
}
@container magic (width > calc(6rem * 1)) {
  .mag-1Max.mag-xxs > .magic-parent {
    width: calc(6rem * 1);
  }
}

@container magic (width > calc(6rem * 2)) {
  .mag-2Max.mag-xxs > .magic-parent {
    width: calc(6rem * 2);
  }
}

@container magic (width > calc(6rem * 4)) and (max-width: calc(6rem * 5)) {
  .mag-xxs > .magic-parent {
    width: calc(6rem * 4);
  }
}
@container magic (width > calc(6rem * 1)) {
  .mag-1Max.mag-xxs > .magic-parent {
    width: calc(6rem * 1);
  }
}

@container magic (width > calc(6rem * 2)) {
  .mag-2Max.mag-xxs > .magic-parent {
    width: calc(6rem * 2);
  }
}

@container magic (width > calc(6rem * 3)) {
  .mag-3Max.mag-xxs > .magic-parent {
    width: calc(6rem * 3);
  }
}

@container magic (width > calc(6rem * 5)) and (max-width: calc(6rem * 6)) {
  .mag-xxs > .magic-parent {
    width: calc(6rem * 5);
  }
}
@container magic (width > calc(6rem * 1)) {
  .mag-1Max.mag-xxs > .magic-parent {
    width: calc(6rem * 1);
  }
}

@container magic (width > calc(6rem * 2)) {
  .mag-2Max.mag-xxs > .magic-parent {
    width: calc(6rem * 2);
  }
}

@container magic (width > calc(6rem * 3)) {
  .mag-3Max.mag-xxs > .magic-parent {
    width: calc(6rem * 3);
  }
}

@container magic (width > calc(6rem * 4)) {
  .mag-4Max.mag-xxs > .magic-parent {
    width: calc(6rem * 4);
  }
}

@container magic (width > calc(6rem * 6)) and (max-width: calc(6rem * 7)) {
  .mag-xxs > .magic-parent {
    width: calc(6rem * 6);
  }
}
@container magic (width > calc(6rem * 1)) {
  .mag-1Max.mag-xxs > .magic-parent {
    width: calc(6rem * 1);
  }
}

@container magic (width > calc(6rem * 2)) {
  .mag-2Max.mag-xxs > .magic-parent {
    width: calc(6rem * 2);
  }
}

@container magic (width > calc(6rem * 3)) {
  .mag-3Max.mag-xxs > .magic-parent {
    width: calc(6rem * 3);
  }
}

@container magic (width > calc(6rem * 4)) {
  .mag-4Max.mag-xxs > .magic-parent {
    width: calc(6rem * 4);
  }
}

@container magic (width > calc(6rem * 5)) {
  .mag-5Max.mag-xxs > .magic-parent {
    width: calc(6rem * 5);
  }
}

@container magic (width > calc(6rem * 7)) and (max-width: calc(6rem * 8)) {
  .mag-xxs > .magic-parent {
    width: calc(6rem * 7);
  }
}
@container magic (width > calc(6rem * 1)) {
  .mag-1Max.mag-xxs > .magic-parent {
    width: calc(6rem * 1);
  }
}

@container magic (width > calc(6rem * 2)) {
  .mag-2Max.mag-xxs > .magic-parent {
    width: calc(6rem * 2);
  }
}

@container magic (width > calc(6rem * 3)) {
  .mag-3Max.mag-xxs > .magic-parent {
    width: calc(6rem * 3);
  }
}

@container magic (width > calc(6rem * 4)) {
  .mag-4Max.mag-xxs > .magic-parent {
    width: calc(6rem * 4);
  }
}

@container magic (width > calc(6rem * 5)) {
  .mag-5Max.mag-xxs > .magic-parent {
    width: calc(6rem * 5);
  }
}

@container magic (width > calc(6rem * 6)) {
  .mag-6Max.mag-xxs > .magic-parent {
    width: calc(6rem * 6);
  }
}

@container magic (min-width: calc(6rem * 8)) {
  .mag-xxs > .magic-parent {
    max-width: calc(6rem * 8);
  }
}
@container magic (width > calc(6rem * 1)) {
  .mag-1Max.mag-xxs > .magic-parent {
    width: calc(6rem * 1);
  }
}

@container magic (width > calc(6rem * 2)) {
  .mag-2Max.mag-xxs > .magic-parent {
    width: calc(6rem * 2);
  }
}

@container magic (width > calc(6rem * 3)) {
  .mag-3Max.mag-xxs > .magic-parent {
    width: calc(6rem * 3);
  }
}

@container magic (width > calc(6rem * 4)) {
  .mag-4Max.mag-xxs > .magic-parent {
    width: calc(6rem * 4);
  }
}

@container magic (width > calc(6rem * 5)) {
  .mag-5Max.mag-xxs > .magic-parent {
    width: calc(6rem * 5);
  }
}

@container magic (width > calc(6rem * 6)) {
  .mag-6Max.mag-xxs > .magic-parent {
    width: calc(6rem * 6);
  }
}

@container magic (width > calc(6rem * 7)) {
  .mag-7Max.mag-xxs > .magic-parent {
    width: calc(6rem * 7);
  }
}

@container magic (max-width: calc(9rem * 2)) {
  .mag-xs > .magic-parent {
    width: 9rem;
  }
}
@container magic (width > calc(9rem * 2)) and (max-width: calc(9rem * 3)) {
  .mag-xs > .magic-parent {
    width: calc(9rem * 2);
  }
}
@container magic (width > calc(9rem * 1)) {
  .mag-1Max.mag-xs > .magic-parent {
    width: calc(9rem * 1);
  }
}

@container magic (width > calc(9rem * 3)) and (max-width: calc(9rem * 4)) {
  .mag-xs > .magic-parent {
    width: calc(9rem * 3);
  }
}
@container magic (width > calc(9rem * 1)) {
  .mag-1Max.mag-xs > .magic-parent {
    width: calc(9rem * 1);
  }
}

@container magic (width > calc(9rem * 2)) {
  .mag-2Max.mag-xs > .magic-parent {
    width: calc(9rem * 2);
  }
}

@container magic (width > calc(9rem * 4)) and (max-width: calc(9rem * 5)) {
  .mag-xs > .magic-parent {
    width: calc(9rem * 4);
  }
}
@container magic (width > calc(9rem * 1)) {
  .mag-1Max.mag-xs > .magic-parent {
    width: calc(9rem * 1);
  }
}

@container magic (width > calc(9rem * 2)) {
  .mag-2Max.mag-xs > .magic-parent {
    width: calc(9rem * 2);
  }
}

@container magic (width > calc(9rem * 3)) {
  .mag-3Max.mag-xs > .magic-parent {
    width: calc(9rem * 3);
  }
}

@container magic (width > calc(9rem * 5)) and (max-width: calc(9rem * 6)) {
  .mag-xs > .magic-parent {
    width: calc(9rem * 5);
  }
}
@container magic (width > calc(9rem * 1)) {
  .mag-1Max.mag-xs > .magic-parent {
    width: calc(9rem * 1);
  }
}

@container magic (width > calc(9rem * 2)) {
  .mag-2Max.mag-xs > .magic-parent {
    width: calc(9rem * 2);
  }
}

@container magic (width > calc(9rem * 3)) {
  .mag-3Max.mag-xs > .magic-parent {
    width: calc(9rem * 3);
  }
}

@container magic (width > calc(9rem * 4)) {
  .mag-4Max.mag-xs > .magic-parent {
    width: calc(9rem * 4);
  }
}

@container magic (width > calc(9rem * 6)) and (max-width: calc(9rem * 7)) {
  .mag-xs > .magic-parent {
    width: calc(9rem * 6);
  }
}
@container magic (width > calc(9rem * 1)) {
  .mag-1Max.mag-xs > .magic-parent {
    width: calc(9rem * 1);
  }
}

@container magic (width > calc(9rem * 2)) {
  .mag-2Max.mag-xs > .magic-parent {
    width: calc(9rem * 2);
  }
}

@container magic (width > calc(9rem * 3)) {
  .mag-3Max.mag-xs > .magic-parent {
    width: calc(9rem * 3);
  }
}

@container magic (width > calc(9rem * 4)) {
  .mag-4Max.mag-xs > .magic-parent {
    width: calc(9rem * 4);
  }
}

@container magic (width > calc(9rem * 5)) {
  .mag-5Max.mag-xs > .magic-parent {
    width: calc(9rem * 5);
  }
}

@container magic (width > calc(9rem * 7)) and (max-width: calc(9rem * 8)) {
  .mag-xs > .magic-parent {
    width: calc(9rem * 7);
  }
}
@container magic (width > calc(9rem * 1)) {
  .mag-1Max.mag-xs > .magic-parent {
    width: calc(9rem * 1);
  }
}

@container magic (width > calc(9rem * 2)) {
  .mag-2Max.mag-xs > .magic-parent {
    width: calc(9rem * 2);
  }
}

@container magic (width > calc(9rem * 3)) {
  .mag-3Max.mag-xs > .magic-parent {
    width: calc(9rem * 3);
  }
}

@container magic (width > calc(9rem * 4)) {
  .mag-4Max.mag-xs > .magic-parent {
    width: calc(9rem * 4);
  }
}

@container magic (width > calc(9rem * 5)) {
  .mag-5Max.mag-xs > .magic-parent {
    width: calc(9rem * 5);
  }
}

@container magic (width > calc(9rem * 6)) {
  .mag-6Max.mag-xs > .magic-parent {
    width: calc(9rem * 6);
  }
}

@container magic (min-width: calc(9rem * 8)) {
  .mag-xs > .magic-parent {
    max-width: calc(9rem * 8);
  }
}
@container magic (width > calc(9rem * 1)) {
  .mag-1Max.mag-xs > .magic-parent {
    width: calc(9rem * 1);
  }
}

@container magic (width > calc(9rem * 2)) {
  .mag-2Max.mag-xs > .magic-parent {
    width: calc(9rem * 2);
  }
}

@container magic (width > calc(9rem * 3)) {
  .mag-3Max.mag-xs > .magic-parent {
    width: calc(9rem * 3);
  }
}

@container magic (width > calc(9rem * 4)) {
  .mag-4Max.mag-xs > .magic-parent {
    width: calc(9rem * 4);
  }
}

@container magic (width > calc(9rem * 5)) {
  .mag-5Max.mag-xs > .magic-parent {
    width: calc(9rem * 5);
  }
}

@container magic (width > calc(9rem * 6)) {
  .mag-6Max.mag-xs > .magic-parent {
    width: calc(9rem * 6);
  }
}

@container magic (width > calc(9rem * 7)) {
  .mag-7Max.mag-xs > .magic-parent {
    width: calc(9rem * 7);
  }
}

@container magic (max-width: calc(13rem * 2)) {
  .mag-sm > .magic-parent {
    width: 13rem;
  }
}
@container magic (width > calc(13rem * 2)) and (max-width: calc(13rem * 3)) {
  .mag-sm > .magic-parent {
    width: calc(13rem * 2);
  }
}
@container magic (width > calc(13rem * 1)) {
  .mag-1Max.mag-sm > .magic-parent {
    width: calc(13rem * 1);
  }
}

@container magic (width > calc(13rem * 3)) and (max-width: calc(13rem * 4)) {
  .mag-sm > .magic-parent {
    width: calc(13rem * 3);
  }
}
@container magic (width > calc(13rem * 1)) {
  .mag-1Max.mag-sm > .magic-parent {
    width: calc(13rem * 1);
  }
}

@container magic (width > calc(13rem * 2)) {
  .mag-2Max.mag-sm > .magic-parent {
    width: calc(13rem * 2);
  }
}

@container magic (width > calc(13rem * 4)) and (max-width: calc(13rem * 5)) {
  .mag-sm > .magic-parent {
    width: calc(13rem * 4);
  }
}
@container magic (width > calc(13rem * 1)) {
  .mag-1Max.mag-sm > .magic-parent {
    width: calc(13rem * 1);
  }
}

@container magic (width > calc(13rem * 2)) {
  .mag-2Max.mag-sm > .magic-parent {
    width: calc(13rem * 2);
  }
}

@container magic (width > calc(13rem * 3)) {
  .mag-3Max.mag-sm > .magic-parent {
    width: calc(13rem * 3);
  }
}

@container magic (width > calc(13rem * 5)) and (max-width: calc(13rem * 6)) {
  .mag-sm > .magic-parent {
    width: calc(13rem * 5);
  }
}
@container magic (width > calc(13rem * 1)) {
  .mag-1Max.mag-sm > .magic-parent {
    width: calc(13rem * 1);
  }
}

@container magic (width > calc(13rem * 2)) {
  .mag-2Max.mag-sm > .magic-parent {
    width: calc(13rem * 2);
  }
}

@container magic (width > calc(13rem * 3)) {
  .mag-3Max.mag-sm > .magic-parent {
    width: calc(13rem * 3);
  }
}

@container magic (width > calc(13rem * 4)) {
  .mag-4Max.mag-sm > .magic-parent {
    width: calc(13rem * 4);
  }
}

@container magic (width > calc(13rem * 6)) and (max-width: calc(13rem * 7)) {
  .mag-sm > .magic-parent {
    width: calc(13rem * 6);
  }
}
@container magic (width > calc(13rem * 1)) {
  .mag-1Max.mag-sm > .magic-parent {
    width: calc(13rem * 1);
  }
}

@container magic (width > calc(13rem * 2)) {
  .mag-2Max.mag-sm > .magic-parent {
    width: calc(13rem * 2);
  }
}

@container magic (width > calc(13rem * 3)) {
  .mag-3Max.mag-sm > .magic-parent {
    width: calc(13rem * 3);
  }
}

@container magic (width > calc(13rem * 4)) {
  .mag-4Max.mag-sm > .magic-parent {
    width: calc(13rem * 4);
  }
}

@container magic (width > calc(13rem * 5)) {
  .mag-5Max.mag-sm > .magic-parent {
    width: calc(13rem * 5);
  }
}

@container magic (width > calc(13rem * 7)) and (max-width: calc(13rem * 8)) {
  .mag-sm > .magic-parent {
    width: calc(13rem * 7);
  }
}
@container magic (width > calc(13rem * 1)) {
  .mag-1Max.mag-sm > .magic-parent {
    width: calc(13rem * 1);
  }
}

@container magic (width > calc(13rem * 2)) {
  .mag-2Max.mag-sm > .magic-parent {
    width: calc(13rem * 2);
  }
}

@container magic (width > calc(13rem * 3)) {
  .mag-3Max.mag-sm > .magic-parent {
    width: calc(13rem * 3);
  }
}

@container magic (width > calc(13rem * 4)) {
  .mag-4Max.mag-sm > .magic-parent {
    width: calc(13rem * 4);
  }
}

@container magic (width > calc(13rem * 5)) {
  .mag-5Max.mag-sm > .magic-parent {
    width: calc(13rem * 5);
  }
}

@container magic (width > calc(13rem * 6)) {
  .mag-6Max.mag-sm > .magic-parent {
    width: calc(13rem * 6);
  }
}

@container magic (min-width: calc(13rem * 8)) {
  .mag-sm > .magic-parent {
    max-width: calc(13rem * 8);
  }
}
@container magic (width > calc(13rem * 1)) {
  .mag-1Max.mag-sm > .magic-parent {
    width: calc(13rem * 1);
  }
}

@container magic (width > calc(13rem * 2)) {
  .mag-2Max.mag-sm > .magic-parent {
    width: calc(13rem * 2);
  }
}

@container magic (width > calc(13rem * 3)) {
  .mag-3Max.mag-sm > .magic-parent {
    width: calc(13rem * 3);
  }
}

@container magic (width > calc(13rem * 4)) {
  .mag-4Max.mag-sm > .magic-parent {
    width: calc(13rem * 4);
  }
}

@container magic (width > calc(13rem * 5)) {
  .mag-5Max.mag-sm > .magic-parent {
    width: calc(13rem * 5);
  }
}

@container magic (width > calc(13rem * 6)) {
  .mag-6Max.mag-sm > .magic-parent {
    width: calc(13rem * 6);
  }
}

@container magic (width > calc(13rem * 7)) {
  .mag-7Max.mag-sm > .magic-parent {
    width: calc(13rem * 7);
  }
}

@container magic (max-width: calc(25rem * 2)) {
  .mag-md > .magic-parent {
    width: 25rem;
  }
}
@container magic (width > calc(25rem * 2)) and (max-width: calc(25rem * 3)) {
  .mag-md > .magic-parent {
    width: calc(25rem * 2);
  }
}
@container magic (width > calc(25rem * 1)) {
  .mag-1Max.mag-md > .magic-parent {
    width: calc(25rem * 1);
  }
}

@container magic (width > calc(25rem * 3)) and (max-width: calc(25rem * 4)) {
  .mag-md > .magic-parent {
    width: calc(25rem * 3);
  }
}
@container magic (width > calc(25rem * 1)) {
  .mag-1Max.mag-md > .magic-parent {
    width: calc(25rem * 1);
  }
}

@container magic (width > calc(25rem * 2)) {
  .mag-2Max.mag-md > .magic-parent {
    width: calc(25rem * 2);
  }
}

@container magic (width > calc(25rem * 4)) and (max-width: calc(25rem * 5)) {
  .mag-md > .magic-parent {
    width: calc(25rem * 4);
  }
}
@container magic (width > calc(25rem * 1)) {
  .mag-1Max.mag-md > .magic-parent {
    width: calc(25rem * 1);
  }
}

@container magic (width > calc(25rem * 2)) {
  .mag-2Max.mag-md > .magic-parent {
    width: calc(25rem * 2);
  }
}

@container magic (width > calc(25rem * 3)) {
  .mag-3Max.mag-md > .magic-parent {
    width: calc(25rem * 3);
  }
}

@container magic (width > calc(25rem * 5)) and (max-width: calc(25rem * 6)) {
  .mag-md > .magic-parent {
    width: calc(25rem * 5);
  }
}
@container magic (width > calc(25rem * 1)) {
  .mag-1Max.mag-md > .magic-parent {
    width: calc(25rem * 1);
  }
}

@container magic (width > calc(25rem * 2)) {
  .mag-2Max.mag-md > .magic-parent {
    width: calc(25rem * 2);
  }
}

@container magic (width > calc(25rem * 3)) {
  .mag-3Max.mag-md > .magic-parent {
    width: calc(25rem * 3);
  }
}

@container magic (width > calc(25rem * 4)) {
  .mag-4Max.mag-md > .magic-parent {
    width: calc(25rem * 4);
  }
}

@container magic (width > calc(25rem * 6)) and (max-width: calc(25rem * 7)) {
  .mag-md > .magic-parent {
    width: calc(25rem * 6);
  }
}
@container magic (width > calc(25rem * 1)) {
  .mag-1Max.mag-md > .magic-parent {
    width: calc(25rem * 1);
  }
}

@container magic (width > calc(25rem * 2)) {
  .mag-2Max.mag-md > .magic-parent {
    width: calc(25rem * 2);
  }
}

@container magic (width > calc(25rem * 3)) {
  .mag-3Max.mag-md > .magic-parent {
    width: calc(25rem * 3);
  }
}

@container magic (width > calc(25rem * 4)) {
  .mag-4Max.mag-md > .magic-parent {
    width: calc(25rem * 4);
  }
}

@container magic (width > calc(25rem * 5)) {
  .mag-5Max.mag-md > .magic-parent {
    width: calc(25rem * 5);
  }
}

@container magic (width > calc(25rem * 7)) and (max-width: calc(25rem * 8)) {
  .mag-md > .magic-parent {
    width: calc(25rem * 7);
  }
}
@container magic (width > calc(25rem * 1)) {
  .mag-1Max.mag-md > .magic-parent {
    width: calc(25rem * 1);
  }
}

@container magic (width > calc(25rem * 2)) {
  .mag-2Max.mag-md > .magic-parent {
    width: calc(25rem * 2);
  }
}

@container magic (width > calc(25rem * 3)) {
  .mag-3Max.mag-md > .magic-parent {
    width: calc(25rem * 3);
  }
}

@container magic (width > calc(25rem * 4)) {
  .mag-4Max.mag-md > .magic-parent {
    width: calc(25rem * 4);
  }
}

@container magic (width > calc(25rem * 5)) {
  .mag-5Max.mag-md > .magic-parent {
    width: calc(25rem * 5);
  }
}

@container magic (width > calc(25rem * 6)) {
  .mag-6Max.mag-md > .magic-parent {
    width: calc(25rem * 6);
  }
}

@container magic (min-width: calc(25rem * 8)) {
  .mag-md > .magic-parent {
    max-width: calc(25rem * 8);
  }
}
@container magic (width > calc(25rem * 1)) {
  .mag-1Max.mag-md > .magic-parent {
    width: calc(25rem * 1);
  }
}

@container magic (width > calc(25rem * 2)) {
  .mag-2Max.mag-md > .magic-parent {
    width: calc(25rem * 2);
  }
}

@container magic (width > calc(25rem * 3)) {
  .mag-3Max.mag-md > .magic-parent {
    width: calc(25rem * 3);
  }
}

@container magic (width > calc(25rem * 4)) {
  .mag-4Max.mag-md > .magic-parent {
    width: calc(25rem * 4);
  }
}

@container magic (width > calc(25rem * 5)) {
  .mag-5Max.mag-md > .magic-parent {
    width: calc(25rem * 5);
  }
}

@container magic (width > calc(25rem * 6)) {
  .mag-6Max.mag-md > .magic-parent {
    width: calc(25rem * 6);
  }
}

@container magic (width > calc(25rem * 7)) {
  .mag-7Max.mag-md > .magic-parent {
    width: calc(25rem * 7);
  }
}

@container magic (max-width: calc(37rem * 2)) {
  .mag-lg > .magic-parent {
    width: 37rem;
  }
}
@container magic (width > calc(37rem * 2)) and (max-width: calc(37rem * 3)) {
  .mag-lg > .magic-parent {
    width: calc(37rem * 2);
  }
}
@container magic (width > calc(37rem * 1)) {
  .mag-1Max.mag-lg > .magic-parent {
    width: calc(37rem * 1);
  }
}

@container magic (width > calc(37rem * 3)) and (max-width: calc(37rem * 4)) {
  .mag-lg > .magic-parent {
    width: calc(37rem * 3);
  }
}
@container magic (width > calc(37rem * 1)) {
  .mag-1Max.mag-lg > .magic-parent {
    width: calc(37rem * 1);
  }
}

@container magic (width > calc(37rem * 2)) {
  .mag-2Max.mag-lg > .magic-parent {
    width: calc(37rem * 2);
  }
}

@container magic (width > calc(37rem * 4)) and (max-width: calc(37rem * 5)) {
  .mag-lg > .magic-parent {
    width: calc(37rem * 4);
  }
}
@container magic (width > calc(37rem * 1)) {
  .mag-1Max.mag-lg > .magic-parent {
    width: calc(37rem * 1);
  }
}

@container magic (width > calc(37rem * 2)) {
  .mag-2Max.mag-lg > .magic-parent {
    width: calc(37rem * 2);
  }
}

@container magic (width > calc(37rem * 3)) {
  .mag-3Max.mag-lg > .magic-parent {
    width: calc(37rem * 3);
  }
}

@container magic (width > calc(37rem * 5)) and (max-width: calc(37rem * 6)) {
  .mag-lg > .magic-parent {
    width: calc(37rem * 5);
  }
}
@container magic (width > calc(37rem * 1)) {
  .mag-1Max.mag-lg > .magic-parent {
    width: calc(37rem * 1);
  }
}

@container magic (width > calc(37rem * 2)) {
  .mag-2Max.mag-lg > .magic-parent {
    width: calc(37rem * 2);
  }
}

@container magic (width > calc(37rem * 3)) {
  .mag-3Max.mag-lg > .magic-parent {
    width: calc(37rem * 3);
  }
}

@container magic (width > calc(37rem * 4)) {
  .mag-4Max.mag-lg > .magic-parent {
    width: calc(37rem * 4);
  }
}

@container magic (width > calc(37rem * 6)) and (max-width: calc(37rem * 7)) {
  .mag-lg > .magic-parent {
    width: calc(37rem * 6);
  }
}
@container magic (width > calc(37rem * 1)) {
  .mag-1Max.mag-lg > .magic-parent {
    width: calc(37rem * 1);
  }
}

@container magic (width > calc(37rem * 2)) {
  .mag-2Max.mag-lg > .magic-parent {
    width: calc(37rem * 2);
  }
}

@container magic (width > calc(37rem * 3)) {
  .mag-3Max.mag-lg > .magic-parent {
    width: calc(37rem * 3);
  }
}

@container magic (width > calc(37rem * 4)) {
  .mag-4Max.mag-lg > .magic-parent {
    width: calc(37rem * 4);
  }
}

@container magic (width > calc(37rem * 5)) {
  .mag-5Max.mag-lg > .magic-parent {
    width: calc(37rem * 5);
  }
}

@container magic (width > calc(37rem * 7)) and (max-width: calc(37rem * 8)) {
  .mag-lg > .magic-parent {
    width: calc(37rem * 7);
  }
}
@container magic (width > calc(37rem * 1)) {
  .mag-1Max.mag-lg > .magic-parent {
    width: calc(37rem * 1);
  }
}

@container magic (width > calc(37rem * 2)) {
  .mag-2Max.mag-lg > .magic-parent {
    width: calc(37rem * 2);
  }
}

@container magic (width > calc(37rem * 3)) {
  .mag-3Max.mag-lg > .magic-parent {
    width: calc(37rem * 3);
  }
}

@container magic (width > calc(37rem * 4)) {
  .mag-4Max.mag-lg > .magic-parent {
    width: calc(37rem * 4);
  }
}

@container magic (width > calc(37rem * 5)) {
  .mag-5Max.mag-lg > .magic-parent {
    width: calc(37rem * 5);
  }
}

@container magic (width > calc(37rem * 6)) {
  .mag-6Max.mag-lg > .magic-parent {
    width: calc(37rem * 6);
  }
}

@container magic (min-width: calc(37rem * 8)) {
  .mag-lg > .magic-parent {
    max-width: calc(37rem * 8);
  }
}
@container magic (width > calc(37rem * 1)) {
  .mag-1Max.mag-lg > .magic-parent {
    width: calc(37rem * 1);
  }
}

@container magic (width > calc(37rem * 2)) {
  .mag-2Max.mag-lg > .magic-parent {
    width: calc(37rem * 2);
  }
}

@container magic (width > calc(37rem * 3)) {
  .mag-3Max.mag-lg > .magic-parent {
    width: calc(37rem * 3);
  }
}

@container magic (width > calc(37rem * 4)) {
  .mag-4Max.mag-lg > .magic-parent {
    width: calc(37rem * 4);
  }
}

@container magic (width > calc(37rem * 5)) {
  .mag-5Max.mag-lg > .magic-parent {
    width: calc(37rem * 5);
  }
}

@container magic (width > calc(37rem * 6)) {
  .mag-6Max.mag-lg > .magic-parent {
    width: calc(37rem * 6);
  }
}

@container magic (width > calc(37rem * 7)) {
  .mag-7Max.mag-lg > .magic-parent {
    width: calc(37rem * 7);
  }
}

@container magic (max-width: calc(50rem * 2)) {
  .mag-xl > .magic-parent {
    width: 50rem;
  }
}
@container magic (width > calc(50rem * 2)) and (max-width: calc(50rem * 3)) {
  .mag-xl > .magic-parent {
    width: calc(50rem * 2);
  }
}
@container magic (width > calc(50rem * 1)) {
  .mag-1Max.mag-xl > .magic-parent {
    width: calc(50rem * 1);
  }
}

@container magic (width > calc(50rem * 3)) and (max-width: calc(50rem * 4)) {
  .mag-xl > .magic-parent {
    width: calc(50rem * 3);
  }
}
@container magic (width > calc(50rem * 1)) {
  .mag-1Max.mag-xl > .magic-parent {
    width: calc(50rem * 1);
  }
}

@container magic (width > calc(50rem * 2)) {
  .mag-2Max.mag-xl > .magic-parent {
    width: calc(50rem * 2);
  }
}

@container magic (width > calc(50rem * 4)) and (max-width: calc(50rem * 5)) {
  .mag-xl > .magic-parent {
    width: calc(50rem * 4);
  }
}
@container magic (width > calc(50rem * 1)) {
  .mag-1Max.mag-xl > .magic-parent {
    width: calc(50rem * 1);
  }
}

@container magic (width > calc(50rem * 2)) {
  .mag-2Max.mag-xl > .magic-parent {
    width: calc(50rem * 2);
  }
}

@container magic (width > calc(50rem * 3)) {
  .mag-3Max.mag-xl > .magic-parent {
    width: calc(50rem * 3);
  }
}

@container magic (width > calc(50rem * 5)) and (max-width: calc(50rem * 6)) {
  .mag-xl > .magic-parent {
    width: calc(50rem * 5);
  }
}
@container magic (width > calc(50rem * 1)) {
  .mag-1Max.mag-xl > .magic-parent {
    width: calc(50rem * 1);
  }
}

@container magic (width > calc(50rem * 2)) {
  .mag-2Max.mag-xl > .magic-parent {
    width: calc(50rem * 2);
  }
}

@container magic (width > calc(50rem * 3)) {
  .mag-3Max.mag-xl > .magic-parent {
    width: calc(50rem * 3);
  }
}

@container magic (width > calc(50rem * 4)) {
  .mag-4Max.mag-xl > .magic-parent {
    width: calc(50rem * 4);
  }
}

@container magic (width > calc(50rem * 6)) and (max-width: calc(50rem * 7)) {
  .mag-xl > .magic-parent {
    width: calc(50rem * 6);
  }
}
@container magic (width > calc(50rem * 1)) {
  .mag-1Max.mag-xl > .magic-parent {
    width: calc(50rem * 1);
  }
}

@container magic (width > calc(50rem * 2)) {
  .mag-2Max.mag-xl > .magic-parent {
    width: calc(50rem * 2);
  }
}

@container magic (width > calc(50rem * 3)) {
  .mag-3Max.mag-xl > .magic-parent {
    width: calc(50rem * 3);
  }
}

@container magic (width > calc(50rem * 4)) {
  .mag-4Max.mag-xl > .magic-parent {
    width: calc(50rem * 4);
  }
}

@container magic (width > calc(50rem * 5)) {
  .mag-5Max.mag-xl > .magic-parent {
    width: calc(50rem * 5);
  }
}

@container magic (width > calc(50rem * 7)) and (max-width: calc(50rem * 8)) {
  .mag-xl > .magic-parent {
    width: calc(50rem * 7);
  }
}
@container magic (width > calc(50rem * 1)) {
  .mag-1Max.mag-xl > .magic-parent {
    width: calc(50rem * 1);
  }
}

@container magic (width > calc(50rem * 2)) {
  .mag-2Max.mag-xl > .magic-parent {
    width: calc(50rem * 2);
  }
}

@container magic (width > calc(50rem * 3)) {
  .mag-3Max.mag-xl > .magic-parent {
    width: calc(50rem * 3);
  }
}

@container magic (width > calc(50rem * 4)) {
  .mag-4Max.mag-xl > .magic-parent {
    width: calc(50rem * 4);
  }
}

@container magic (width > calc(50rem * 5)) {
  .mag-5Max.mag-xl > .magic-parent {
    width: calc(50rem * 5);
  }
}

@container magic (width > calc(50rem * 6)) {
  .mag-6Max.mag-xl > .magic-parent {
    width: calc(50rem * 6);
  }
}

@container magic (min-width: calc(50rem * 8)) {
  .mag-xl > .magic-parent {
    max-width: calc(50rem * 8);
  }
}
@container magic (width > calc(50rem * 1)) {
  .mag-1Max.mag-xl > .magic-parent {
    width: calc(50rem * 1);
  }
}

@container magic (width > calc(50rem * 2)) {
  .mag-2Max.mag-xl > .magic-parent {
    width: calc(50rem * 2);
  }
}

@container magic (width > calc(50rem * 3)) {
  .mag-3Max.mag-xl > .magic-parent {
    width: calc(50rem * 3);
  }
}

@container magic (width > calc(50rem * 4)) {
  .mag-4Max.mag-xl > .magic-parent {
    width: calc(50rem * 4);
  }
}

@container magic (width > calc(50rem * 5)) {
  .mag-5Max.mag-xl > .magic-parent {
    width: calc(50rem * 5);
  }
}

@container magic (width > calc(50rem * 6)) {
  .mag-6Max.mag-xl > .magic-parent {
    width: calc(50rem * 6);
  }
}

@container magic (width > calc(50rem * 7)) {
  .mag-7Max.mag-xl > .magic-parent {
    width: calc(50rem * 7);
  }
}

@container magic (max-width: calc(75rem * 2)) {
  .mag-xxl > .magic-parent {
    width: 75rem;
  }
}
@container magic (width > calc(75rem * 2)) and (max-width: calc(75rem * 3)) {
  .mag-xxl > .magic-parent {
    width: calc(75rem * 2);
  }
}
@container magic (width > calc(75rem * 1)) {
  .mag-1Max.mag-xxl > .magic-parent {
    width: calc(75rem * 1);
  }
}

@container magic (width > calc(75rem * 3)) and (max-width: calc(75rem * 4)) {
  .mag-xxl > .magic-parent {
    width: calc(75rem * 3);
  }
}
@container magic (width > calc(75rem * 1)) {
  .mag-1Max.mag-xxl > .magic-parent {
    width: calc(75rem * 1);
  }
}

@container magic (width > calc(75rem * 2)) {
  .mag-2Max.mag-xxl > .magic-parent {
    width: calc(75rem * 2);
  }
}

@container magic (width > calc(75rem * 4)) and (max-width: calc(75rem * 5)) {
  .mag-xxl > .magic-parent {
    width: calc(75rem * 4);
  }
}
@container magic (width > calc(75rem * 1)) {
  .mag-1Max.mag-xxl > .magic-parent {
    width: calc(75rem * 1);
  }
}

@container magic (width > calc(75rem * 2)) {
  .mag-2Max.mag-xxl > .magic-parent {
    width: calc(75rem * 2);
  }
}

@container magic (width > calc(75rem * 3)) {
  .mag-3Max.mag-xxl > .magic-parent {
    width: calc(75rem * 3);
  }
}

@container magic (width > calc(75rem * 5)) and (max-width: calc(75rem * 6)) {
  .mag-xxl > .magic-parent {
    width: calc(75rem * 5);
  }
}
@container magic (width > calc(75rem * 1)) {
  .mag-1Max.mag-xxl > .magic-parent {
    width: calc(75rem * 1);
  }
}

@container magic (width > calc(75rem * 2)) {
  .mag-2Max.mag-xxl > .magic-parent {
    width: calc(75rem * 2);
  }
}

@container magic (width > calc(75rem * 3)) {
  .mag-3Max.mag-xxl > .magic-parent {
    width: calc(75rem * 3);
  }
}

@container magic (width > calc(75rem * 4)) {
  .mag-4Max.mag-xxl > .magic-parent {
    width: calc(75rem * 4);
  }
}

@container magic (width > calc(75rem * 6)) and (max-width: calc(75rem * 7)) {
  .mag-xxl > .magic-parent {
    width: calc(75rem * 6);
  }
}
@container magic (width > calc(75rem * 1)) {
  .mag-1Max.mag-xxl > .magic-parent {
    width: calc(75rem * 1);
  }
}

@container magic (width > calc(75rem * 2)) {
  .mag-2Max.mag-xxl > .magic-parent {
    width: calc(75rem * 2);
  }
}

@container magic (width > calc(75rem * 3)) {
  .mag-3Max.mag-xxl > .magic-parent {
    width: calc(75rem * 3);
  }
}

@container magic (width > calc(75rem * 4)) {
  .mag-4Max.mag-xxl > .magic-parent {
    width: calc(75rem * 4);
  }
}

@container magic (width > calc(75rem * 5)) {
  .mag-5Max.mag-xxl > .magic-parent {
    width: calc(75rem * 5);
  }
}

@container magic (width > calc(75rem * 7)) and (max-width: calc(75rem * 8)) {
  .mag-xxl > .magic-parent {
    width: calc(75rem * 7);
  }
}
@container magic (width > calc(75rem * 1)) {
  .mag-1Max.mag-xxl > .magic-parent {
    width: calc(75rem * 1);
  }
}

@container magic (width > calc(75rem * 2)) {
  .mag-2Max.mag-xxl > .magic-parent {
    width: calc(75rem * 2);
  }
}

@container magic (width > calc(75rem * 3)) {
  .mag-3Max.mag-xxl > .magic-parent {
    width: calc(75rem * 3);
  }
}

@container magic (width > calc(75rem * 4)) {
  .mag-4Max.mag-xxl > .magic-parent {
    width: calc(75rem * 4);
  }
}

@container magic (width > calc(75rem * 5)) {
  .mag-5Max.mag-xxl > .magic-parent {
    width: calc(75rem * 5);
  }
}

@container magic (width > calc(75rem * 6)) {
  .mag-6Max.mag-xxl > .magic-parent {
    width: calc(75rem * 6);
  }
}

@container magic (min-width: calc(75rem * 8)) {
  .mag-xxl > .magic-parent {
    max-width: calc(75rem * 8);
  }
}
@container magic (width > calc(75rem * 1)) {
  .mag-1Max.mag-xxl > .magic-parent {
    width: calc(75rem * 1);
  }
}

@container magic (width > calc(75rem * 2)) {
  .mag-2Max.mag-xxl > .magic-parent {
    width: calc(75rem * 2);
  }
}

@container magic (width > calc(75rem * 3)) {
  .mag-3Max.mag-xxl > .magic-parent {
    width: calc(75rem * 3);
  }
}

@container magic (width > calc(75rem * 4)) {
  .mag-4Max.mag-xxl > .magic-parent {
    width: calc(75rem * 4);
  }
}

@container magic (width > calc(75rem * 5)) {
  .mag-5Max.mag-xxl > .magic-parent {
    width: calc(75rem * 5);
  }
}

@container magic (width > calc(75rem * 6)) {
  .mag-6Max.mag-xxl > .magic-parent {
    width: calc(75rem * 6);
  }
}

@container magic (width > calc(75rem * 7)) {
  .mag-7Max.mag-xxl > .magic-parent {
    width: calc(75rem * 7);
  }
}

@container magic (max-width: calc(6rem * 2)) {
  .mag-xxs {
    width: 6rem;
  }
  .mag-xxs > .magic-parent *.fle-flipflop {
    flex-direction: column;
  }
}
@container magic (width > calc(6rem * 2)) and (max-width: calc(6rem * 3)) {
  .mag-xxs {
    width: calc(6rem * 2);
  }
}
@container magic (width > calc(6rem * 1)) {
  .mag-1Max.mag-xxs > .magic {
    width: calc(6rem * 1);
  }
}

@container magic (width > calc(6rem * 3)) and (max-width: calc(6rem * 4)) {
  .mag-xxs {
    width: calc(6rem * 3);
  }
}
@container magic (width > calc(6rem * 1)) {
  .mag-1Max.mag-xxs > .magic {
    width: calc(6rem * 1);
  }
}

@container magic (width > calc(6rem * 2)) {
  .mag-2Max.mag-xxs > .magic {
    width: calc(6rem * 2);
  }
}

@container magic (width > calc(6rem * 4)) and (max-width: calc(6rem * 5)) {
  .mag-xxs {
    width: calc(6rem * 4);
  }
}
@container magic (width > calc(6rem * 1)) {
  .mag-1Max.mag-xxs > .magic {
    width: calc(6rem * 1);
  }
}

@container magic (width > calc(6rem * 2)) {
  .mag-2Max.mag-xxs > .magic {
    width: calc(6rem * 2);
  }
}

@container magic (width > calc(6rem * 3)) {
  .mag-3Max.mag-xxs > .magic {
    width: calc(6rem * 3);
  }
}

@container magic (width > calc(6rem * 5)) and (max-width: calc(6rem * 6)) {
  .mag-xxs {
    width: calc(6rem * 5);
  }
}
@container magic (width > calc(6rem * 1)) {
  .mag-1Max.mag-xxs > .magic {
    width: calc(6rem * 1);
  }
}

@container magic (width > calc(6rem * 2)) {
  .mag-2Max.mag-xxs > .magic {
    width: calc(6rem * 2);
  }
}

@container magic (width > calc(6rem * 3)) {
  .mag-3Max.mag-xxs > .magic {
    width: calc(6rem * 3);
  }
}

@container magic (width > calc(6rem * 4)) {
  .mag-4Max.mag-xxs > .magic {
    width: calc(6rem * 4);
  }
}

@container magic (width > calc(6rem * 6)) and (max-width: calc(6rem * 7)) {
  .mag-xxs {
    width: calc(6rem * 6);
  }
}
@container magic (width > calc(6rem * 1)) {
  .mag-1Max.mag-xxs > .magic {
    width: calc(6rem * 1);
  }
}

@container magic (width > calc(6rem * 2)) {
  .mag-2Max.mag-xxs > .magic {
    width: calc(6rem * 2);
  }
}

@container magic (width > calc(6rem * 3)) {
  .mag-3Max.mag-xxs > .magic {
    width: calc(6rem * 3);
  }
}

@container magic (width > calc(6rem * 4)) {
  .mag-4Max.mag-xxs > .magic {
    width: calc(6rem * 4);
  }
}

@container magic (width > calc(6rem * 5)) {
  .mag-5Max.mag-xxs > .magic {
    width: calc(6rem * 5);
  }
}

@container magic (width > calc(6rem * 7)) and (max-width: calc(6rem * 8)) {
  .mag-xxs {
    width: calc(6rem * 7);
  }
}
@container magic (width > calc(6rem * 1)) {
  .mag-1Max.mag-xxs > .magic {
    width: calc(6rem * 1);
  }
}

@container magic (width > calc(6rem * 2)) {
  .mag-2Max.mag-xxs > .magic {
    width: calc(6rem * 2);
  }
}

@container magic (width > calc(6rem * 3)) {
  .mag-3Max.mag-xxs > .magic {
    width: calc(6rem * 3);
  }
}

@container magic (width > calc(6rem * 4)) {
  .mag-4Max.mag-xxs > .magic {
    width: calc(6rem * 4);
  }
}

@container magic (width > calc(6rem * 5)) {
  .mag-5Max.mag-xxs > .magic {
    width: calc(6rem * 5);
  }
}

@container magic (width > calc(6rem * 6)) {
  .mag-6Max.mag-xxs > .magic {
    width: calc(6rem * 6);
  }
}

@container magic (min-width: calc(6rem * 8)) {
  .mag-xxs {
    max-width: calc(6rem * 8);
  }
}
@container magic (width > calc(6rem * 1)) {
  .mag-1Max.mag-xxs > .magic {
    width: calc(6rem * 1);
  }
}

@container magic (width > calc(6rem * 2)) {
  .mag-2Max.mag-xxs > .magic {
    width: calc(6rem * 2);
  }
}

@container magic (width > calc(6rem * 3)) {
  .mag-3Max.mag-xxs > .magic {
    width: calc(6rem * 3);
  }
}

@container magic (width > calc(6rem * 4)) {
  .mag-4Max.mag-xxs > .magic {
    width: calc(6rem * 4);
  }
}

@container magic (width > calc(6rem * 5)) {
  .mag-5Max.mag-xxs > .magic {
    width: calc(6rem * 5);
  }
}

@container magic (width > calc(6rem * 6)) {
  .mag-6Max.mag-xxs > .magic {
    width: calc(6rem * 6);
  }
}

@container magic (width > calc(6rem * 7)) {
  .mag-7Max.mag-xxs > .magic {
    width: calc(6rem * 7);
  }
}

@container magic (max-width: calc(9rem * 2)) {
  .mag-xs {
    width: 9rem;
  }
  .mag-xs > .magic-parent *.fle-flipflop {
    flex-direction: column;
  }
}
@container magic (width > calc(9rem * 2)) and (max-width: calc(9rem * 3)) {
  .mag-xs {
    width: calc(9rem * 2);
  }
}
@container magic (width > calc(9rem * 1)) {
  .mag-1Max.mag-xs > .magic {
    width: calc(9rem * 1);
  }
}

@container magic (width > calc(9rem * 3)) and (max-width: calc(9rem * 4)) {
  .mag-xs {
    width: calc(9rem * 3);
  }
}
@container magic (width > calc(9rem * 1)) {
  .mag-1Max.mag-xs > .magic {
    width: calc(9rem * 1);
  }
}

@container magic (width > calc(9rem * 2)) {
  .mag-2Max.mag-xs > .magic {
    width: calc(9rem * 2);
  }
}

@container magic (width > calc(9rem * 4)) and (max-width: calc(9rem * 5)) {
  .mag-xs {
    width: calc(9rem * 4);
  }
}
@container magic (width > calc(9rem * 1)) {
  .mag-1Max.mag-xs > .magic {
    width: calc(9rem * 1);
  }
}

@container magic (width > calc(9rem * 2)) {
  .mag-2Max.mag-xs > .magic {
    width: calc(9rem * 2);
  }
}

@container magic (width > calc(9rem * 3)) {
  .mag-3Max.mag-xs > .magic {
    width: calc(9rem * 3);
  }
}

@container magic (width > calc(9rem * 5)) and (max-width: calc(9rem * 6)) {
  .mag-xs {
    width: calc(9rem * 5);
  }
}
@container magic (width > calc(9rem * 1)) {
  .mag-1Max.mag-xs > .magic {
    width: calc(9rem * 1);
  }
}

@container magic (width > calc(9rem * 2)) {
  .mag-2Max.mag-xs > .magic {
    width: calc(9rem * 2);
  }
}

@container magic (width > calc(9rem * 3)) {
  .mag-3Max.mag-xs > .magic {
    width: calc(9rem * 3);
  }
}

@container magic (width > calc(9rem * 4)) {
  .mag-4Max.mag-xs > .magic {
    width: calc(9rem * 4);
  }
}

@container magic (width > calc(9rem * 6)) and (max-width: calc(9rem * 7)) {
  .mag-xs {
    width: calc(9rem * 6);
  }
}
@container magic (width > calc(9rem * 1)) {
  .mag-1Max.mag-xs > .magic {
    width: calc(9rem * 1);
  }
}

@container magic (width > calc(9rem * 2)) {
  .mag-2Max.mag-xs > .magic {
    width: calc(9rem * 2);
  }
}

@container magic (width > calc(9rem * 3)) {
  .mag-3Max.mag-xs > .magic {
    width: calc(9rem * 3);
  }
}

@container magic (width > calc(9rem * 4)) {
  .mag-4Max.mag-xs > .magic {
    width: calc(9rem * 4);
  }
}

@container magic (width > calc(9rem * 5)) {
  .mag-5Max.mag-xs > .magic {
    width: calc(9rem * 5);
  }
}

@container magic (width > calc(9rem * 7)) and (max-width: calc(9rem * 8)) {
  .mag-xs {
    width: calc(9rem * 7);
  }
}
@container magic (width > calc(9rem * 1)) {
  .mag-1Max.mag-xs > .magic {
    width: calc(9rem * 1);
  }
}

@container magic (width > calc(9rem * 2)) {
  .mag-2Max.mag-xs > .magic {
    width: calc(9rem * 2);
  }
}

@container magic (width > calc(9rem * 3)) {
  .mag-3Max.mag-xs > .magic {
    width: calc(9rem * 3);
  }
}

@container magic (width > calc(9rem * 4)) {
  .mag-4Max.mag-xs > .magic {
    width: calc(9rem * 4);
  }
}

@container magic (width > calc(9rem * 5)) {
  .mag-5Max.mag-xs > .magic {
    width: calc(9rem * 5);
  }
}

@container magic (width > calc(9rem * 6)) {
  .mag-6Max.mag-xs > .magic {
    width: calc(9rem * 6);
  }
}

@container magic (min-width: calc(9rem * 8)) {
  .mag-xs {
    max-width: calc(9rem * 8);
  }
}
@container magic (width > calc(9rem * 1)) {
  .mag-1Max.mag-xs > .magic {
    width: calc(9rem * 1);
  }
}

@container magic (width > calc(9rem * 2)) {
  .mag-2Max.mag-xs > .magic {
    width: calc(9rem * 2);
  }
}

@container magic (width > calc(9rem * 3)) {
  .mag-3Max.mag-xs > .magic {
    width: calc(9rem * 3);
  }
}

@container magic (width > calc(9rem * 4)) {
  .mag-4Max.mag-xs > .magic {
    width: calc(9rem * 4);
  }
}

@container magic (width > calc(9rem * 5)) {
  .mag-5Max.mag-xs > .magic {
    width: calc(9rem * 5);
  }
}

@container magic (width > calc(9rem * 6)) {
  .mag-6Max.mag-xs > .magic {
    width: calc(9rem * 6);
  }
}

@container magic (width > calc(9rem * 7)) {
  .mag-7Max.mag-xs > .magic {
    width: calc(9rem * 7);
  }
}

@container magic (max-width: calc(13rem * 2)) {
  .mag-sm {
    width: 13rem;
  }
  .mag-sm > .magic-parent *.fle-flipflop {
    flex-direction: column;
  }
}
@container magic (width > calc(13rem * 2)) and (max-width: calc(13rem * 3)) {
  .mag-sm {
    width: calc(13rem * 2);
  }
}
@container magic (width > calc(13rem * 1)) {
  .mag-1Max.mag-sm > .magic {
    width: calc(13rem * 1);
  }
}

@container magic (width > calc(13rem * 3)) and (max-width: calc(13rem * 4)) {
  .mag-sm {
    width: calc(13rem * 3);
  }
}
@container magic (width > calc(13rem * 1)) {
  .mag-1Max.mag-sm > .magic {
    width: calc(13rem * 1);
  }
}

@container magic (width > calc(13rem * 2)) {
  .mag-2Max.mag-sm > .magic {
    width: calc(13rem * 2);
  }
}

@container magic (width > calc(13rem * 4)) and (max-width: calc(13rem * 5)) {
  .mag-sm {
    width: calc(13rem * 4);
  }
}
@container magic (width > calc(13rem * 1)) {
  .mag-1Max.mag-sm > .magic {
    width: calc(13rem * 1);
  }
}

@container magic (width > calc(13rem * 2)) {
  .mag-2Max.mag-sm > .magic {
    width: calc(13rem * 2);
  }
}

@container magic (width > calc(13rem * 3)) {
  .mag-3Max.mag-sm > .magic {
    width: calc(13rem * 3);
  }
}

@container magic (width > calc(13rem * 5)) and (max-width: calc(13rem * 6)) {
  .mag-sm {
    width: calc(13rem * 5);
  }
}
@container magic (width > calc(13rem * 1)) {
  .mag-1Max.mag-sm > .magic {
    width: calc(13rem * 1);
  }
}

@container magic (width > calc(13rem * 2)) {
  .mag-2Max.mag-sm > .magic {
    width: calc(13rem * 2);
  }
}

@container magic (width > calc(13rem * 3)) {
  .mag-3Max.mag-sm > .magic {
    width: calc(13rem * 3);
  }
}

@container magic (width > calc(13rem * 4)) {
  .mag-4Max.mag-sm > .magic {
    width: calc(13rem * 4);
  }
}

@container magic (width > calc(13rem * 6)) and (max-width: calc(13rem * 7)) {
  .mag-sm {
    width: calc(13rem * 6);
  }
}
@container magic (width > calc(13rem * 1)) {
  .mag-1Max.mag-sm > .magic {
    width: calc(13rem * 1);
  }
}

@container magic (width > calc(13rem * 2)) {
  .mag-2Max.mag-sm > .magic {
    width: calc(13rem * 2);
  }
}

@container magic (width > calc(13rem * 3)) {
  .mag-3Max.mag-sm > .magic {
    width: calc(13rem * 3);
  }
}

@container magic (width > calc(13rem * 4)) {
  .mag-4Max.mag-sm > .magic {
    width: calc(13rem * 4);
  }
}

@container magic (width > calc(13rem * 5)) {
  .mag-5Max.mag-sm > .magic {
    width: calc(13rem * 5);
  }
}

@container magic (width > calc(13rem * 7)) and (max-width: calc(13rem * 8)) {
  .mag-sm {
    width: calc(13rem * 7);
  }
}
@container magic (width > calc(13rem * 1)) {
  .mag-1Max.mag-sm > .magic {
    width: calc(13rem * 1);
  }
}

@container magic (width > calc(13rem * 2)) {
  .mag-2Max.mag-sm > .magic {
    width: calc(13rem * 2);
  }
}

@container magic (width > calc(13rem * 3)) {
  .mag-3Max.mag-sm > .magic {
    width: calc(13rem * 3);
  }
}

@container magic (width > calc(13rem * 4)) {
  .mag-4Max.mag-sm > .magic {
    width: calc(13rem * 4);
  }
}

@container magic (width > calc(13rem * 5)) {
  .mag-5Max.mag-sm > .magic {
    width: calc(13rem * 5);
  }
}

@container magic (width > calc(13rem * 6)) {
  .mag-6Max.mag-sm > .magic {
    width: calc(13rem * 6);
  }
}

@container magic (min-width: calc(13rem * 8)) {
  .mag-sm {
    max-width: calc(13rem * 8);
  }
}
@container magic (width > calc(13rem * 1)) {
  .mag-1Max.mag-sm > .magic {
    width: calc(13rem * 1);
  }
}

@container magic (width > calc(13rem * 2)) {
  .mag-2Max.mag-sm > .magic {
    width: calc(13rem * 2);
  }
}

@container magic (width > calc(13rem * 3)) {
  .mag-3Max.mag-sm > .magic {
    width: calc(13rem * 3);
  }
}

@container magic (width > calc(13rem * 4)) {
  .mag-4Max.mag-sm > .magic {
    width: calc(13rem * 4);
  }
}

@container magic (width > calc(13rem * 5)) {
  .mag-5Max.mag-sm > .magic {
    width: calc(13rem * 5);
  }
}

@container magic (width > calc(13rem * 6)) {
  .mag-6Max.mag-sm > .magic {
    width: calc(13rem * 6);
  }
}

@container magic (width > calc(13rem * 7)) {
  .mag-7Max.mag-sm > .magic {
    width: calc(13rem * 7);
  }
}

@container magic (max-width: calc(25rem * 2)) {
  .mag-md {
    width: 25rem;
  }
  .mag-md > .magic-parent *.fle-flipflop {
    flex-direction: column;
  }
}
@container magic (width > calc(25rem * 2)) and (max-width: calc(25rem * 3)) {
  .mag-md {
    width: calc(25rem * 2);
  }
}
@container magic (width > calc(25rem * 1)) {
  .mag-1Max.mag-md > .magic {
    width: calc(25rem * 1);
  }
}

@container magic (width > calc(25rem * 3)) and (max-width: calc(25rem * 4)) {
  .mag-md {
    width: calc(25rem * 3);
  }
}
@container magic (width > calc(25rem * 1)) {
  .mag-1Max.mag-md > .magic {
    width: calc(25rem * 1);
  }
}

@container magic (width > calc(25rem * 2)) {
  .mag-2Max.mag-md > .magic {
    width: calc(25rem * 2);
  }
}

@container magic (width > calc(25rem * 4)) and (max-width: calc(25rem * 5)) {
  .mag-md {
    width: calc(25rem * 4);
  }
}
@container magic (width > calc(25rem * 1)) {
  .mag-1Max.mag-md > .magic {
    width: calc(25rem * 1);
  }
}

@container magic (width > calc(25rem * 2)) {
  .mag-2Max.mag-md > .magic {
    width: calc(25rem * 2);
  }
}

@container magic (width > calc(25rem * 3)) {
  .mag-3Max.mag-md > .magic {
    width: calc(25rem * 3);
  }
}

@container magic (width > calc(25rem * 5)) and (max-width: calc(25rem * 6)) {
  .mag-md {
    width: calc(25rem * 5);
  }
}
@container magic (width > calc(25rem * 1)) {
  .mag-1Max.mag-md > .magic {
    width: calc(25rem * 1);
  }
}

@container magic (width > calc(25rem * 2)) {
  .mag-2Max.mag-md > .magic {
    width: calc(25rem * 2);
  }
}

@container magic (width > calc(25rem * 3)) {
  .mag-3Max.mag-md > .magic {
    width: calc(25rem * 3);
  }
}

@container magic (width > calc(25rem * 4)) {
  .mag-4Max.mag-md > .magic {
    width: calc(25rem * 4);
  }
}

@container magic (width > calc(25rem * 6)) and (max-width: calc(25rem * 7)) {
  .mag-md {
    width: calc(25rem * 6);
  }
}
@container magic (width > calc(25rem * 1)) {
  .mag-1Max.mag-md > .magic {
    width: calc(25rem * 1);
  }
}

@container magic (width > calc(25rem * 2)) {
  .mag-2Max.mag-md > .magic {
    width: calc(25rem * 2);
  }
}

@container magic (width > calc(25rem * 3)) {
  .mag-3Max.mag-md > .magic {
    width: calc(25rem * 3);
  }
}

@container magic (width > calc(25rem * 4)) {
  .mag-4Max.mag-md > .magic {
    width: calc(25rem * 4);
  }
}

@container magic (width > calc(25rem * 5)) {
  .mag-5Max.mag-md > .magic {
    width: calc(25rem * 5);
  }
}

@container magic (width > calc(25rem * 7)) and (max-width: calc(25rem * 8)) {
  .mag-md {
    width: calc(25rem * 7);
  }
}
@container magic (width > calc(25rem * 1)) {
  .mag-1Max.mag-md > .magic {
    width: calc(25rem * 1);
  }
}

@container magic (width > calc(25rem * 2)) {
  .mag-2Max.mag-md > .magic {
    width: calc(25rem * 2);
  }
}

@container magic (width > calc(25rem * 3)) {
  .mag-3Max.mag-md > .magic {
    width: calc(25rem * 3);
  }
}

@container magic (width > calc(25rem * 4)) {
  .mag-4Max.mag-md > .magic {
    width: calc(25rem * 4);
  }
}

@container magic (width > calc(25rem * 5)) {
  .mag-5Max.mag-md > .magic {
    width: calc(25rem * 5);
  }
}

@container magic (width > calc(25rem * 6)) {
  .mag-6Max.mag-md > .magic {
    width: calc(25rem * 6);
  }
}

@container magic (min-width: calc(25rem * 8)) {
  .mag-md {
    max-width: calc(25rem * 8);
  }
}
@container magic (width > calc(25rem * 1)) {
  .mag-1Max.mag-md > .magic {
    width: calc(25rem * 1);
  }
}

@container magic (width > calc(25rem * 2)) {
  .mag-2Max.mag-md > .magic {
    width: calc(25rem * 2);
  }
}

@container magic (width > calc(25rem * 3)) {
  .mag-3Max.mag-md > .magic {
    width: calc(25rem * 3);
  }
}

@container magic (width > calc(25rem * 4)) {
  .mag-4Max.mag-md > .magic {
    width: calc(25rem * 4);
  }
}

@container magic (width > calc(25rem * 5)) {
  .mag-5Max.mag-md > .magic {
    width: calc(25rem * 5);
  }
}

@container magic (width > calc(25rem * 6)) {
  .mag-6Max.mag-md > .magic {
    width: calc(25rem * 6);
  }
}

@container magic (width > calc(25rem * 7)) {
  .mag-7Max.mag-md > .magic {
    width: calc(25rem * 7);
  }
}

@container magic (max-width: calc(37rem * 2)) {
  .mag-lg {
    width: 37rem;
  }
  .mag-lg > .magic-parent *.fle-flipflop {
    flex-direction: column;
  }
}
@container magic (width > calc(37rem * 2)) and (max-width: calc(37rem * 3)) {
  .mag-lg {
    width: calc(37rem * 2);
  }
}
@container magic (width > calc(37rem * 1)) {
  .mag-1Max.mag-lg > .magic {
    width: calc(37rem * 1);
  }
}

@container magic (width > calc(37rem * 3)) and (max-width: calc(37rem * 4)) {
  .mag-lg {
    width: calc(37rem * 3);
  }
}
@container magic (width > calc(37rem * 1)) {
  .mag-1Max.mag-lg > .magic {
    width: calc(37rem * 1);
  }
}

@container magic (width > calc(37rem * 2)) {
  .mag-2Max.mag-lg > .magic {
    width: calc(37rem * 2);
  }
}

@container magic (width > calc(37rem * 4)) and (max-width: calc(37rem * 5)) {
  .mag-lg {
    width: calc(37rem * 4);
  }
}
@container magic (width > calc(37rem * 1)) {
  .mag-1Max.mag-lg > .magic {
    width: calc(37rem * 1);
  }
}

@container magic (width > calc(37rem * 2)) {
  .mag-2Max.mag-lg > .magic {
    width: calc(37rem * 2);
  }
}

@container magic (width > calc(37rem * 3)) {
  .mag-3Max.mag-lg > .magic {
    width: calc(37rem * 3);
  }
}

@container magic (width > calc(37rem * 5)) and (max-width: calc(37rem * 6)) {
  .mag-lg {
    width: calc(37rem * 5);
  }
}
@container magic (width > calc(37rem * 1)) {
  .mag-1Max.mag-lg > .magic {
    width: calc(37rem * 1);
  }
}

@container magic (width > calc(37rem * 2)) {
  .mag-2Max.mag-lg > .magic {
    width: calc(37rem * 2);
  }
}

@container magic (width > calc(37rem * 3)) {
  .mag-3Max.mag-lg > .magic {
    width: calc(37rem * 3);
  }
}

@container magic (width > calc(37rem * 4)) {
  .mag-4Max.mag-lg > .magic {
    width: calc(37rem * 4);
  }
}

@container magic (width > calc(37rem * 6)) and (max-width: calc(37rem * 7)) {
  .mag-lg {
    width: calc(37rem * 6);
  }
}
@container magic (width > calc(37rem * 1)) {
  .mag-1Max.mag-lg > .magic {
    width: calc(37rem * 1);
  }
}

@container magic (width > calc(37rem * 2)) {
  .mag-2Max.mag-lg > .magic {
    width: calc(37rem * 2);
  }
}

@container magic (width > calc(37rem * 3)) {
  .mag-3Max.mag-lg > .magic {
    width: calc(37rem * 3);
  }
}

@container magic (width > calc(37rem * 4)) {
  .mag-4Max.mag-lg > .magic {
    width: calc(37rem * 4);
  }
}

@container magic (width > calc(37rem * 5)) {
  .mag-5Max.mag-lg > .magic {
    width: calc(37rem * 5);
  }
}

@container magic (width > calc(37rem * 7)) and (max-width: calc(37rem * 8)) {
  .mag-lg {
    width: calc(37rem * 7);
  }
}
@container magic (width > calc(37rem * 1)) {
  .mag-1Max.mag-lg > .magic {
    width: calc(37rem * 1);
  }
}

@container magic (width > calc(37rem * 2)) {
  .mag-2Max.mag-lg > .magic {
    width: calc(37rem * 2);
  }
}

@container magic (width > calc(37rem * 3)) {
  .mag-3Max.mag-lg > .magic {
    width: calc(37rem * 3);
  }
}

@container magic (width > calc(37rem * 4)) {
  .mag-4Max.mag-lg > .magic {
    width: calc(37rem * 4);
  }
}

@container magic (width > calc(37rem * 5)) {
  .mag-5Max.mag-lg > .magic {
    width: calc(37rem * 5);
  }
}

@container magic (width > calc(37rem * 6)) {
  .mag-6Max.mag-lg > .magic {
    width: calc(37rem * 6);
  }
}

@container magic (min-width: calc(37rem * 8)) {
  .mag-lg {
    max-width: calc(37rem * 8);
  }
}
@container magic (width > calc(37rem * 1)) {
  .mag-1Max.mag-lg > .magic {
    width: calc(37rem * 1);
  }
}

@container magic (width > calc(37rem * 2)) {
  .mag-2Max.mag-lg > .magic {
    width: calc(37rem * 2);
  }
}

@container magic (width > calc(37rem * 3)) {
  .mag-3Max.mag-lg > .magic {
    width: calc(37rem * 3);
  }
}

@container magic (width > calc(37rem * 4)) {
  .mag-4Max.mag-lg > .magic {
    width: calc(37rem * 4);
  }
}

@container magic (width > calc(37rem * 5)) {
  .mag-5Max.mag-lg > .magic {
    width: calc(37rem * 5);
  }
}

@container magic (width > calc(37rem * 6)) {
  .mag-6Max.mag-lg > .magic {
    width: calc(37rem * 6);
  }
}

@container magic (width > calc(37rem * 7)) {
  .mag-7Max.mag-lg > .magic {
    width: calc(37rem * 7);
  }
}

@container magic (max-width: calc(50rem * 2)) {
  .mag-xl {
    width: 50rem;
  }
  .mag-xl > .magic-parent *.fle-flipflop {
    flex-direction: column;
  }
}
@container magic (width > calc(50rem * 2)) and (max-width: calc(50rem * 3)) {
  .mag-xl {
    width: calc(50rem * 2);
  }
}
@container magic (width > calc(50rem * 1)) {
  .mag-1Max.mag-xl > .magic {
    width: calc(50rem * 1);
  }
}

@container magic (width > calc(50rem * 3)) and (max-width: calc(50rem * 4)) {
  .mag-xl {
    width: calc(50rem * 3);
  }
}
@container magic (width > calc(50rem * 1)) {
  .mag-1Max.mag-xl > .magic {
    width: calc(50rem * 1);
  }
}

@container magic (width > calc(50rem * 2)) {
  .mag-2Max.mag-xl > .magic {
    width: calc(50rem * 2);
  }
}

@container magic (width > calc(50rem * 4)) and (max-width: calc(50rem * 5)) {
  .mag-xl {
    width: calc(50rem * 4);
  }
}
@container magic (width > calc(50rem * 1)) {
  .mag-1Max.mag-xl > .magic {
    width: calc(50rem * 1);
  }
}

@container magic (width > calc(50rem * 2)) {
  .mag-2Max.mag-xl > .magic {
    width: calc(50rem * 2);
  }
}

@container magic (width > calc(50rem * 3)) {
  .mag-3Max.mag-xl > .magic {
    width: calc(50rem * 3);
  }
}

@container magic (width > calc(50rem * 5)) and (max-width: calc(50rem * 6)) {
  .mag-xl {
    width: calc(50rem * 5);
  }
}
@container magic (width > calc(50rem * 1)) {
  .mag-1Max.mag-xl > .magic {
    width: calc(50rem * 1);
  }
}

@container magic (width > calc(50rem * 2)) {
  .mag-2Max.mag-xl > .magic {
    width: calc(50rem * 2);
  }
}

@container magic (width > calc(50rem * 3)) {
  .mag-3Max.mag-xl > .magic {
    width: calc(50rem * 3);
  }
}

@container magic (width > calc(50rem * 4)) {
  .mag-4Max.mag-xl > .magic {
    width: calc(50rem * 4);
  }
}

@container magic (width > calc(50rem * 6)) and (max-width: calc(50rem * 7)) {
  .mag-xl {
    width: calc(50rem * 6);
  }
}
@container magic (width > calc(50rem * 1)) {
  .mag-1Max.mag-xl > .magic {
    width: calc(50rem * 1);
  }
}

@container magic (width > calc(50rem * 2)) {
  .mag-2Max.mag-xl > .magic {
    width: calc(50rem * 2);
  }
}

@container magic (width > calc(50rem * 3)) {
  .mag-3Max.mag-xl > .magic {
    width: calc(50rem * 3);
  }
}

@container magic (width > calc(50rem * 4)) {
  .mag-4Max.mag-xl > .magic {
    width: calc(50rem * 4);
  }
}

@container magic (width > calc(50rem * 5)) {
  .mag-5Max.mag-xl > .magic {
    width: calc(50rem * 5);
  }
}

@container magic (width > calc(50rem * 7)) and (max-width: calc(50rem * 8)) {
  .mag-xl {
    width: calc(50rem * 7);
  }
}
@container magic (width > calc(50rem * 1)) {
  .mag-1Max.mag-xl > .magic {
    width: calc(50rem * 1);
  }
}

@container magic (width > calc(50rem * 2)) {
  .mag-2Max.mag-xl > .magic {
    width: calc(50rem * 2);
  }
}

@container magic (width > calc(50rem * 3)) {
  .mag-3Max.mag-xl > .magic {
    width: calc(50rem * 3);
  }
}

@container magic (width > calc(50rem * 4)) {
  .mag-4Max.mag-xl > .magic {
    width: calc(50rem * 4);
  }
}

@container magic (width > calc(50rem * 5)) {
  .mag-5Max.mag-xl > .magic {
    width: calc(50rem * 5);
  }
}

@container magic (width > calc(50rem * 6)) {
  .mag-6Max.mag-xl > .magic {
    width: calc(50rem * 6);
  }
}

@container magic (min-width: calc(50rem * 8)) {
  .mag-xl {
    max-width: calc(50rem * 8);
  }
}
@container magic (width > calc(50rem * 1)) {
  .mag-1Max.mag-xl > .magic {
    width: calc(50rem * 1);
  }
}

@container magic (width > calc(50rem * 2)) {
  .mag-2Max.mag-xl > .magic {
    width: calc(50rem * 2);
  }
}

@container magic (width > calc(50rem * 3)) {
  .mag-3Max.mag-xl > .magic {
    width: calc(50rem * 3);
  }
}

@container magic (width > calc(50rem * 4)) {
  .mag-4Max.mag-xl > .magic {
    width: calc(50rem * 4);
  }
}

@container magic (width > calc(50rem * 5)) {
  .mag-5Max.mag-xl > .magic {
    width: calc(50rem * 5);
  }
}

@container magic (width > calc(50rem * 6)) {
  .mag-6Max.mag-xl > .magic {
    width: calc(50rem * 6);
  }
}

@container magic (width > calc(50rem * 7)) {
  .mag-7Max.mag-xl > .magic {
    width: calc(50rem * 7);
  }
}

@container magic (max-width: calc(75rem * 2)) {
  .mag-xxl {
    width: 75rem;
  }
  .mag-xxl > .magic-parent *.fle-flipflop {
    flex-direction: column;
  }
}
@container magic (width > calc(75rem * 2)) and (max-width: calc(75rem * 3)) {
  .mag-xxl {
    width: calc(75rem * 2);
  }
}
@container magic (width > calc(75rem * 1)) {
  .mag-1Max.mag-xxl > .magic {
    width: calc(75rem * 1);
  }
}

@container magic (width > calc(75rem * 3)) and (max-width: calc(75rem * 4)) {
  .mag-xxl {
    width: calc(75rem * 3);
  }
}
@container magic (width > calc(75rem * 1)) {
  .mag-1Max.mag-xxl > .magic {
    width: calc(75rem * 1);
  }
}

@container magic (width > calc(75rem * 2)) {
  .mag-2Max.mag-xxl > .magic {
    width: calc(75rem * 2);
  }
}

@container magic (width > calc(75rem * 4)) and (max-width: calc(75rem * 5)) {
  .mag-xxl {
    width: calc(75rem * 4);
  }
}
@container magic (width > calc(75rem * 1)) {
  .mag-1Max.mag-xxl > .magic {
    width: calc(75rem * 1);
  }
}

@container magic (width > calc(75rem * 2)) {
  .mag-2Max.mag-xxl > .magic {
    width: calc(75rem * 2);
  }
}

@container magic (width > calc(75rem * 3)) {
  .mag-3Max.mag-xxl > .magic {
    width: calc(75rem * 3);
  }
}

@container magic (width > calc(75rem * 5)) and (max-width: calc(75rem * 6)) {
  .mag-xxl {
    width: calc(75rem * 5);
  }
}
@container magic (width > calc(75rem * 1)) {
  .mag-1Max.mag-xxl > .magic {
    width: calc(75rem * 1);
  }
}

@container magic (width > calc(75rem * 2)) {
  .mag-2Max.mag-xxl > .magic {
    width: calc(75rem * 2);
  }
}

@container magic (width > calc(75rem * 3)) {
  .mag-3Max.mag-xxl > .magic {
    width: calc(75rem * 3);
  }
}

@container magic (width > calc(75rem * 4)) {
  .mag-4Max.mag-xxl > .magic {
    width: calc(75rem * 4);
  }
}

@container magic (width > calc(75rem * 6)) and (max-width: calc(75rem * 7)) {
  .mag-xxl {
    width: calc(75rem * 6);
  }
}
@container magic (width > calc(75rem * 1)) {
  .mag-1Max.mag-xxl > .magic {
    width: calc(75rem * 1);
  }
}

@container magic (width > calc(75rem * 2)) {
  .mag-2Max.mag-xxl > .magic {
    width: calc(75rem * 2);
  }
}

@container magic (width > calc(75rem * 3)) {
  .mag-3Max.mag-xxl > .magic {
    width: calc(75rem * 3);
  }
}

@container magic (width > calc(75rem * 4)) {
  .mag-4Max.mag-xxl > .magic {
    width: calc(75rem * 4);
  }
}

@container magic (width > calc(75rem * 5)) {
  .mag-5Max.mag-xxl > .magic {
    width: calc(75rem * 5);
  }
}

@container magic (width > calc(75rem * 7)) and (max-width: calc(75rem * 8)) {
  .mag-xxl {
    width: calc(75rem * 7);
  }
}
@container magic (width > calc(75rem * 1)) {
  .mag-1Max.mag-xxl > .magic {
    width: calc(75rem * 1);
  }
}

@container magic (width > calc(75rem * 2)) {
  .mag-2Max.mag-xxl > .magic {
    width: calc(75rem * 2);
  }
}

@container magic (width > calc(75rem * 3)) {
  .mag-3Max.mag-xxl > .magic {
    width: calc(75rem * 3);
  }
}

@container magic (width > calc(75rem * 4)) {
  .mag-4Max.mag-xxl > .magic {
    width: calc(75rem * 4);
  }
}

@container magic (width > calc(75rem * 5)) {
  .mag-5Max.mag-xxl > .magic {
    width: calc(75rem * 5);
  }
}

@container magic (width > calc(75rem * 6)) {
  .mag-6Max.mag-xxl > .magic {
    width: calc(75rem * 6);
  }
}

@container magic (min-width: calc(75rem * 8)) {
  .mag-xxl {
    max-width: calc(75rem * 8);
  }
}
@container magic (width > calc(75rem * 1)) {
  .mag-1Max.mag-xxl > .magic {
    width: calc(75rem * 1);
  }
}

@container magic (width > calc(75rem * 2)) {
  .mag-2Max.mag-xxl > .magic {
    width: calc(75rem * 2);
  }
}

@container magic (width > calc(75rem * 3)) {
  .mag-3Max.mag-xxl > .magic {
    width: calc(75rem * 3);
  }
}

@container magic (width > calc(75rem * 4)) {
  .mag-4Max.mag-xxl > .magic {
    width: calc(75rem * 4);
  }
}

@container magic (width > calc(75rem * 5)) {
  .mag-5Max.mag-xxl > .magic {
    width: calc(75rem * 5);
  }
}

@container magic (width > calc(75rem * 6)) {
  .mag-6Max.mag-xxl > .magic {
    width: calc(75rem * 6);
  }
}

@container magic (width > calc(75rem * 7)) {
  .mag-7Max.mag-xxl > .magic {
    width: calc(75rem * 7);
  }
}

.mag-xxs > .magic-parent > .magic-child {
  width: 6rem;
}

.mag-xxs > .magic-parent > .magic-child1 {
  width: 6rem;
}

.mag-xxs > .magic-parent > .magic-child2 {
  width: 12rem;
}

.mag-xxs > .magic-parent > .magic-child3 {
  width: 18rem;
}

.mag-xxs > .magic-parent > .magic-child4 {
  width: 24rem;
}

.mag-xxs > .magic-parent > .magic-child5 {
  width: 30rem;
}

.mag-xxs > .magic-parent > .magic-child6 {
  width: 36rem;
}

.mag-xxs > .magic-parent > .magic-child7 {
  width: 42rem;
}

.mag-xxs > .magic-parent > .magic-child8 {
  width: 48rem;
}

.mag-xs > .magic-parent > .magic-child {
  width: 9rem;
}

.mag-xs > .magic-parent > .magic-child1 {
  width: 9rem;
}

.mag-xs > .magic-parent > .magic-child2 {
  width: 18rem;
}

.mag-xs > .magic-parent > .magic-child3 {
  width: 27rem;
}

.mag-xs > .magic-parent > .magic-child4 {
  width: 36rem;
}

.mag-xs > .magic-parent > .magic-child5 {
  width: 45rem;
}

.mag-xs > .magic-parent > .magic-child6 {
  width: 54rem;
}

.mag-xs > .magic-parent > .magic-child7 {
  width: 63rem;
}

.mag-xs > .magic-parent > .magic-child8 {
  width: 72rem;
}

.mag-sm > .magic-parent > .magic-child {
  width: 13rem;
}

.mag-sm > .magic-parent > .magic-child1 {
  width: 13rem;
}

.mag-sm > .magic-parent > .magic-child2 {
  width: 26rem;
}

.mag-sm > .magic-parent > .magic-child3 {
  width: 39rem;
}

.mag-sm > .magic-parent > .magic-child4 {
  width: 52rem;
}

.mag-sm > .magic-parent > .magic-child5 {
  width: 65rem;
}

.mag-sm > .magic-parent > .magic-child6 {
  width: 78rem;
}

.mag-sm > .magic-parent > .magic-child7 {
  width: 91rem;
}

.mag-sm > .magic-parent > .magic-child8 {
  width: 104rem;
}

.mag-md > .magic-parent > .magic-child {
  width: 25rem;
}

.mag-md > .magic-parent > .magic-child1 {
  width: 25rem;
}

.mag-md > .magic-parent > .magic-child2 {
  width: 50rem;
}

.mag-md > .magic-parent > .magic-child3 {
  width: 75rem;
}

.mag-md > .magic-parent > .magic-child4 {
  width: 100rem;
}

.mag-md > .magic-parent > .magic-child5 {
  width: 125rem;
}

.mag-md > .magic-parent > .magic-child6 {
  width: 150rem;
}

.mag-md > .magic-parent > .magic-child7 {
  width: 175rem;
}

.mag-md > .magic-parent > .magic-child8 {
  width: 200rem;
}

.mag-lg > .magic-parent > .magic-child {
  width: 37rem;
}

.mag-lg > .magic-parent > .magic-child1 {
  width: 37rem;
}

.mag-lg > .magic-parent > .magic-child2 {
  width: 74rem;
}

.mag-lg > .magic-parent > .magic-child3 {
  width: 111rem;
}

.mag-lg > .magic-parent > .magic-child4 {
  width: 148rem;
}

.mag-lg > .magic-parent > .magic-child5 {
  width: 185rem;
}

.mag-lg > .magic-parent > .magic-child6 {
  width: 222rem;
}

.mag-lg > .magic-parent > .magic-child7 {
  width: 259rem;
}

.mag-lg > .magic-parent > .magic-child8 {
  width: 296rem;
}

.mag-xl > .magic-parent > .magic-child {
  width: 50rem;
}

.mag-xl > .magic-parent > .magic-child1 {
  width: 50rem;
}

.mag-xl > .magic-parent > .magic-child2 {
  width: 100rem;
}

.mag-xl > .magic-parent > .magic-child3 {
  width: 150rem;
}

.mag-xl > .magic-parent > .magic-child4 {
  width: 200rem;
}

.mag-xl > .magic-parent > .magic-child5 {
  width: 250rem;
}

.mag-xl > .magic-parent > .magic-child6 {
  width: 300rem;
}

.mag-xl > .magic-parent > .magic-child7 {
  width: 350rem;
}

.mag-xl > .magic-parent > .magic-child8 {
  width: 400rem;
}

.mag-xxl > .magic-parent > .magic-child {
  width: 50rem;
}

.mag-xxl > .magic-parent > .magic-child1 {
  width: 50rem;
}

.mag-xxl > .magic-parent > .magic-child2 {
  width: 100rem;
}

.mag-xxl > .magic-parent > .magic-child3 {
  width: 150rem;
}

.mag-xxl > .magic-parent > .magic-child4 {
  width: 200rem;
}

.mag-xxl > .magic-parent > .magic-child5 {
  width: 250rem;
}

.mag-xxl > .magic-parent > .magic-child6 {
  width: 300rem;
}

.mag-xxl > .magic-parent > .magic-child7 {
  width: 350rem;
}

.mag-xxl > .magic-parent > .magic-child8 {
  width: 400rem;
}

.cel-xxs2cells {
  max-width: 12rem;
  width: 100%;
}

.cel-xxs3cells {
  max-width: 18rem;
  width: 100%;
}

.cel-xxs4cells {
  max-width: 24rem;
  width: 100%;
}

.cel-xxs5cells {
  max-width: 30rem;
  width: 100%;
}

.cel-xxs6cells {
  max-width: 36rem;
  width: 100%;
}

.cel-xxs7cells {
  max-width: 42rem;
  width: 100%;
}

.cel-xxs8cells {
  max-width: 48rem;
  width: 100%;
}

.cel-xs2cells {
  max-width: 18rem;
  width: 100%;
}

.cel-xs3cells {
  max-width: 27rem;
  width: 100%;
}

.cel-xs4cells {
  max-width: 36rem;
  width: 100%;
}

.cel-xs5cells {
  max-width: 45rem;
  width: 100%;
}

.cel-xs6cells {
  max-width: 54rem;
  width: 100%;
}

.cel-xs7cells {
  max-width: 63rem;
  width: 100%;
}

.cel-xs8cells {
  max-width: 72rem;
  width: 100%;
}

.cel-sm2cells {
  max-width: 26rem;
  width: 100%;
}

.cel-sm3cells {
  max-width: 39rem;
  width: 100%;
}

.cel-sm4cells {
  max-width: 52rem;
  width: 100%;
}

.cel-sm5cells {
  max-width: 65rem;
  width: 100%;
}

.cel-sm6cells {
  max-width: 78rem;
  width: 100%;
}

.cel-sm7cells {
  max-width: 91rem;
  width: 100%;
}

.cel-sm8cells {
  max-width: 104rem;
  width: 100%;
}

.cel-md2cells {
  max-width: 50rem;
  width: 100%;
}

.cel-md3cells {
  max-width: 75rem;
  width: 100%;
}

.cel-md4cells {
  max-width: 100rem;
  width: 100%;
}

.cel-md5cells {
  max-width: 125rem;
  width: 100%;
}

.cel-md6cells {
  max-width: 150rem;
  width: 100%;
}

.cel-md7cells {
  max-width: 175rem;
  width: 100%;
}

.cel-md8cells {
  max-width: 200rem;
  width: 100%;
}

.cel-lg2cells {
  max-width: 74rem;
  width: 100%;
}

.cel-lg3cells {
  max-width: 111rem;
  width: 100%;
}

.cel-lg4cells {
  max-width: 148rem;
  width: 100%;
}

.cel-lg5cells {
  max-width: 185rem;
  width: 100%;
}

.cel-lg6cells {
  max-width: 222rem;
  width: 100%;
}

.cel-lg7cells {
  max-width: 259rem;
  width: 100%;
}

.cel-lg8cells {
  max-width: 296rem;
  width: 100%;
}

.cel-xl2cells {
  max-width: 100rem;
  width: 100%;
}

.cel-xl3cells {
  max-width: 150rem;
  width: 100%;
}

.cel-xl4cells {
  max-width: 200rem;
  width: 100%;
}

.cel-xl5cells {
  max-width: 250rem;
  width: 100%;
}

.cel-xl6cells {
  max-width: 300rem;
  width: 100%;
}

.cel-xl7cells {
  max-width: 350rem;
  width: 100%;
}

.cel-xl8cells {
  max-width: 400rem;
  width: 100%;
}

.cel-xxl2cells {
  max-width: 150rem;
  width: 100%;
}

.cel-xxl3cells {
  max-width: 225rem;
  width: 100%;
}

.cel-xxl4cells {
  max-width: 300rem;
  width: 100%;
}

.cel-xxl5cells {
  max-width: 375rem;
  width: 100%;
}

.cel-xxl6cells {
  max-width: 450rem;
  width: 100%;
}

.cel-xxl7cells {
  max-width: 525rem;
  width: 100%;
}

.cel-xxl8cells {
  max-width: 600rem;
  width: 100%;
}

.mag-gap-xxs > .magic-parent > [class^=magic-child] > * {
  margin: calc(var(--marXxs) / 2);
}

.mag-gap-xs > .magic-parent > [class^=magic-child] > * {
  margin: calc(var(--marXs) / 2);
}

.mag-gap-sm > .magic-parent > [class^=magic-child] > * {
  margin: calc(var(--marSm) / 2);
}

.mag-gap-md > .magic-parent > [class^=magic-child] > * {
  margin: calc(var(--marMd) / 2);
}

.mag-gap-lg > .magic-parent > [class^=magic-child] > * {
  margin: calc(var(--marLg) / 2);
}

.mag-gap-xl > .magic-parent > [class^=magic-child] > * {
  margin: calc(var(--marXl) / 2);
}

.mag-gap-xxl > .magic-parent > [class^=magic-child] > * {
  margin: calc(var(--marXxl) / 2);
}

.magic-parent {
  margin-left: auto;
  margin-right: auto;
  display: flex;
  flex-wrap: wrap;
}

.magic.mag-standardFlow > .magic-parent {
  width: 100%;
}

.margin.mar-xxs {
  margin: var(--marXxs);
}
.margin.mar-xs {
  margin: var(--marXs);
}
.margin.mar-sm {
  margin: var(--marSm);
}
.margin.mar-md {
  margin: var(--marMd);
}
.margin.mar-lg {
  margin: var(--marLg);
}
.margin.mar-xl {
  margin: var(--marXl);
}
.margin.mar-xxl {
  margin: var(--marXxl);
}
.margin.mar-xxsT {
  margin-top: var(--marXxs);
}
.margin.mar-xsT {
  margin-top: var(--marXs);
}
.margin.mar-smT {
  margin-top: var(--marSm);
}
.margin.mar-mdT {
  margin-top: var(--marMd);
}
.margin.mar-lgT {
  margin-top: var(--marLg);
}
.margin.mar-xlT {
  margin-top: var(--marXl);
}
.margin.mar-xxlT {
  margin-top: var(--marXxl);
}
.margin.mar-xxsR {
  margin-right: var(--marXxs);
}
.margin.mar-xsR {
  margin-right: var(--marXs);
}
.margin.mar-smR {
  margin-right: var(--marSm);
}
.margin.mar-mdR {
  margin-right: var(--marMd);
}
.margin.mar-lgR {
  margin-right: var(--marLg);
}
.margin.mar-xlR {
  margin-right: var(--marXl);
}
.margin.mar-xxlR {
  margin-right: var(--marXxl);
}
.margin.mar-xxsB {
  margin-bottom: var(--marXxs);
}
.margin.mar-xsB {
  margin-bottom: var(--marXs);
}
.margin.mar-smB {
  margin-bottom: var(--marSm);
}
.margin.mar-mdB {
  margin-bottom: var(--marMd);
}
.margin.mar-lgB {
  margin-bottom: var(--marLg);
}
.margin.mar-xlB {
  margin-bottom: var(--marXl);
}
.margin.mar-xxlB {
  margin-bottom: var(--marXxl);
}
.margin.mar-xxsL {
  margin-left: var(--marXxs);
}
.margin.mar-xsL {
  margin-left: var(--marXs);
}
.margin.mar-smL {
  margin-left: var(--marSm);
}
.margin.mar-mdL {
  margin-left: var(--marMd);
}
.margin.mar-lgL {
  margin-left: var(--marLg);
}
.margin.mar-xlL {
  margin-left: var(--marXl);
}
.margin.mar-xxlL {
  margin-left: var(--marXxl);
}
.margin.mar-xxsHr {
  margin-left: var(--marXxs);
  margin-right: var(--marXxs);
}
.margin.mar-xsHr {
  margin-left: var(--marXs);
  margin-right: var(--marXs);
}
.margin.mar-smHr {
  margin-left: var(--marSm);
  margin-right: var(--marSm);
}
.margin.mar-mdHr {
  margin-left: var(--marMd);
  margin-right: var(--marMd);
}
.margin.mar-lgHr {
  margin-left: var(--marLg);
  margin-right: var(--marLg);
}
.margin.mar-xlHr {
  margin-left: var(--marXl);
  margin-right: var(--marXl);
}
.margin.mar-xxlHr {
  margin-left: var(--marXxl);
  margin-right: var(--marXxl);
}
.margin.mar-xxsVr {
  margin-top: var(--marXxs);
  margin-bottom: var(--marXxs);
}
.margin.mar-xsVr {
  margin-top: var(--marXs);
  margin-bottom: var(--marXs);
}
.margin.mar-smVr {
  margin-top: var(--marSm);
  margin-bottom: var(--marSm);
}
.margin.mar-mdVr {
  margin-top: var(--marMd);
  margin-bottom: var(--marMd);
}
.margin.mar-lgVr {
  margin-top: var(--marLg);
  margin-bottom: var(--marLg);
}
.margin.mar-xlVr {
  margin-top: var(--marXl);
  margin-bottom: var(--marXl);
}
.margin.mar-xxlVr {
  margin-top: var(--marXxl);
  margin-bottom: var(--marXxl);
}
.margin.mar-noneT {
  margin-top: 0;
}
.margin.mar-noneR {
  margin-right: 0;
}
.margin.mar-noneB {
  margin-bottom: 0;
}
.margin.mar-noneL {
  margin-left: 0;
}
.margin.mar-noneHr {
  margin-left: 0;
  margin-right: 0;
}
.margin.mar-noneVr {
  margin-left: 0;
  margin-right: 0;
}
.margin.mar-auto {
  margin: auto;
}
.margin.mar-autoHr {
  margin-left: auto;
  margin-right: auto;
}
.margin.mar-autoVr {
  margin-top: auto;
  margin-bottom: auto;
}
.margin.mar-autoT {
  margin-top: auto;
}
.margin.mar-autoR {
  margin-right: auto;
}
.margin.mar-autoB {
  margin-bottom: auto;
}
.margin.mar-autoL {
  margin-left: auto;
}

.padding.pad-xxs {
  padding: var(--padXxs);
}
.padding.pad-xs {
  padding: var(--padXs);
}
.padding.pad-sm {
  padding: var(--padSm);
}
.padding.pad-md {
  padding: var(--padMd);
}
.padding.pad-lg {
  padding: var(--padLg);
}
.padding.pad-xl {
  padding: var(--padXl);
}
.padding.pad-xxl {
  padding: var(--padXxl);
}
.padding.pad-xxsT {
  padding-top: var(--padXxs);
}
.padding.pad-xsT {
  padding-top: var(--padXs);
}
.padding.pad-smT {
  padding-top: var(--padSm);
}
.padding.pad-mdT {
  padding-top: var(--padMd);
}
.padding.pad-lgT {
  padding-top: var(--padLg);
}
.padding.pad-xlT {
  padding-top: var(--padXl);
}
.padding.pad-xxlT {
  padding-top: var(--padXxl);
}
.padding.pad-xxsR {
  padding-right: var(--padXxs);
}
.padding.pad-xsR {
  padding-right: var(--padXs);
}
.padding.pad-smR {
  padding-right: var(--padSm);
}
.padding.pad-mdR {
  padding-right: var(--padMd);
}
.padding.pad-lgR {
  padding-right: var(--padLg);
}
.padding.pad-xlR {
  padding-right: var(--padXl);
}
.padding.pad-xxlR {
  padding-right: var(--padXxl);
}
.padding.pad-xxsB {
  padding-bottom: var(--padXxs);
}
.padding.pad-xsB {
  padding-bottom: var(--padXs);
}
.padding.pad-smB {
  padding-bottom: var(--padSm);
}
.padding.pad-mdB {
  padding-bottom: var(--padMd);
}
.padding.pad-lgB {
  padding-bottom: var(--padLg);
}
.padding.pad-xlB {
  padding-bottom: var(--padXl);
}
.padding.pad-xxlB {
  padding-bottom: var(--padXxl);
}
.padding.pad-xxsL {
  padding-left: var(--padXxs);
}
.padding.pad-xsL {
  padding-left: var(--padXs);
}
.padding.pad-smL {
  padding-left: var(--padSm);
}
.padding.pad-mdL {
  padding-left: var(--padMd);
}
.padding.pad-lgL {
  padding-left: var(--padLg);
}
.padding.pad-xlL {
  padding-left: var(--padXl);
}
.padding.pad-xxlL {
  padding-left: var(--padXxl);
}
.padding.pad-xxsHr {
  padding-left: var(--padXxs);
  padding-right: var(--padXxs);
}
.padding.pad-xsHr {
  padding-left: var(--padXs);
  padding-right: var(--padXs);
}
.padding.pad-smHr {
  padding-left: var(--padSm);
  padding-right: var(--padSm);
}
.padding.pad-mdHr {
  padding-left: var(--padMd);
  padding-right: var(--padMd);
}
.padding.pad-lgHr {
  padding-left: var(--padLg);
  padding-right: var(--padLg);
}
.padding.pad-xlHr {
  padding-left: var(--padXl);
  padding-right: var(--padXl);
}
.padding.pad-xxlHr {
  padding-left: var(--padXxl);
  padding-right: var(--padXxl);
}
.padding.pad-xxsVr {
  padding-top: var(--padXxs);
  padding-bottom: var(--padXxs);
}
.padding.pad-xsVr {
  padding-top: var(--padXs);
  padding-bottom: var(--padXs);
}
.padding.pad-smVr {
  padding-top: var(--padSm);
  padding-bottom: var(--padSm);
}
.padding.pad-mdVr {
  padding-top: var(--padMd);
  padding-bottom: var(--padMd);
}
.padding.pad-lgVr {
  padding-top: var(--padLg);
  padding-bottom: var(--padLg);
}
.padding.pad-xlVr {
  padding-top: var(--padXl);
  padding-bottom: var(--padXl);
}
.padding.pad-xxlVr {
  padding-top: var(--padXxl);
  padding-bottom: var(--padXxl);
}
.padding.pad-noneT {
  padding-top: 0;
}
.padding.pad-noneR {
  padding-right: 0;
}
.padding.pad-noneB {
  padding-bottom: 0;
}
.padding.pad-noneL {
  padding-left: 0;
}
.padding.pad-noneHr {
  padding-left: 0;
  padding-right: 0;
}
.padding.pad-noneVr {
  padding-left: 0;
  padding-right: 0;
}
.padding.pad-xsNav {
  padding-top: 1rem;
}
.padding.pad-smNav {
  padding-top: 2rem;
}
.padding.pad-mdNav {
  padding-top: 3rem;
}
.padding.pad-lgNav {
  padding-top: 4rem;
}
.padding.pad-xlNav {
  padding-top: 5rem;
}

.padding-focus.padf-xxsMinHr {
  --padfMin: var(--padXxs);
}
.padding-focus.padf-xsMinHr {
  --padfMin: var(--padXs);
}
.padding-focus.padf-smMinHr {
  --padfMin: var(--padSm);
}
.padding-focus.padf-mdMinHr {
  --padfMin: var(--padMd);
}
.padding-focus.padf-lgMinHr {
  --padfMin: var(--padLg);
}
.padding-focus.padf-xlMinHr {
  --padfMin: var(--padXl);
}
.padding-focus.padf-xxlMinHr {
  --padfMin: var(--padXxl);
}
.padding-focus.padf-xxsHr {
  padding-left: max(var(--padfMin), (100% - 12rem) / 2);
}
.padding-focus.padf-xsHr {
  padding-left: max(var(--padfMin), (100% - 18rem) / 2);
}
.padding-focus.padf-smHr {
  padding-left: max(var(--padfMin), (100% - 26rem) / 2);
}
.padding-focus.padf-mdHr {
  padding-left: max(var(--padfMin), (100% - 50rem) / 2);
}
.padding-focus.padf-lgHr {
  padding-left: max(var(--padfMin), (100% - 74rem) / 2);
}
.padding-focus.padf-xlHr {
  padding-left: max(var(--padfMin), (100% - 100rem) / 2);
}
.padding-focus.padf-xxlHr {
  padding-left: max(var(--padfMin), (100% - 150rem) / 2);
}

.pill {
  border-radius: 1.5rem;
}
.pill.no-pill {
  border-radius: 0;
}
.pill.pil-circle, .pill.pil-full {
  border-radius: 100%;
}
.pill.pil-xxs {
  border-radius: 0.25rem;
}
.pill.pil-xs {
  border-radius: 0.5rem;
}
.pill.pil-sm {
  border-radius: 1rem;
}
.pill.pil-md {
  border-radius: 1.5rem;
}
.pill.pil-lg {
  border-radius: 2rem;
}
.pill.pil-xl {
  border-radius: 3rem;
}

.position {
  position: static;
}
.position.pos-fixed {
  position: fixed;
}
.position.pos-sticky {
  position: sticky;
}
.position.pos-relative {
  position: relative;
}
.position.pos-absolute {
  position: absolute;
}

.ring {
  outline-offset: 0.15rem;
  transition: 0.05s;
  outline-color: black;
}
.ring:focus-within {
  outline: 0.2rem solid;
}
.ring:hover {
  outline: 0.2rem solid;
}

.shrink.shr-one {
  flex-shrink: 1;
}
.shrink.shr-two {
  flex-shrink: 2;
}
.shrink.shr-three {
  flex-shrink: 3;
}
.shrink.shr-four {
  flex-shrink: 4;
}
.shrink.shr-five {
  flex-shrink: 5;
}
.shrink.shr-six {
  flex-shrink: 6;
}
.shrink.shr-seven {
  flex-shrink: 7;
}
.shrink.shr-eight {
  flex-shrink: 8;
}
.shrink.shr-nine {
  flex-shrink: 9;
}
.shrink.shr-ten {
  flex-shrink: 10;
}
.shrink.shr-half {
  flex-shrink: 0.5;
}
.shrink .shr-third {
  flex-shrink: 0.33333;
}
.shrink .shr-quarter {
  flex-shrink: 0.25;
}
.shrink .shr-fifth {
  flex-shrink: 0.2;
}
.shrink .shr-sixth {
  flex-shrink: 0.166666;
}
.shrink .shr-seventh {
  flex-shrink: 0.143;
}
.shrink .shr-eighth {
  flex-shrink: 0.125;
}
.shrink .shr-ninth {
  flex-shrink: 0.1111;
}
.shrink .shr-tenth {
  flex-shrink: 0.1;
}

.text-select {
  -webkit-user-select: auto;
     -moz-user-select: auto;
          user-select: auto;
}
.text-select.texs-none {
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
}

.text-align.texa-r {
  text-align: right;
}
.text-align.texa-c {
  text-align: center;
}

.text-wrap {
  text-wrap: wrap;
}
.text-wrap.texw-wrap {
  text-wrap: wrap;
}
.text-wrap.texw-nowrap {
  text-wrap: nowrap !important;
}

.display-none {
  display: none;
}

.noscroll {
  overflow: hidden;
}

.red {
  background-color: red;
}

.redi {
  background-color: red !important;
}

.redd {
  color: red;
}

.green {
  background-color: green;
}

.yellow {
  background-color: yellow !important;
}

.blue {
  background-color: blue !important;
}

.grow {
  flex-grow: 1;
}

.box {
  width: 30rem;
}

.testr:active {
  background-color: red !important;
}

.testth {
  height: 100%;
  width: 3rem;
  left: 0;
}

.max100 {
  max-width: 100%;
}

.lowertest {
  z-index: -1;
}

.tesz {
  max-width: 100%;
}

.magicwrap {
  container: magic/inline-size;
  border: 0.1rem solid rgb(0, 0, 0) !important;
}

.testsa {
  pointer-events: none;
}

.bordered-test {
  border: 3px solid red;
}

.gggg {
  background-color: green;
}

.testabs {
  position: absolute;
}

.testrel {
  position: relative;
}

.magicchild {
  background-color: yellow;
}

@container magic (max-width: 60rem) {
  .magicchild {
    max-width: 30rem;
  }
}
.w25p {
  width: 25%;
}

.w50p {
  width: 50%;
}

.w75p {
  width: 75%;
}

.w100p {
  width: 100%;
}

.h100p {
  height: 100%;
}

.theme-default .redd {
  color: red !important;
}
.theme-default p,
.theme-default h1,
.theme-default h2,
.theme-default h3,
.theme-default h4,
.theme-default h5,
.theme-default h6 {
  color: color-mix(in srgb, hsl(0, 0%, 100%) 33%, hsl(0, 0%, 0%) 66%);
}
.theme-default a.selector {
  color: color-mix(in srgb, hsl(0, 0%, 100%) 33%, hsl(0, 0%, 0%) 66%);
}
.theme-default button,
.theme-default .button {
  transition: background-color 0.15s;
}
.theme-default button:active,
.theme-default .button:active {
  transition: background-color 0s;
}
.theme-default button.base,
.theme-default .button.base {
  background-color: hsl(0, 0%, 100%);
}
.theme-default button.base h1,
.theme-default button.base h2,
.theme-default button.base h3,
.theme-default button.base h4,
.theme-default button.base h5,
.theme-default button.base h6,
.theme-default button.base p,
.theme-default button.base a,
.theme-default button.base strong,
.theme-default button.base i,
.theme-default button.base em,
.theme-default button.base mark,
.theme-default button.base small,
.theme-default button.base del,
.theme-default button.base ins,
.theme-default button.base sub,
.theme-default button.base sup,
.theme-default button.base time,
.theme-default button.base .icon,
.theme-default button.base button,
.theme-default .button.base h1,
.theme-default .button.base h2,
.theme-default .button.base h3,
.theme-default .button.base h4,
.theme-default .button.base h5,
.theme-default .button.base h6,
.theme-default .button.base p,
.theme-default .button.base a,
.theme-default .button.base strong,
.theme-default .button.base i,
.theme-default .button.base em,
.theme-default .button.base mark,
.theme-default .button.base small,
.theme-default .button.base del,
.theme-default .button.base ins,
.theme-default .button.base sub,
.theme-default .button.base sup,
.theme-default .button.base time,
.theme-default .button.base .icon,
.theme-default .button.base button {
  color: color-mix(in srgb, hsl(0, 0%, 100%) 33%, hsl(0, 0%, 0%) 66%);
}
.theme-default button.base:hover,
.theme-default .button.base:hover {
  background-color: color-mix(in srgb, hsl(0, 0%, 0%) 40%, hsl(213, 100%, 64%) 100%);
}
.theme-default button.base:hover h1,
.theme-default button.base:hover h2,
.theme-default button.base:hover h3,
.theme-default button.base:hover h4,
.theme-default button.base:hover h5,
.theme-default button.base:hover h6,
.theme-default button.base:hover p,
.theme-default button.base:hover a,
.theme-default button.base:hover strong,
.theme-default button.base:hover i,
.theme-default button.base:hover em,
.theme-default button.base:hover mark,
.theme-default button.base:hover small,
.theme-default button.base:hover del,
.theme-default button.base:hover ins,
.theme-default button.base:hover sub,
.theme-default button.base:hover sup,
.theme-default button.base:hover time,
.theme-default button.base:hover .icon,
.theme-default button.base:hover button,
.theme-default .button.base:hover h1,
.theme-default .button.base:hover h2,
.theme-default .button.base:hover h3,
.theme-default .button.base:hover h4,
.theme-default .button.base:hover h5,
.theme-default .button.base:hover h6,
.theme-default .button.base:hover p,
.theme-default .button.base:hover a,
.theme-default .button.base:hover strong,
.theme-default .button.base:hover i,
.theme-default .button.base:hover em,
.theme-default .button.base:hover mark,
.theme-default .button.base:hover small,
.theme-default .button.base:hover del,
.theme-default .button.base:hover ins,
.theme-default .button.base:hover sub,
.theme-default .button.base:hover sup,
.theme-default .button.base:hover time,
.theme-default .button.base:hover .icon,
.theme-default .button.base:hover button {
  color: hsl(0, 0%, 100%);
}
.theme-default button.base:active,
.theme-default .button.base:active {
  background-color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 0%) 40%, hsl(213, 100%, 64%) 100%), hsl(0, 0%, 0%));
}
.theme-default button.base:active h1,
.theme-default button.base:active h2,
.theme-default button.base:active h3,
.theme-default button.base:active h4,
.theme-default button.base:active h5,
.theme-default button.base:active h6,
.theme-default button.base:active p,
.theme-default button.base:active a,
.theme-default button.base:active strong,
.theme-default button.base:active i,
.theme-default button.base:active em,
.theme-default button.base:active mark,
.theme-default button.base:active small,
.theme-default button.base:active del,
.theme-default button.base:active ins,
.theme-default button.base:active sub,
.theme-default button.base:active sup,
.theme-default button.base:active time,
.theme-default button.base:active .icon,
.theme-default button.base:active button,
.theme-default .button.base:active h1,
.theme-default .button.base:active h2,
.theme-default .button.base:active h3,
.theme-default .button.base:active h4,
.theme-default .button.base:active h5,
.theme-default .button.base:active h6,
.theme-default .button.base:active p,
.theme-default .button.base:active a,
.theme-default .button.base:active strong,
.theme-default .button.base:active i,
.theme-default .button.base:active em,
.theme-default .button.base:active mark,
.theme-default .button.base:active small,
.theme-default .button.base:active del,
.theme-default .button.base:active ins,
.theme-default .button.base:active sub,
.theme-default .button.base:active sup,
.theme-default .button.base:active time,
.theme-default .button.base:active .icon,
.theme-default .button.base:active button {
  color: hsl(0, 0%, 100%);
}
.theme-default button.but-bordered,
.theme-default .button.but-bordered {
  border-color: color-mix(in srgb, hsl(0, 0%, 100%) 75%, hsl(0, 0%, 0%) 25%);
}
.theme-default button.primary,
.theme-default .button.primary {
  box-shadow: 0px 0px 0 2px color-mix(in srgb, hsl(0, 0%, 0%) 40%, hsl(213, 100%, 64%) 100%) inset;
  background-color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 0%) 40%, hsl(213, 100%, 64%) 100%) 20%, hsl(0, 0%, 100%));
  color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 0%) 40%, hsl(213, 100%, 64%) 100%) 90%, hsl(0, 0%, 0%));
}
.theme-default button.primary > .icon,
.theme-default button.primary .element,
.theme-default .button.primary > .icon,
.theme-default .button.primary .element {
  color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 0%) 40%, hsl(213, 100%, 64%) 100%) 90%, hsl(0, 0%, 0%));
}
.theme-default button.primary.ghost,
.theme-default .button.primary.ghost {
  box-shadow: none;
}
.theme-default button.primary:hover,
.theme-default .button.primary:hover {
  background-color: color-mix(in srgb, hsl(0, 0%, 0%) 40%, hsl(213, 100%, 64%) 100%);
  color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 0%) 40%, hsl(213, 100%, 64%) 100%) 20%, hsl(0, 0%, 100%));
}
.theme-default button.primary:hover > .icon,
.theme-default button.primary:hover .element,
.theme-default .button.primary:hover > .icon,
.theme-default .button.primary:hover .element {
  color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 0%) 40%, hsl(213, 100%, 64%) 100%) 20%, hsl(0, 0%, 100%));
}
.theme-default button.primary.test-hover,
.theme-default .button.primary.test-hover {
  background-color: color-mix(in srgb, hsl(0, 0%, 0%) 40%, hsl(213, 100%, 64%) 100%);
  color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 0%) 40%, hsl(213, 100%, 64%) 100%) 10%, hsl(0, 0%, 100%));
}
.theme-default button.primary.test-hover > .icon,
.theme-default button.primary.test-hover .element,
.theme-default .button.primary.test-hover > .icon,
.theme-default .button.primary.test-hover .element {
  color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 0%) 40%, hsl(213, 100%, 64%) 100%) 20%, hsl(0, 0%, 100%));
}
.theme-default button.primary:active,
.theme-default .button.primary:active {
  background-color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 0%) 40%, hsl(213, 100%, 64%) 100%) 60%, hsl(0, 0%, 100%));
  color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 0%) 40%, hsl(213, 100%, 64%) 100%) 40%, hsl(0, 0%, 0%));
  box-shadow: 0px 0px 4px 2px color-mix(in srgb, hsl(0, 0%, 0%) 40%, hsl(213, 100%, 64%) 100%) inset;
}
.theme-default button.primary:active > .icon,
.theme-default button.primary:active .element,
.theme-default .button.primary:active > .icon,
.theme-default .button.primary:active .element {
  color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 0%) 40%, hsl(213, 100%, 64%) 100%) 40%, hsl(0, 0%, 0%));
}
.theme-default button.primary.test-active,
.theme-default .button.primary.test-active {
  background-color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 0%) 40%, hsl(213, 100%, 64%) 100%) 60%, hsl(0, 0%, 100%));
  color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 0%) 40%, hsl(213, 100%, 64%) 100%) 40%, hsl(0, 0%, 0%));
  box-shadow: 0px 0px 4px 2px color-mix(in srgb, hsl(0, 0%, 0%) 40%, hsl(213, 100%, 64%) 100%) inset;
}
.theme-default button.primary.test-active > .icon,
.theme-default button.primary.test-active .element,
.theme-default .button.primary.test-active > .icon,
.theme-default .button.primary.test-active .element {
  color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 0%) 40%, hsl(213, 100%, 64%) 100%) 40%, hsl(0, 0%, 0%));
}
.theme-default button.primary.disabled,
.theme-default .button.primary.disabled {
  background-color: color-mix(in srgb, hsl(0, 0%, 100%) 50%, hsl(0, 0%, 0%) 50%);
  pointer-events: none;
}
.theme-default button.secondary,
.theme-default .button.secondary {
  box-shadow: 0px 0px 0px 2px color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 100%) 33%, hsl(0, 0%, 0%) 66%) 90%, hsl(213, 100%, 64%) 10%) inset;
  background-color: color-mix(in srgb, color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 100%) 33%, hsl(0, 0%, 0%) 66%) 90%, hsl(213, 100%, 64%) 10%) 20%, hsl(0, 0%, 100%));
  color: color-mix(in srgb, color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 100%) 33%, hsl(0, 0%, 0%) 66%) 90%, hsl(213, 100%, 64%) 10%) 90%, hsl(0, 0%, 0%));
}
.theme-default button.secondary > .icon,
.theme-default button.secondary .element,
.theme-default .button.secondary > .icon,
.theme-default .button.secondary .element {
  color: color-mix(in srgb, color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 100%) 33%, hsl(0, 0%, 0%) 66%) 90%, hsl(213, 100%, 64%) 10%) 90%, hsl(0, 0%, 0%));
}
.theme-default button.secondary.ghost,
.theme-default .button.secondary.ghost {
  box-shadow: none;
}
.theme-default button.secondary:hover,
.theme-default .button.secondary:hover {
  background-color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 100%) 33%, hsl(0, 0%, 0%) 66%) 90%, hsl(213, 100%, 64%) 10%);
  color: color-mix(in srgb, color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 100%) 33%, hsl(0, 0%, 0%) 66%) 90%, hsl(213, 100%, 64%) 10%) 20%, hsl(0, 0%, 100%));
}
.theme-default button.secondary:hover > .icon,
.theme-default button.secondary:hover .element,
.theme-default .button.secondary:hover > .icon,
.theme-default .button.secondary:hover .element {
  color: color-mix(in srgb, color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 100%) 33%, hsl(0, 0%, 0%) 66%) 90%, hsl(213, 100%, 64%) 10%) 20%, hsl(0, 0%, 100%));
}
.theme-default button.secondary.test-hover,
.theme-default .button.secondary.test-hover {
  background-color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 100%) 33%, hsl(0, 0%, 0%) 66%) 90%, hsl(213, 100%, 64%) 10%);
  color: color-mix(in srgb, color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 100%) 33%, hsl(0, 0%, 0%) 66%) 90%, hsl(213, 100%, 64%) 10%) 10%, hsl(0, 0%, 100%));
}
.theme-default button.secondary.test-hover > .icon,
.theme-default button.secondary.test-hover .element,
.theme-default .button.secondary.test-hover > .icon,
.theme-default .button.secondary.test-hover .element {
  color: color-mix(in srgb, color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 100%) 33%, hsl(0, 0%, 0%) 66%) 90%, hsl(213, 100%, 64%) 10%) 10%, hsl(0, 0%, 100%));
}
.theme-default button.secondary:active,
.theme-default .button.secondary:active {
  background-color: color-mix(in srgb, color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 100%) 33%, hsl(0, 0%, 0%) 66%) 90%, hsl(213, 100%, 64%) 10%) 60%, hsl(0, 0%, 100%));
  color: color-mix(in srgb, color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 100%) 33%, hsl(0, 0%, 0%) 66%) 90%, hsl(213, 100%, 64%) 10%) 40%, hsl(0, 0%, 0%));
  box-shadow: 0px 0px 4px 2px color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 100%) 33%, hsl(0, 0%, 0%) 66%) 90%, hsl(213, 100%, 64%) 10%) inset;
}
.theme-default button.secondary:active > .icon,
.theme-default button.secondary:active .element,
.theme-default .button.secondary:active > .icon,
.theme-default .button.secondary:active .element {
  color: color-mix(in srgb, color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 100%) 33%, hsl(0, 0%, 0%) 66%) 90%, hsl(213, 100%, 64%) 10%) 40%, hsl(0, 0%, 0%));
}
.theme-default button.secondary.test-active,
.theme-default .button.secondary.test-active {
  background-color: color-mix(in srgb, color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 100%) 33%, hsl(0, 0%, 0%) 66%) 90%, hsl(213, 100%, 64%) 10%) 60%, hsl(0, 0%, 100%));
  color: color-mix(in srgb, color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 100%) 33%, hsl(0, 0%, 0%) 66%) 90%, hsl(213, 100%, 64%) 10%) 40%, hsl(0, 0%, 0%));
  box-shadow: 0px 0px 4px 2px color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 100%) 33%, hsl(0, 0%, 0%) 66%) 90%, hsl(213, 100%, 64%) 10%) inset;
}
.theme-default button.secondary.test-active > .icon,
.theme-default button.secondary.test-active .element,
.theme-default .button.secondary.test-active > .icon,
.theme-default .button.secondary.test-active .element {
  color: color-mix(in srgb, color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 100%) 33%, hsl(0, 0%, 0%) 66%) 90%, hsl(213, 100%, 64%) 10%) 40%, hsl(0, 0%, 0%));
}
.theme-default button.secondary.disabled,
.theme-default .button.secondary.disabled {
  background-color: color-mix(in srgb, hsl(0, 0%, 100%) 50%, hsl(0, 0%, 0%) 50%);
  pointer-events: none;
}
.theme-default button.secondary-alt,
.theme-default .button.secondary-alt {
  box-shadow: 0px 0px 0px 2px color-mix(in srgb, hsl(0, 0%, 0%) 40%, hsl(213, 100%, 64%) 100%) inset;
  background-color: color-mix(in srgb, color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 100%) 33%, hsl(0, 0%, 0%) 66%) 90%, hsl(213, 100%, 64%) 10%) 20%, hsl(0, 0%, 100%));
  color: color-mix(in srgb, color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 100%) 33%, hsl(0, 0%, 0%) 66%) 90%, hsl(213, 100%, 64%) 10%) 90%, hsl(0, 0%, 0%));
}
.theme-default button.secondary-alt > .icon,
.theme-default button.secondary-alt .element,
.theme-default .button.secondary-alt > .icon,
.theme-default .button.secondary-alt .element {
  color: color-mix(in srgb, color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 100%) 33%, hsl(0, 0%, 0%) 66%) 90%, hsl(213, 100%, 64%) 10%) 90%, hsl(0, 0%, 0%));
}
.theme-default button.secondary-alt.ghost,
.theme-default .button.secondary-alt.ghost {
  box-shadow: none;
}
.theme-default button.secondary-alt:hover,
.theme-default .button.secondary-alt:hover {
  background-color: color-mix(in srgb, hsl(0, 0%, 0%) 40%, hsl(213, 100%, 64%) 100%);
  color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 0%) 40%, hsl(213, 100%, 64%) 100%) 20%, hsl(0, 0%, 100%));
}
.theme-default button.secondary-alt:hover > .icon,
.theme-default button.secondary-alt:hover .element,
.theme-default .button.secondary-alt:hover > .icon,
.theme-default .button.secondary-alt:hover .element {
  color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 0%) 40%, hsl(213, 100%, 64%) 100%) 20%, hsl(0, 0%, 100%));
}
.theme-default button.secondary-alt.test-hover,
.theme-default .button.secondary-alt.test-hover {
  background-color: color-mix(in srgb, hsl(0, 0%, 0%) 40%, hsl(213, 100%, 64%) 100%);
  color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 0%) 40%, hsl(213, 100%, 64%) 100%) 10%, hsl(0, 0%, 100%));
}
.theme-default button.secondary-alt.test-hover > .icon,
.theme-default button.secondary-alt.test-hover .element,
.theme-default .button.secondary-alt.test-hover > .icon,
.theme-default .button.secondary-alt.test-hover .element {
  color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 0%) 40%, hsl(213, 100%, 64%) 100%) 10%, hsl(0, 0%, 100%));
}
.theme-default button.secondary-alt:active,
.theme-default .button.secondary-alt:active {
  background-color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 0%) 40%, hsl(213, 100%, 64%) 100%) 60%, hsl(0, 0%, 100%));
  color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 0%) 40%, hsl(213, 100%, 64%) 100%) 40%, hsl(0, 0%, 0%));
  box-shadow: 0px 0px 4px 2px color-mix(in srgb, hsl(0, 0%, 0%) 40%, hsl(213, 100%, 64%) 100%) inset;
}
.theme-default button.secondary-alt:active > .icon,
.theme-default button.secondary-alt:active .element,
.theme-default .button.secondary-alt:active > .icon,
.theme-default .button.secondary-alt:active .element {
  color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 0%) 40%, hsl(213, 100%, 64%) 100%) 40%, hsl(0, 0%, 0%));
}
.theme-default button.secondary-alt.test-active,
.theme-default .button.secondary-alt.test-active {
  background-color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 0%) 40%, hsl(213, 100%, 64%) 100%) 60%, hsl(0, 0%, 100%));
  color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 0%) 40%, hsl(213, 100%, 64%) 100%) 40%, hsl(0, 0%, 0%));
  box-shadow: 0px 0px 4px 2px color-mix(in srgb, hsl(0, 0%, 0%) 40%, hsl(213, 100%, 64%) 100%) inset;
}
.theme-default button.secondary-alt.test-active > .icon,
.theme-default button.secondary-alt.test-active .element,
.theme-default .button.secondary-alt.test-active > .icon,
.theme-default .button.secondary-alt.test-active .element {
  color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 0%) 40%, hsl(213, 100%, 64%) 100%) 40%, hsl(0, 0%, 0%));
}
.theme-default button.secondary-alt.disabled,
.theme-default .button.secondary-alt.disabled {
  background-color: color-mix(in srgb, hsl(0, 0%, 100%) 50%, hsl(0, 0%, 0%) 50%);
  pointer-events: none;
}
.theme-default button.warn,
.theme-default .button.warn {
  box-shadow: 0px 0px 0px 2px color-mix(in srgb, hsl(0, 0%, 0%) 10%, hsl(26, 100%, 36%) 100%) inset;
  background-color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 0%) 10%, hsl(26, 100%, 36%) 100%) 20%, hsl(0, 0%, 100%));
  color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 0%) 10%, hsl(26, 100%, 36%) 100%) 90%, hsl(0, 0%, 0%));
}
.theme-default button.warn > .icon,
.theme-default button.warn .element,
.theme-default .button.warn > .icon,
.theme-default .button.warn .element {
  color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 0%) 10%, hsl(26, 100%, 36%) 100%) 90%, hsl(0, 0%, 0%));
}
.theme-default button.warn.ghost,
.theme-default .button.warn.ghost {
  box-shadow: none;
}
.theme-default button.warn:hover,
.theme-default .button.warn:hover {
  background-color: color-mix(in srgb, hsl(0, 0%, 0%) 10%, hsl(26, 100%, 36%) 100%);
  color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 0%) 10%, hsl(26, 100%, 36%) 100%) 20%, hsl(0, 0%, 100%));
}
.theme-default button.warn:hover > .icon,
.theme-default button.warn:hover .element,
.theme-default .button.warn:hover > .icon,
.theme-default .button.warn:hover .element {
  color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 0%) 10%, hsl(26, 100%, 36%) 100%) 20%, hsl(0, 0%, 100%));
}
.theme-default button.warn.test-hover,
.theme-default .button.warn.test-hover {
  background-color: color-mix(in srgb, hsl(0, 0%, 0%) 10%, hsl(26, 100%, 36%) 100%);
  color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 0%) 10%, hsl(26, 100%, 36%) 100%) 10%, hsl(0, 0%, 100%));
}
.theme-default button.warn.test-hover > .icon,
.theme-default button.warn.test-hover .element,
.theme-default .button.warn.test-hover > .icon,
.theme-default .button.warn.test-hover .element {
  color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 0%) 10%, hsl(26, 100%, 36%) 100%) 10%, hsl(0, 0%, 100%));
}
.theme-default button.warn:active,
.theme-default .button.warn:active {
  background-color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 0%) 10%, hsl(26, 100%, 36%) 100%) 60%, hsl(0, 0%, 100%));
  color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 0%) 10%, hsl(26, 100%, 36%) 100%) 40%, hsl(0, 0%, 0%));
  box-shadow: 0px 0px 4px 2px color-mix(in srgb, hsl(0, 0%, 0%) 10%, hsl(26, 100%, 36%) 100%) inset;
}
.theme-default button.warn:active > .icon,
.theme-default button.warn:active .element,
.theme-default .button.warn:active > .icon,
.theme-default .button.warn:active .element {
  color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 0%) 10%, hsl(26, 100%, 36%) 100%) 40%, hsl(0, 0%, 0%));
}
.theme-default button.warn.test-active,
.theme-default .button.warn.test-active {
  background-color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 0%) 10%, hsl(26, 100%, 36%) 100%) 60%, hsl(0, 0%, 100%));
  color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 0%) 10%, hsl(26, 100%, 36%) 100%) 40%, hsl(0, 0%, 0%));
  box-shadow: 0px 0px 4px 2px color-mix(in srgb, hsl(0, 0%, 0%) 10%, hsl(26, 100%, 36%) 100%) inset;
}
.theme-default button.warn.test-active > .icon,
.theme-default button.warn.test-active .element,
.theme-default .button.warn.test-active > .icon,
.theme-default .button.warn.test-active .element {
  color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 0%) 10%, hsl(26, 100%, 36%) 100%) 40%, hsl(0, 0%, 0%));
}
.theme-default button.warn.disabled,
.theme-default .button.warn.disabled {
  background-color: color-mix(in srgb, hsl(0, 0%, 100%) 50%, hsl(0, 0%, 0%) 50%);
  pointer-events: none;
}
.theme-default .test-hover,
.theme-default .test-active {
  padding: 0.2rem;
}
.theme-default a {
  color: color-mix(in srgb, hsl(0, 0%, 0%) 40%, hsl(213, 100%, 64%) 100%);
}
.theme-default .text-danger {
  color: red;
}
.theme-default .spacer {
  opacity: 0 !important;
}
.theme-default .page-content,
.theme-default .page-wrapper {
  background-color: hsl(0, 0%, 100%);
}
.theme-default .left-fade {
  background-image: linear-gradient(to right, hsl(0, 0%, 100%), transparent);
}
.theme-default .right-fade {
  background-image: linear-gradient(to left, hsl(0, 0%, 100%), transparent);
}
.theme-default [class*=foco-][class$=R] {
  background-image: linear-gradient(to left, hsl(0, 0%, 100%), transparent);
}
.theme-default [class*=foco-][class$=L] {
  background-image: linear-gradient(to right, hsl(0, 0%, 100%), transparent);
}
.theme-default .overlay {
  background-color: color-mix(in srgb, hsl(0, 0%, 100%) 50%, hsl(0, 0%, 0%) 50%);
  transition: opacity 0.5s;
  opacity: 40%;
}
.theme-default .drawer-handle {
  background-color: color-mix(in srgb, hsl(0, 0%, 100%) 90%, hsl(0, 0%, 0%) 10%);
  box-shadow: 0px 2px 0.15rem 0px rgba(0, 0, 0, 0.228);
}
.theme-default .drawer-handle:hover {
  background-color: color-mix(in srgb, hsl(0, 0%, 100%) 85%, hsl(0, 0%, 0%) 15%);
}
.theme-default .drawer-handle:active {
  transition-property: background-color 0.2s;
  background-color: color-mix(in srgb, hsl(0, 0%, 100%) 90%, hsl(0, 0%, 0%) 10%);
}
.theme-default .drawer-handle > input:checked + .icon {
  transition-property: color 0.2s;
  color: hsl(213, 100%, 64%);
}
.theme-default .nav.nav-main,
.theme-default nav.nav-main {
  transition: background-color 1s, box-shadow 0.25s;
  background-color: color-mix(in srgb, hsl(0, 0%, 100%) 90%, hsl(0, 0%, 0%) 10%);
  color: color-mix(in srgb, hsl(0, 0%, 100%) 10%, hsl(0, 0%, 0%) 90%);
}
.theme-default .nav.nav-main.tint.tint,
.theme-default nav.nav-main.tint.tint {
  background-color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 100%) 85%, hsl(0, 0%, 0%) 15%) 95%, hsl(213, 100%, 64%) 5%);
}
.theme-default .nav.nav-main.scrolled,
.theme-default nav.nav-main.scrolled {
  background-color: hsl(0, 0%, 100%);
  box-shadow: 0px 2px 1rem 0px rgba(0, 0, 0, 0.383);
}
.theme-default .nav.nav-main.scrolled.tint,
.theme-default nav.nav-main.scrolled.tint {
  background-color: color-mix(in srgb, hsl(0, 0%, 100%) 95%, hsl(213, 100%, 64%) 5%);
}
.theme-default .foo.foo-main,
.theme-default footer.foo-main {
  background-color: hsl(0, 0%, 100%);
}
.theme-default .nav,
.theme-default nav,
.theme-default .footer,
.theme-default footer {
  background-color: transparent;
}
.theme-default .red {
  background-color: red;
}
.theme-default input[type=radio]:after {
  width: 0.75rem;
  aspect-ratio: 1/1;
  border-radius: 100%;
  background-color: color-mix(in srgb, hsl(0, 0%, 100%) 85%, hsl(0, 0%, 0%) 15%);
  content: "";
  display: inline-block;
  position: relative;
  top: -2px;
  border: 2px solid hsl(0, 0%, 100%);
  outline: 2px solid color-mix(in srgb, hsl(0, 0%, 100%) 66%, hsl(0, 0%, 0%) 33%);
}
.theme-default input[type=radio]:checked:after {
  outline: 2px solid color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 100%) 66%, hsl(0, 0%, 0%) 33%) 66%, hsl(213, 100%, 64%) 33%);
  background-color: hsl(213, 100%, 64%);
  border: 2px solid color-mix(in srgb, hsl(0, 0%, 100%) 66%, hsl(213, 100%, 64%) 33%);
}
.theme-default input[type=text],
.theme-default input[type=password],
.theme-default input[type=email],
.theme-default input[type=url],
.theme-default input[type=tel],
.theme-default input[type=number],
.theme-default input[type=search],
.theme-default textarea {
  background-color: color-mix(in srgb, hsl(0, 0%, 100%) 95%, hsl(0, 0%, 0%) 5%);
  color: color-mix(in srgb, hsl(0, 0%, 100%) 33%, hsl(0, 0%, 0%) 66%);
  border-color: color-mix(in srgb, hsl(0, 0%, 100%) 75%, hsl(0, 0%, 0%) 25%);
  border: 2px solid color-mix(in srgb, hsl(0, 0%, 100%) 75%, hsl(0, 0%, 0%) 25%);
}
.theme-default input[type=text]:focus,
.theme-default input[type=password]:focus,
.theme-default input[type=email]:focus,
.theme-default input[type=url]:focus,
.theme-default input[type=tel]:focus,
.theme-default input[type=number]:focus,
.theme-default input[type=search]:focus,
.theme-default textarea:focus {
  box-shadow: 0 0 5px 0 color-mix(in srgb, hsl(0, 0%, 100%) 75%, hsl(0, 0%, 0%) 25%);
  outline: none;
}
.theme-default input[type=text]:hover,
.theme-default input[type=password]:hover,
.theme-default input[type=email]:hover,
.theme-default input[type=url]:hover,
.theme-default input[type=tel]:hover,
.theme-default input[type=number]:hover,
.theme-default input[type=search]:hover,
.theme-default textarea:hover {
  box-shadow: 0 0 3px 0 color-mix(in srgb, hsl(0, 0%, 100%) 75%, hsl(0, 0%, 0%) 25%);
}
.theme-default input[type=text]:hover:focus,
.theme-default input[type=password]:hover:focus,
.theme-default input[type=email]:hover:focus,
.theme-default input[type=url]:hover:focus,
.theme-default input[type=tel]:hover:focus,
.theme-default input[type=number]:hover:focus,
.theme-default input[type=search]:hover:focus,
.theme-default textarea:hover:focus {
  box-shadow: 0 0 5px 0 color-mix(in srgb, hsl(0, 0%, 100%) 75%, hsl(0, 0%, 0%) 25%);
}
.theme-default input[type=text]:hover:active,
.theme-default input[type=password]:hover:active,
.theme-default input[type=email]:hover:active,
.theme-default input[type=url]:hover:active,
.theme-default input[type=tel]:hover:active,
.theme-default input[type=number]:hover:active,
.theme-default input[type=search]:hover:active,
.theme-default textarea:hover:active {
  box-shadow: 0 0 2px 0 color-mix(in srgb, hsl(0, 0%, 100%) 75%, hsl(0, 0%, 0%) 25%);
}
.theme-default .search-dropdown input[type=text]:focus + .search-dropdown-icon .icon {
  color: color-mix(in srgb, hsl(0, 0%, 0%) 40%, hsl(213, 100%, 64%) 100%);
}
.theme-default .search-dropdown input[type=text] + .search-dropdown-icon .icon {
  color: color-mix(in srgb, hsl(0, 0%, 100%) 85%, hsl(0, 0%, 0%) 15%);
}
.theme-default button.user-color {
  box-shadow: 0px 0px 0 2px var(--userColor) inset;
  background-color: color-mix(in srgb, var(--userColor) 20%, hsl(0, 0%, 100%));
  color: color-mix(in srgb, var(--userColor) 90%, hsl(0, 0%, 0%));
}
.theme-default button.user-color > .icon,
.theme-default button.user-color .element {
  color: color-mix(in srgb, var(--userColor) 90%, hsl(0, 0%, 0%));
}
.theme-default button.user-color:hover {
  background-color: var(--userColor);
  color: color-mix(in srgb, var(--userColor) 20%, hsl(0, 0%, 100%));
}
.theme-default button.user-color:hover > .element {
  color: color-mix(in srgb, var(--userColor) 20%, hsl(0, 0%, 100%));
}
.theme-default button.user-color:hover > .icon {
  color: color-mix(in srgb, var(--userColor) 20%, hsl(0, 0%, 100%));
}
.theme-default button.user-color:active {
  background-color: color-mix(in srgb, var(--userColor) 60%, hsl(0, 0%, 100%));
  color: color-mix(in srgb, var(--userColor) 40%, hsl(0, 0%, 0%));
  box-shadow: 0px 0px 4px 2px var(--userColor) inset;
}
.theme-default button.user-color:active > .icon {
  color: color-mix(in srgb, var(--userColor) 40%, hsl(0, 0%, 0%));
}
.theme-default button.user-color:active > .element {
  color: color-mix(in srgb, var(--userColor) 40%, hsl(0, 0%, 0%));
}
.theme-default .card {
  background-color: color-mix(in srgb, hsl(0, 0%, 100%) 90%, hsl(0, 0%, 0%) 10%);
}
.theme-default .car-border {
  box-shadow: 0px 0px 0px 2px color-mix(in srgb, hsl(0, 0%, 100%) 75%, hsl(0, 0%, 0%) 25%) inset;
}
.theme-default .car-shadow {
  box-shadow: 0 0 5px 0 color-mix(in srgb, black 50%, hsl(0, 0%, 100%) 50%);
}
.theme-default .selector-grid {
  border: 4px solid color-mix(in srgb, hsl(0, 0%, 100%) 75%, hsl(0, 0%, 0%) 25%);
  display: grid;
  gap: 0.2rem;
  background-color: color-mix(in srgb, hsl(0, 0%, 100%) 75%, hsl(0, 0%, 0%) 25%);
}
.theme-default .selector-grid > .selector {
  background-color: color-mix(in srgb, hsl(0, 0%, 100%) 85%, hsl(0, 0%, 0%) 15%);
}
.theme-default .selector-grid > .selector > .icon,
.theme-default .selector-grid > .selector .element {
  color: color-mix(in srgb, hsl(0, 0%, 100%) 33%, hsl(0, 0%, 0%) 66%);
}
.theme-default .selector-grid > .selector:hover {
  background-color: color-mix(in srgb, hsl(0, 0%, 0%) 40%, hsl(213, 100%, 64%) 100%);
  color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 0%) 40%, hsl(213, 100%, 64%) 100%) 20%, hsl(0, 0%, 100%));
}
.theme-default .selector-grid > .selector:hover > .icon,
.theme-default .selector-grid > .selector:hover .element {
  color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 0%) 40%, hsl(213, 100%, 64%) 100%) 20%, hsl(0, 0%, 100%));
}
.theme-default .selector-grid > .selector.ghost {
  box-shadow: none;
}
.theme-default .selector-grid > .selector.disabled {
  background-color: color-mix(in srgb, hsl(0, 0%, 100%) 50%, hsl(0, 0%, 0%) 50%);
  pointer-events: none;
}
.theme-default .selector-grid .selector:has(> input:checked),
.theme-default .selector-grid .selector:active {
  background-color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 0%) 40%, hsl(213, 100%, 64%) 100%) 60%, hsl(0, 0%, 100%));
  color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 0%) 40%, hsl(213, 100%, 64%) 100%) 40%, hsl(0, 0%, 0%));
  box-shadow: 0px 0px 4px 2px color-mix(in srgb, hsl(0, 0%, 0%) 40%, hsl(213, 100%, 64%) 100%) inset;
}
.theme-default .selector-grid .selector:has(> input:checked) > .icon,
.theme-default .selector-grid .selector:has(> input:checked) .element,
.theme-default .selector-grid .selector:active > .icon,
.theme-default .selector-grid .selector:active .element {
  color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 0%) 40%, hsl(213, 100%, 64%) 100%) 40%, hsl(0, 0%, 0%));
}
.theme-default .thumb {
  background-color: rgb(94, 205, 142);
}
.theme-default .thumb h1,
.theme-default .thumb h2,
.theme-default .thumb h3,
.theme-default .thumb h4,
.theme-default .thumb h5,
.theme-default .thumb h6,
.theme-default .thumb p,
.theme-default .thumb a,
.theme-default .thumb strong,
.theme-default .thumb i,
.theme-default .thumb em,
.theme-default .thumb mark,
.theme-default .thumb small,
.theme-default .thumb del,
.theme-default .thumb ins,
.theme-default .thumb sub,
.theme-default .thumb sup,
.theme-default .thumb time,
.theme-default .thumb .icon,
.theme-default .thumb button {
  color: hsl(0, 0%, 100%);
}
.theme-default .menu {
  background-color: color-mix(in srgb, hsl(0, 0%, 100%) 85%, hsl(0, 0%, 0%) 15%);
  box-shadow: 0 0.1rem 0.8rem -0.3rem black;
}
.theme-default .selector {
  background-color: inherit;
}
.theme-default .selector:hover {
  background-color: color-mix(in srgb, hsl(0, 0%, 0%) 40%, hsl(213, 100%, 64%) 100%);
  color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 0%) 40%, hsl(213, 100%, 64%) 100%) 20%, hsl(0, 0%, 100%));
}
.theme-default .selector:hover > .element {
  color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 0%) 40%, hsl(213, 100%, 64%) 100%) 20%, hsl(0, 0%, 100%));
}
.theme-default .selector:hover > .icon {
  color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 0%) 40%, hsl(213, 100%, 64%) 100%) 20%, hsl(0, 0%, 100%));
}
.theme-default .selector:active {
  background-color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 0%) 40%, hsl(213, 100%, 64%) 100%) 60%, hsl(0, 0%, 100%));
  color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 0%) 40%, hsl(213, 100%, 64%) 100%) 40%, hsl(0, 0%, 0%));
  box-shadow: 0px 0px 4px 2px color-mix(in srgb, hsl(0, 0%, 0%) 40%, hsl(213, 100%, 64%) 100%) inset;
}
.theme-default .selector:active > .icon {
  color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 0%) 40%, hsl(213, 100%, 64%) 100%) 40%, hsl(0, 0%, 0%));
}
.theme-default .selector:active > .element {
  color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 0%) 40%, hsl(213, 100%, 64%) 100%) 40%, hsl(0, 0%, 0%));
}
.theme-default .toggle {
  background-color: color-mix(in srgb, hsl(0, 0%, 100%) 75%, hsl(0, 0%, 0%) 25%);
}
.theme-default .toggle > span {
  background-color: hsl(0, 0%, 100%);
}
.theme-default .toggle input[type=checkbox]:checked + span {
  background-color: color-mix(in srgb, hsl(0, 0%, 0%) 40%, hsl(213, 100%, 64%) 100%);
}
.theme-default .ring {
  outline-color: color-mix(in srgb, hsl(0, 0%, 0%) 40%, hsl(213, 100%, 64%) 100%);
}
.theme-default .icon:before {
  color: inherit;
}
.theme-default .div-highlight {
  background-color: color-mix(in srgb, hsl(0, 0%, 0%) 40%, hsl(213, 100%, 64%) 100%);
}
.theme-default .div-highlight h1,
.theme-default .div-highlight h2,
.theme-default .div-highlight h3,
.theme-default .div-highlight h4,
.theme-default .div-highlight h5,
.theme-default .div-highlight h6,
.theme-default .div-highlight p,
.theme-default .div-highlight a,
.theme-default .div-highlight strong,
.theme-default .div-highlight i,
.theme-default .div-highlight em,
.theme-default .div-highlight mark,
.theme-default .div-highlight small,
.theme-default .div-highlight del,
.theme-default .div-highlight ins,
.theme-default .div-highlight sub,
.theme-default .div-highlight sup,
.theme-default .div-highlight time,
.theme-default .div-highlight .icon,
.theme-default .div-highlight button {
  color: hsl(0, 0%, 100%);
}
.theme-default .div-base90 {
  background-color: color-mix(in srgb, hsl(0, 0%, 100%) 90%, hsl(0, 0%, 0%) 10%);
}
.theme-default .base {
  background-color: hsl(0, 0%, 100%);
}
.theme-default .base-color {
  color: hsl(0, 0%, 100%);
}
.theme-default .base-color.tint {
  background-color: color-mix(in srgb, hsl(0, 0%, 100%) 95%, hsl(213, 100%, 64%) 5%);
}
.theme-default .base10 {
  background-color: color-mix(in srgb, hsl(0, 0%, 100%) 10%, hsl(0, 0%, 0%) 90%);
}
.theme-default .base10.tint {
  background-color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 100%) 10%, hsl(0, 0%, 0%) 90%) 95%, hsl(213, 100%, 64%) 5%);
}
.theme-default .base15 {
  background-color: color-mix(in srgb, hsl(0, 0%, 100%) 15%, hsl(0, 0%, 0%) 85%);
}
.theme-default .base15.tint {
  background-color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 100%) 15%, hsl(0, 0%, 0%) 85%) 95%, hsl(213, 100%, 64%) 5%);
}
.theme-default .base25 {
  background-color: color-mix(in srgb, hsl(0, 0%, 100%) 25%, hsl(0, 0%, 0%) 75%);
}
.theme-default .base25.tint {
  background-color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 100%) 25%, hsl(0, 0%, 0%) 75%) 95%, hsl(213, 100%, 64%) 5%);
}
.theme-default .base33 {
  background-color: color-mix(in srgb, hsl(0, 0%, 100%) 33%, hsl(0, 0%, 0%) 66%);
}
.theme-default .base33.tint {
  background-color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 100%) 33%, hsl(0, 0%, 0%) 66%) 95%, hsl(213, 100%, 64%) 5%);
}
.theme-default .base50 {
  background-color: color-mix(in srgb, hsl(0, 0%, 100%) 50%, hsl(0, 0%, 0%) 50%);
}
.theme-default .base50.tint {
  background-color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 100%) 50%, hsl(0, 0%, 0%) 50%) 95%, hsl(213, 100%, 64%) 5%);
}
.theme-default .base66 {
  background-color: color-mix(in srgb, hsl(0, 0%, 100%) 66%, hsl(0, 0%, 0%) 33%);
}
.theme-default .base66.tint {
  background-color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 100%) 66%, hsl(0, 0%, 0%) 33%) 95%, hsl(213, 100%, 64%) 5%);
}
.theme-default .base75 {
  background-color: color-mix(in srgb, hsl(0, 0%, 100%) 75%, hsl(0, 0%, 0%) 25%);
}
.theme-default .base75.tint {
  background-color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 100%) 75%, hsl(0, 0%, 0%) 25%) 95%, hsl(213, 100%, 64%) 5%);
}
.theme-default .base85 {
  background-color: color-mix(in srgb, hsl(0, 0%, 100%) 85%, hsl(0, 0%, 0%) 15%);
}
.theme-default .base85.tint {
  background-color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 100%) 85%, hsl(0, 0%, 0%) 15%) 95%, hsl(213, 100%, 64%) 5%);
}
.theme-default .base90 {
  background-color: color-mix(in srgb, hsl(0, 0%, 100%) 90%, hsl(0, 0%, 0%) 10%);
}
.theme-default .base90.tint {
  background-color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 100%) 90%, hsl(0, 0%, 0%) 10%) 95%, hsl(213, 100%, 64%) 5%);
}
.theme-default .base15 {
  background-color: color-mix(in srgb, hsl(0, 0%, 100%) 5%, hsl(0, 0%, 0%) 95%);
}
.theme-default .base15.tint {
  background-color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 100%) 15%, hsl(0, 0%, 0%) 85%) 95%, hsl(213, 100%, 64%) 5%);
}
.theme-default .base95 {
  background-color: color-mix(in srgb, hsl(0, 0%, 100%) 95%, hsl(0, 0%, 0%) 5%);
}
.theme-default .base95.tint {
  background-color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 100%) 95%, hsl(0, 0%, 0%) 5%) 95%, hsl(213, 100%, 64%) 5%);
}
.theme-default .baseInv {
  background-color: hsl(0, 0%, 0%);
}
.theme-default .baseInv.tint {
  background-color: color-mix(in srgb, hsl(0, 0%, 0%) 95%, hsl(213, 100%, 64%) 5%);
}
.theme-default .success {
  background-color: hsl(129, 69%, 41%);
}
.theme-default .success.tint {
  background-color: color-mix(in srgb, hsl(129, 69%, 41%) 75%, hsl(213, 100%, 64%) 25%);
}
.theme-default .success > .element {
  color: color-mix(in srgb, hsl(129, 69%, 41%) 25%, hsl(0, 0%, 100%) 75%);
}
.theme-default hr {
  border-color: color-mix(in srgb, hsl(0, 0%, 100%) 75%, hsl(0, 0%, 0%) 25%);
}
.theme-default .hr-highlight {
  border-color: color-mix(in srgb, hsl(0, 0%, 0%) 40%, hsl(213, 100%, 64%) 100%);
}
.theme-default .hr-base90 {
  border-color: color-mix(in srgb, hsl(0, 0%, 100%) 90%, hsl(0, 0%, 0%) 10%);
}
.theme-default .ico-color {
  color: rgb(83, 83, 69) !important;
}

.theme-dark .redd {
  color: red !important;
}
.theme-dark p,
.theme-dark h1,
.theme-dark h2,
.theme-dark h3,
.theme-dark h4,
.theme-dark h5,
.theme-dark h6 {
  color: color-mix(in srgb, hsl(0, 0%, 0%) 33%, hsl(0, 0%, 100%) 66%);
}
.theme-dark a.selector {
  color: color-mix(in srgb, hsl(0, 0%, 0%) 33%, hsl(0, 0%, 100%) 66%);
}
.theme-dark button,
.theme-dark .button {
  transition: background-color 0.15s;
}
.theme-dark button:active,
.theme-dark .button:active {
  transition: background-color 0s;
}
.theme-dark button.base,
.theme-dark .button.base {
  background-color: hsl(0, 0%, 0%);
}
.theme-dark button.base h1,
.theme-dark button.base h2,
.theme-dark button.base h3,
.theme-dark button.base h4,
.theme-dark button.base h5,
.theme-dark button.base h6,
.theme-dark button.base p,
.theme-dark button.base a,
.theme-dark button.base strong,
.theme-dark button.base i,
.theme-dark button.base em,
.theme-dark button.base mark,
.theme-dark button.base small,
.theme-dark button.base del,
.theme-dark button.base ins,
.theme-dark button.base sub,
.theme-dark button.base sup,
.theme-dark button.base time,
.theme-dark button.base .icon,
.theme-dark button.base button,
.theme-dark .button.base h1,
.theme-dark .button.base h2,
.theme-dark .button.base h3,
.theme-dark .button.base h4,
.theme-dark .button.base h5,
.theme-dark .button.base h6,
.theme-dark .button.base p,
.theme-dark .button.base a,
.theme-dark .button.base strong,
.theme-dark .button.base i,
.theme-dark .button.base em,
.theme-dark .button.base mark,
.theme-dark .button.base small,
.theme-dark .button.base del,
.theme-dark .button.base ins,
.theme-dark .button.base sub,
.theme-dark .button.base sup,
.theme-dark .button.base time,
.theme-dark .button.base .icon,
.theme-dark .button.base button {
  color: color-mix(in srgb, hsl(0, 0%, 0%) 33%, hsl(0, 0%, 100%) 66%);
}
.theme-dark button.base:hover,
.theme-dark .button.base:hover {
  background-color: color-mix(in srgb, hsl(0, 0%, 100%) 40%, hsl(266, 57%, 49%) 100%);
}
.theme-dark button.base:hover h1,
.theme-dark button.base:hover h2,
.theme-dark button.base:hover h3,
.theme-dark button.base:hover h4,
.theme-dark button.base:hover h5,
.theme-dark button.base:hover h6,
.theme-dark button.base:hover p,
.theme-dark button.base:hover a,
.theme-dark button.base:hover strong,
.theme-dark button.base:hover i,
.theme-dark button.base:hover em,
.theme-dark button.base:hover mark,
.theme-dark button.base:hover small,
.theme-dark button.base:hover del,
.theme-dark button.base:hover ins,
.theme-dark button.base:hover sub,
.theme-dark button.base:hover sup,
.theme-dark button.base:hover time,
.theme-dark button.base:hover .icon,
.theme-dark button.base:hover button,
.theme-dark .button.base:hover h1,
.theme-dark .button.base:hover h2,
.theme-dark .button.base:hover h3,
.theme-dark .button.base:hover h4,
.theme-dark .button.base:hover h5,
.theme-dark .button.base:hover h6,
.theme-dark .button.base:hover p,
.theme-dark .button.base:hover a,
.theme-dark .button.base:hover strong,
.theme-dark .button.base:hover i,
.theme-dark .button.base:hover em,
.theme-dark .button.base:hover mark,
.theme-dark .button.base:hover small,
.theme-dark .button.base:hover del,
.theme-dark .button.base:hover ins,
.theme-dark .button.base:hover sub,
.theme-dark .button.base:hover sup,
.theme-dark .button.base:hover time,
.theme-dark .button.base:hover .icon,
.theme-dark .button.base:hover button {
  color: hsl(0, 0%, 0%);
}
.theme-dark button.base:active,
.theme-dark .button.base:active {
  background-color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 100%) 40%, hsl(266, 57%, 49%) 100%), hsl(0, 0%, 100%));
}
.theme-dark button.base:active h1,
.theme-dark button.base:active h2,
.theme-dark button.base:active h3,
.theme-dark button.base:active h4,
.theme-dark button.base:active h5,
.theme-dark button.base:active h6,
.theme-dark button.base:active p,
.theme-dark button.base:active a,
.theme-dark button.base:active strong,
.theme-dark button.base:active i,
.theme-dark button.base:active em,
.theme-dark button.base:active mark,
.theme-dark button.base:active small,
.theme-dark button.base:active del,
.theme-dark button.base:active ins,
.theme-dark button.base:active sub,
.theme-dark button.base:active sup,
.theme-dark button.base:active time,
.theme-dark button.base:active .icon,
.theme-dark button.base:active button,
.theme-dark .button.base:active h1,
.theme-dark .button.base:active h2,
.theme-dark .button.base:active h3,
.theme-dark .button.base:active h4,
.theme-dark .button.base:active h5,
.theme-dark .button.base:active h6,
.theme-dark .button.base:active p,
.theme-dark .button.base:active a,
.theme-dark .button.base:active strong,
.theme-dark .button.base:active i,
.theme-dark .button.base:active em,
.theme-dark .button.base:active mark,
.theme-dark .button.base:active small,
.theme-dark .button.base:active del,
.theme-dark .button.base:active ins,
.theme-dark .button.base:active sub,
.theme-dark .button.base:active sup,
.theme-dark .button.base:active time,
.theme-dark .button.base:active .icon,
.theme-dark .button.base:active button {
  color: hsl(0, 0%, 0%);
}
.theme-dark button.but-bordered,
.theme-dark .button.but-bordered {
  border-color: color-mix(in srgb, hsl(0, 0%, 0%) 75%, hsl(0, 0%, 100%) 25%);
}
.theme-dark button.primary,
.theme-dark .button.primary {
  box-shadow: 0px 0px 0 2px color-mix(in srgb, hsl(0, 0%, 100%) 40%, hsl(266, 57%, 49%) 100%) inset;
  background-color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 100%) 40%, hsl(266, 57%, 49%) 100%) 20%, hsl(0, 0%, 0%));
  color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 100%) 40%, hsl(266, 57%, 49%) 100%) 90%, hsl(0, 0%, 100%));
}
.theme-dark button.primary > .icon,
.theme-dark button.primary .element,
.theme-dark .button.primary > .icon,
.theme-dark .button.primary .element {
  color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 100%) 40%, hsl(266, 57%, 49%) 100%) 90%, hsl(0, 0%, 100%));
}
.theme-dark button.primary.ghost,
.theme-dark .button.primary.ghost {
  box-shadow: none;
}
.theme-dark button.primary:hover,
.theme-dark .button.primary:hover {
  background-color: color-mix(in srgb, hsl(0, 0%, 100%) 40%, hsl(266, 57%, 49%) 100%);
  color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 100%) 40%, hsl(266, 57%, 49%) 100%) 20%, hsl(0, 0%, 0%));
}
.theme-dark button.primary:hover > .icon,
.theme-dark button.primary:hover .element,
.theme-dark .button.primary:hover > .icon,
.theme-dark .button.primary:hover .element {
  color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 100%) 40%, hsl(266, 57%, 49%) 100%) 20%, hsl(0, 0%, 0%));
}
.theme-dark button.primary.test-hover,
.theme-dark .button.primary.test-hover {
  background-color: color-mix(in srgb, hsl(0, 0%, 100%) 40%, hsl(266, 57%, 49%) 100%);
  color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 100%) 40%, hsl(266, 57%, 49%) 100%) 10%, hsl(0, 0%, 0%));
}
.theme-dark button.primary.test-hover > .icon,
.theme-dark button.primary.test-hover .element,
.theme-dark .button.primary.test-hover > .icon,
.theme-dark .button.primary.test-hover .element {
  color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 100%) 40%, hsl(266, 57%, 49%) 100%) 20%, hsl(0, 0%, 0%));
}
.theme-dark button.primary:active,
.theme-dark .button.primary:active {
  background-color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 100%) 40%, hsl(266, 57%, 49%) 100%) 60%, hsl(0, 0%, 0%));
  color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 100%) 40%, hsl(266, 57%, 49%) 100%) 40%, hsl(0, 0%, 100%));
  box-shadow: 0px 0px 4px 2px color-mix(in srgb, hsl(0, 0%, 100%) 40%, hsl(266, 57%, 49%) 100%) inset;
}
.theme-dark button.primary:active > .icon,
.theme-dark button.primary:active .element,
.theme-dark .button.primary:active > .icon,
.theme-dark .button.primary:active .element {
  color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 100%) 40%, hsl(266, 57%, 49%) 100%) 40%, hsl(0, 0%, 100%));
}
.theme-dark button.primary.test-active,
.theme-dark .button.primary.test-active {
  background-color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 100%) 40%, hsl(266, 57%, 49%) 100%) 60%, hsl(0, 0%, 0%));
  color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 100%) 40%, hsl(266, 57%, 49%) 100%) 40%, hsl(0, 0%, 100%));
  box-shadow: 0px 0px 4px 2px color-mix(in srgb, hsl(0, 0%, 100%) 40%, hsl(266, 57%, 49%) 100%) inset;
}
.theme-dark button.primary.test-active > .icon,
.theme-dark button.primary.test-active .element,
.theme-dark .button.primary.test-active > .icon,
.theme-dark .button.primary.test-active .element {
  color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 100%) 40%, hsl(266, 57%, 49%) 100%) 40%, hsl(0, 0%, 100%));
}
.theme-dark button.primary.disabled,
.theme-dark .button.primary.disabled {
  background-color: color-mix(in srgb, hsl(0, 0%, 0%) 50%, hsl(0, 0%, 100%) 50%);
  pointer-events: none;
}
.theme-dark button.secondary,
.theme-dark .button.secondary {
  box-shadow: 0px 0px 0px 2px color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 0%) 33%, hsl(0, 0%, 100%) 66%) 90%, hsl(266, 57%, 49%) 10%) inset;
  background-color: color-mix(in srgb, color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 0%) 33%, hsl(0, 0%, 100%) 66%) 90%, hsl(266, 57%, 49%) 10%) 20%, hsl(0, 0%, 0%));
  color: color-mix(in srgb, color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 0%) 33%, hsl(0, 0%, 100%) 66%) 90%, hsl(266, 57%, 49%) 10%) 90%, hsl(0, 0%, 100%));
}
.theme-dark button.secondary > .icon,
.theme-dark button.secondary .element,
.theme-dark .button.secondary > .icon,
.theme-dark .button.secondary .element {
  color: color-mix(in srgb, color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 0%) 33%, hsl(0, 0%, 100%) 66%) 90%, hsl(266, 57%, 49%) 10%) 90%, hsl(0, 0%, 100%));
}
.theme-dark button.secondary.ghost,
.theme-dark .button.secondary.ghost {
  box-shadow: none;
}
.theme-dark button.secondary:hover,
.theme-dark .button.secondary:hover {
  background-color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 0%) 33%, hsl(0, 0%, 100%) 66%) 90%, hsl(266, 57%, 49%) 10%);
  color: color-mix(in srgb, color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 0%) 33%, hsl(0, 0%, 100%) 66%) 90%, hsl(266, 57%, 49%) 10%) 20%, hsl(0, 0%, 0%));
}
.theme-dark button.secondary:hover > .icon,
.theme-dark button.secondary:hover .element,
.theme-dark .button.secondary:hover > .icon,
.theme-dark .button.secondary:hover .element {
  color: color-mix(in srgb, color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 0%) 33%, hsl(0, 0%, 100%) 66%) 90%, hsl(266, 57%, 49%) 10%) 20%, hsl(0, 0%, 0%));
}
.theme-dark button.secondary.test-hover,
.theme-dark .button.secondary.test-hover {
  background-color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 0%) 33%, hsl(0, 0%, 100%) 66%) 90%, hsl(266, 57%, 49%) 10%);
  color: color-mix(in srgb, color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 0%) 33%, hsl(0, 0%, 100%) 66%) 90%, hsl(266, 57%, 49%) 10%) 10%, hsl(0, 0%, 0%));
}
.theme-dark button.secondary.test-hover > .icon,
.theme-dark button.secondary.test-hover .element,
.theme-dark .button.secondary.test-hover > .icon,
.theme-dark .button.secondary.test-hover .element {
  color: color-mix(in srgb, color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 0%) 33%, hsl(0, 0%, 100%) 66%) 90%, hsl(266, 57%, 49%) 10%) 10%, hsl(0, 0%, 0%));
}
.theme-dark button.secondary:active,
.theme-dark .button.secondary:active {
  background-color: color-mix(in srgb, color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 0%) 33%, hsl(0, 0%, 100%) 66%) 90%, hsl(266, 57%, 49%) 10%) 60%, hsl(0, 0%, 0%));
  color: color-mix(in srgb, color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 0%) 33%, hsl(0, 0%, 100%) 66%) 90%, hsl(266, 57%, 49%) 10%) 40%, hsl(0, 0%, 100%));
  box-shadow: 0px 0px 4px 2px color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 0%) 33%, hsl(0, 0%, 100%) 66%) 90%, hsl(266, 57%, 49%) 10%) inset;
}
.theme-dark button.secondary:active > .icon,
.theme-dark button.secondary:active .element,
.theme-dark .button.secondary:active > .icon,
.theme-dark .button.secondary:active .element {
  color: color-mix(in srgb, color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 0%) 33%, hsl(0, 0%, 100%) 66%) 90%, hsl(266, 57%, 49%) 10%) 40%, hsl(0, 0%, 100%));
}
.theme-dark button.secondary.test-active,
.theme-dark .button.secondary.test-active {
  background-color: color-mix(in srgb, color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 0%) 33%, hsl(0, 0%, 100%) 66%) 90%, hsl(266, 57%, 49%) 10%) 60%, hsl(0, 0%, 0%));
  color: color-mix(in srgb, color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 0%) 33%, hsl(0, 0%, 100%) 66%) 90%, hsl(266, 57%, 49%) 10%) 40%, hsl(0, 0%, 100%));
  box-shadow: 0px 0px 4px 2px color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 0%) 33%, hsl(0, 0%, 100%) 66%) 90%, hsl(266, 57%, 49%) 10%) inset;
}
.theme-dark button.secondary.test-active > .icon,
.theme-dark button.secondary.test-active .element,
.theme-dark .button.secondary.test-active > .icon,
.theme-dark .button.secondary.test-active .element {
  color: color-mix(in srgb, color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 0%) 33%, hsl(0, 0%, 100%) 66%) 90%, hsl(266, 57%, 49%) 10%) 40%, hsl(0, 0%, 100%));
}
.theme-dark button.secondary.disabled,
.theme-dark .button.secondary.disabled {
  background-color: color-mix(in srgb, hsl(0, 0%, 0%) 50%, hsl(0, 0%, 100%) 50%);
  pointer-events: none;
}
.theme-dark button.secondary-alt,
.theme-dark .button.secondary-alt {
  box-shadow: 0px 0px 0px 2px color-mix(in srgb, hsl(0, 0%, 100%) 40%, hsl(266, 57%, 49%) 100%) inset;
  background-color: color-mix(in srgb, color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 0%) 33%, hsl(0, 0%, 100%) 66%) 90%, hsl(266, 57%, 49%) 10%) 20%, hsl(0, 0%, 0%));
  color: color-mix(in srgb, color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 0%) 33%, hsl(0, 0%, 100%) 66%) 90%, hsl(266, 57%, 49%) 10%) 90%, hsl(0, 0%, 100%));
}
.theme-dark button.secondary-alt > .icon,
.theme-dark button.secondary-alt .element,
.theme-dark .button.secondary-alt > .icon,
.theme-dark .button.secondary-alt .element {
  color: color-mix(in srgb, color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 0%) 33%, hsl(0, 0%, 100%) 66%) 90%, hsl(266, 57%, 49%) 10%) 90%, hsl(0, 0%, 100%));
}
.theme-dark button.secondary-alt.ghost,
.theme-dark .button.secondary-alt.ghost {
  box-shadow: none;
}
.theme-dark button.secondary-alt:hover,
.theme-dark .button.secondary-alt:hover {
  background-color: color-mix(in srgb, hsl(0, 0%, 100%) 40%, hsl(266, 57%, 49%) 100%);
  color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 100%) 40%, hsl(266, 57%, 49%) 100%) 20%, hsl(0, 0%, 0%));
}
.theme-dark button.secondary-alt:hover > .icon,
.theme-dark button.secondary-alt:hover .element,
.theme-dark .button.secondary-alt:hover > .icon,
.theme-dark .button.secondary-alt:hover .element {
  color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 100%) 40%, hsl(266, 57%, 49%) 100%) 20%, hsl(0, 0%, 0%));
}
.theme-dark button.secondary-alt.test-hover,
.theme-dark .button.secondary-alt.test-hover {
  background-color: color-mix(in srgb, hsl(0, 0%, 100%) 40%, hsl(266, 57%, 49%) 100%);
  color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 100%) 40%, hsl(266, 57%, 49%) 100%) 10%, hsl(0, 0%, 0%));
}
.theme-dark button.secondary-alt.test-hover > .icon,
.theme-dark button.secondary-alt.test-hover .element,
.theme-dark .button.secondary-alt.test-hover > .icon,
.theme-dark .button.secondary-alt.test-hover .element {
  color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 100%) 40%, hsl(266, 57%, 49%) 100%) 10%, hsl(0, 0%, 0%));
}
.theme-dark button.secondary-alt:active,
.theme-dark .button.secondary-alt:active {
  background-color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 100%) 40%, hsl(266, 57%, 49%) 100%) 60%, hsl(0, 0%, 0%));
  color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 100%) 40%, hsl(266, 57%, 49%) 100%) 40%, hsl(0, 0%, 100%));
  box-shadow: 0px 0px 4px 2px color-mix(in srgb, hsl(0, 0%, 100%) 40%, hsl(266, 57%, 49%) 100%) inset;
}
.theme-dark button.secondary-alt:active > .icon,
.theme-dark button.secondary-alt:active .element,
.theme-dark .button.secondary-alt:active > .icon,
.theme-dark .button.secondary-alt:active .element {
  color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 100%) 40%, hsl(266, 57%, 49%) 100%) 40%, hsl(0, 0%, 100%));
}
.theme-dark button.secondary-alt.test-active,
.theme-dark .button.secondary-alt.test-active {
  background-color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 100%) 40%, hsl(266, 57%, 49%) 100%) 60%, hsl(0, 0%, 0%));
  color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 100%) 40%, hsl(266, 57%, 49%) 100%) 40%, hsl(0, 0%, 100%));
  box-shadow: 0px 0px 4px 2px color-mix(in srgb, hsl(0, 0%, 100%) 40%, hsl(266, 57%, 49%) 100%) inset;
}
.theme-dark button.secondary-alt.test-active > .icon,
.theme-dark button.secondary-alt.test-active .element,
.theme-dark .button.secondary-alt.test-active > .icon,
.theme-dark .button.secondary-alt.test-active .element {
  color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 100%) 40%, hsl(266, 57%, 49%) 100%) 40%, hsl(0, 0%, 100%));
}
.theme-dark button.secondary-alt.disabled,
.theme-dark .button.secondary-alt.disabled {
  background-color: color-mix(in srgb, hsl(0, 0%, 0%) 50%, hsl(0, 0%, 100%) 50%);
  pointer-events: none;
}
.theme-dark button.warn,
.theme-dark .button.warn {
  box-shadow: 0px 0px 0px 2px color-mix(in srgb, hsl(0, 0%, 100%) 10%, hsl(26, 100%, 36%) 100%) inset;
  background-color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 100%) 10%, hsl(26, 100%, 36%) 100%) 20%, hsl(0, 0%, 0%));
  color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 100%) 10%, hsl(26, 100%, 36%) 100%) 90%, hsl(0, 0%, 100%));
}
.theme-dark button.warn > .icon,
.theme-dark button.warn .element,
.theme-dark .button.warn > .icon,
.theme-dark .button.warn .element {
  color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 100%) 10%, hsl(26, 100%, 36%) 100%) 90%, hsl(0, 0%, 100%));
}
.theme-dark button.warn.ghost,
.theme-dark .button.warn.ghost {
  box-shadow: none;
}
.theme-dark button.warn:hover,
.theme-dark .button.warn:hover {
  background-color: color-mix(in srgb, hsl(0, 0%, 100%) 10%, hsl(26, 100%, 36%) 100%);
  color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 100%) 10%, hsl(26, 100%, 36%) 100%) 20%, hsl(0, 0%, 0%));
}
.theme-dark button.warn:hover > .icon,
.theme-dark button.warn:hover .element,
.theme-dark .button.warn:hover > .icon,
.theme-dark .button.warn:hover .element {
  color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 100%) 10%, hsl(26, 100%, 36%) 100%) 20%, hsl(0, 0%, 0%));
}
.theme-dark button.warn.test-hover,
.theme-dark .button.warn.test-hover {
  background-color: color-mix(in srgb, hsl(0, 0%, 100%) 10%, hsl(26, 100%, 36%) 100%);
  color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 100%) 10%, hsl(26, 100%, 36%) 100%) 10%, hsl(0, 0%, 0%));
}
.theme-dark button.warn.test-hover > .icon,
.theme-dark button.warn.test-hover .element,
.theme-dark .button.warn.test-hover > .icon,
.theme-dark .button.warn.test-hover .element {
  color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 100%) 10%, hsl(26, 100%, 36%) 100%) 10%, hsl(0, 0%, 0%));
}
.theme-dark button.warn:active,
.theme-dark .button.warn:active {
  background-color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 100%) 10%, hsl(26, 100%, 36%) 100%) 60%, hsl(0, 0%, 0%));
  color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 100%) 10%, hsl(26, 100%, 36%) 100%) 40%, hsl(0, 0%, 100%));
  box-shadow: 0px 0px 4px 2px color-mix(in srgb, hsl(0, 0%, 100%) 10%, hsl(26, 100%, 36%) 100%) inset;
}
.theme-dark button.warn:active > .icon,
.theme-dark button.warn:active .element,
.theme-dark .button.warn:active > .icon,
.theme-dark .button.warn:active .element {
  color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 100%) 10%, hsl(26, 100%, 36%) 100%) 40%, hsl(0, 0%, 100%));
}
.theme-dark button.warn.test-active,
.theme-dark .button.warn.test-active {
  background-color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 100%) 10%, hsl(26, 100%, 36%) 100%) 60%, hsl(0, 0%, 0%));
  color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 100%) 10%, hsl(26, 100%, 36%) 100%) 40%, hsl(0, 0%, 100%));
  box-shadow: 0px 0px 4px 2px color-mix(in srgb, hsl(0, 0%, 100%) 10%, hsl(26, 100%, 36%) 100%) inset;
}
.theme-dark button.warn.test-active > .icon,
.theme-dark button.warn.test-active .element,
.theme-dark .button.warn.test-active > .icon,
.theme-dark .button.warn.test-active .element {
  color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 100%) 10%, hsl(26, 100%, 36%) 100%) 40%, hsl(0, 0%, 100%));
}
.theme-dark button.warn.disabled,
.theme-dark .button.warn.disabled {
  background-color: color-mix(in srgb, hsl(0, 0%, 0%) 50%, hsl(0, 0%, 100%) 50%);
  pointer-events: none;
}
.theme-dark .test-hover,
.theme-dark .test-active {
  padding: 0.2rem;
}
.theme-dark a {
  color: color-mix(in srgb, hsl(0, 0%, 100%) 40%, hsl(266, 57%, 49%) 100%);
}
.theme-dark .text-danger {
  color: red;
}
.theme-dark .spacer {
  opacity: 0 !important;
}
.theme-dark .page-content,
.theme-dark .page-wrapper {
  background-color: hsl(0, 0%, 0%);
}
.theme-dark .left-fade {
  background-image: linear-gradient(to right, hsl(0, 0%, 0%), transparent);
}
.theme-dark .right-fade {
  background-image: linear-gradient(to left, hsl(0, 0%, 0%), transparent);
}
.theme-dark [class*=foco-][class$=R] {
  background-image: linear-gradient(to left, hsl(0, 0%, 0%), transparent);
}
.theme-dark [class*=foco-][class$=L] {
  background-image: linear-gradient(to right, hsl(0, 0%, 0%), transparent);
}
.theme-dark .overlay {
  background-color: color-mix(in srgb, hsl(0, 0%, 0%) 50%, hsl(0, 0%, 100%) 50%);
  transition: opacity 0.5s;
  opacity: 40%;
}
.theme-dark .drawer-handle {
  background-color: color-mix(in srgb, hsl(0, 0%, 0%) 90%, hsl(0, 0%, 100%) 10%);
  box-shadow: 0px 2px 0.15rem 0px rgba(0, 0, 0, 0.228);
}
.theme-dark .drawer-handle:hover {
  background-color: color-mix(in srgb, hsl(0, 0%, 0%) 85%, hsl(0, 0%, 100%) 15%);
}
.theme-dark .drawer-handle:active {
  transition-property: background-color 0.2s;
  background-color: color-mix(in srgb, hsl(0, 0%, 0%) 90%, hsl(0, 0%, 100%) 10%);
}
.theme-dark .drawer-handle > input:checked + .icon {
  transition-property: color 0.2s;
  color: hsl(266, 57%, 49%);
}
.theme-dark .nav.nav-main,
.theme-dark nav.nav-main {
  transition: background-color 1s, box-shadow 0.25s;
  background-color: color-mix(in srgb, hsl(0, 0%, 0%) 90%, hsl(0, 0%, 100%) 10%);
  color: color-mix(in srgb, hsl(0, 0%, 0%) 10%, hsl(0, 0%, 100%) 90%);
}
.theme-dark .nav.nav-main.tint.tint,
.theme-dark nav.nav-main.tint.tint {
  background-color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 0%) 85%, hsl(0, 0%, 100%) 15%) 95%, hsl(266, 57%, 49%) 5%);
}
.theme-dark .nav.nav-main.scrolled,
.theme-dark nav.nav-main.scrolled {
  background-color: hsl(0, 0%, 0%);
  box-shadow: 0px 2px 1rem 0px rgba(0, 0, 0, 0.383);
}
.theme-dark .nav.nav-main.scrolled.tint,
.theme-dark nav.nav-main.scrolled.tint {
  background-color: color-mix(in srgb, hsl(0, 0%, 0%) 95%, hsl(266, 57%, 49%) 5%);
}
.theme-dark .foo.foo-main,
.theme-dark footer.foo-main {
  background-color: hsl(0, 0%, 0%);
}
.theme-dark .nav,
.theme-dark nav,
.theme-dark .footer,
.theme-dark footer {
  background-color: transparent;
}
.theme-dark .red {
  background-color: red;
}
.theme-dark input[type=radio]:after {
  width: 0.75rem;
  aspect-ratio: 1/1;
  border-radius: 100%;
  background-color: color-mix(in srgb, hsl(0, 0%, 0%) 85%, hsl(0, 0%, 100%) 15%);
  content: "";
  display: inline-block;
  position: relative;
  top: -2px;
  border: 2px solid hsl(0, 0%, 0%);
  outline: 2px solid color-mix(in srgb, hsl(0, 0%, 0%) 66%, hsl(0, 0%, 100%) 33%);
}
.theme-dark input[type=radio]:checked:after {
  outline: 2px solid color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 0%) 66%, hsl(0, 0%, 100%) 33%) 66%, hsl(266, 57%, 49%) 33%);
  background-color: hsl(266, 57%, 49%);
  border: 2px solid color-mix(in srgb, hsl(0, 0%, 0%) 66%, hsl(266, 57%, 49%) 33%);
}
.theme-dark input[type=text],
.theme-dark input[type=password],
.theme-dark input[type=email],
.theme-dark input[type=url],
.theme-dark input[type=tel],
.theme-dark input[type=number],
.theme-dark input[type=search],
.theme-dark textarea {
  background-color: color-mix(in srgb, hsl(0, 0%, 0%) 95%, hsl(0, 0%, 100%) 5%);
  color: color-mix(in srgb, hsl(0, 0%, 0%) 33%, hsl(0, 0%, 100%) 66%);
  border-color: color-mix(in srgb, hsl(0, 0%, 0%) 75%, hsl(0, 0%, 100%) 25%);
  border: 2px solid color-mix(in srgb, hsl(0, 0%, 0%) 75%, hsl(0, 0%, 100%) 25%);
}
.theme-dark input[type=text]:focus,
.theme-dark input[type=password]:focus,
.theme-dark input[type=email]:focus,
.theme-dark input[type=url]:focus,
.theme-dark input[type=tel]:focus,
.theme-dark input[type=number]:focus,
.theme-dark input[type=search]:focus,
.theme-dark textarea:focus {
  box-shadow: 0 0 5px 0 color-mix(in srgb, hsl(0, 0%, 0%) 75%, hsl(0, 0%, 100%) 25%);
  outline: none;
}
.theme-dark input[type=text]:hover,
.theme-dark input[type=password]:hover,
.theme-dark input[type=email]:hover,
.theme-dark input[type=url]:hover,
.theme-dark input[type=tel]:hover,
.theme-dark input[type=number]:hover,
.theme-dark input[type=search]:hover,
.theme-dark textarea:hover {
  box-shadow: 0 0 3px 0 color-mix(in srgb, hsl(0, 0%, 0%) 75%, hsl(0, 0%, 100%) 25%);
}
.theme-dark input[type=text]:hover:focus,
.theme-dark input[type=password]:hover:focus,
.theme-dark input[type=email]:hover:focus,
.theme-dark input[type=url]:hover:focus,
.theme-dark input[type=tel]:hover:focus,
.theme-dark input[type=number]:hover:focus,
.theme-dark input[type=search]:hover:focus,
.theme-dark textarea:hover:focus {
  box-shadow: 0 0 5px 0 color-mix(in srgb, hsl(0, 0%, 0%) 75%, hsl(0, 0%, 100%) 25%);
}
.theme-dark input[type=text]:hover:active,
.theme-dark input[type=password]:hover:active,
.theme-dark input[type=email]:hover:active,
.theme-dark input[type=url]:hover:active,
.theme-dark input[type=tel]:hover:active,
.theme-dark input[type=number]:hover:active,
.theme-dark input[type=search]:hover:active,
.theme-dark textarea:hover:active {
  box-shadow: 0 0 2px 0 color-mix(in srgb, hsl(0, 0%, 0%) 75%, hsl(0, 0%, 100%) 25%);
}
.theme-dark .search-dropdown input[type=text]:focus + .search-dropdown-icon .icon {
  color: color-mix(in srgb, hsl(0, 0%, 100%) 40%, hsl(266, 57%, 49%) 100%);
}
.theme-dark .search-dropdown input[type=text] + .search-dropdown-icon .icon {
  color: color-mix(in srgb, hsl(0, 0%, 0%) 85%, hsl(0, 0%, 100%) 15%);
}
.theme-dark button.user-color {
  box-shadow: 0px 0px 0 2px var(--userColor) inset;
  background-color: color-mix(in srgb, var(--userColor) 20%, hsl(0, 0%, 0%));
  color: color-mix(in srgb, var(--userColor) 90%, hsl(0, 0%, 100%));
}
.theme-dark button.user-color > .icon,
.theme-dark button.user-color .element {
  color: color-mix(in srgb, var(--userColor) 90%, hsl(0, 0%, 100%));
}
.theme-dark button.user-color:hover {
  background-color: var(--userColor);
  color: color-mix(in srgb, var(--userColor) 20%, hsl(0, 0%, 0%));
}
.theme-dark button.user-color:hover > .element {
  color: color-mix(in srgb, var(--userColor) 20%, hsl(0, 0%, 0%));
}
.theme-dark button.user-color:hover > .icon {
  color: color-mix(in srgb, var(--userColor) 20%, hsl(0, 0%, 0%));
}
.theme-dark button.user-color:active {
  background-color: color-mix(in srgb, var(--userColor) 60%, hsl(0, 0%, 0%));
  color: color-mix(in srgb, var(--userColor) 40%, hsl(0, 0%, 100%));
  box-shadow: 0px 0px 4px 2px var(--userColor) inset;
}
.theme-dark button.user-color:active > .icon {
  color: color-mix(in srgb, var(--userColor) 40%, hsl(0, 0%, 100%));
}
.theme-dark button.user-color:active > .element {
  color: color-mix(in srgb, var(--userColor) 40%, hsl(0, 0%, 100%));
}
.theme-dark .card {
  background-color: color-mix(in srgb, hsl(0, 0%, 0%) 90%, hsl(0, 0%, 100%) 10%);
}
.theme-dark .car-border {
  box-shadow: 0px 0px 0px 2px color-mix(in srgb, hsl(0, 0%, 0%) 75%, hsl(0, 0%, 100%) 25%) inset;
}
.theme-dark .car-shadow {
  box-shadow: 0 0 5px 0 color-mix(in srgb, black 50%, hsl(0, 0%, 0%) 50%);
}
.theme-dark .selector-grid {
  border: 4px solid color-mix(in srgb, hsl(0, 0%, 0%) 75%, hsl(0, 0%, 100%) 25%);
  display: grid;
  gap: 0.2rem;
  background-color: color-mix(in srgb, hsl(0, 0%, 0%) 75%, hsl(0, 0%, 100%) 25%);
}
.theme-dark .selector-grid > .selector {
  background-color: color-mix(in srgb, hsl(0, 0%, 0%) 85%, hsl(0, 0%, 100%) 15%);
}
.theme-dark .selector-grid > .selector > .icon,
.theme-dark .selector-grid > .selector .element {
  color: color-mix(in srgb, hsl(0, 0%, 0%) 33%, hsl(0, 0%, 100%) 66%);
}
.theme-dark .selector-grid > .selector:hover {
  background-color: color-mix(in srgb, hsl(0, 0%, 100%) 40%, hsl(266, 57%, 49%) 100%);
  color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 100%) 40%, hsl(266, 57%, 49%) 100%) 20%, hsl(0, 0%, 0%));
}
.theme-dark .selector-grid > .selector:hover > .icon,
.theme-dark .selector-grid > .selector:hover .element {
  color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 100%) 40%, hsl(266, 57%, 49%) 100%) 20%, hsl(0, 0%, 0%));
}
.theme-dark .selector-grid > .selector.ghost {
  box-shadow: none;
}
.theme-dark .selector-grid > .selector.disabled {
  background-color: color-mix(in srgb, hsl(0, 0%, 0%) 50%, hsl(0, 0%, 100%) 50%);
  pointer-events: none;
}
.theme-dark .selector-grid .selector:has(> input:checked),
.theme-dark .selector-grid .selector:active {
  background-color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 100%) 40%, hsl(266, 57%, 49%) 100%) 60%, hsl(0, 0%, 0%));
  color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 100%) 40%, hsl(266, 57%, 49%) 100%) 40%, hsl(0, 0%, 100%));
  box-shadow: 0px 0px 4px 2px color-mix(in srgb, hsl(0, 0%, 100%) 40%, hsl(266, 57%, 49%) 100%) inset;
}
.theme-dark .selector-grid .selector:has(> input:checked) > .icon,
.theme-dark .selector-grid .selector:has(> input:checked) .element,
.theme-dark .selector-grid .selector:active > .icon,
.theme-dark .selector-grid .selector:active .element {
  color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 100%) 40%, hsl(266, 57%, 49%) 100%) 40%, hsl(0, 0%, 100%));
}
.theme-dark .thumb {
  background-color: rgb(94, 205, 142);
}
.theme-dark .thumb h1,
.theme-dark .thumb h2,
.theme-dark .thumb h3,
.theme-dark .thumb h4,
.theme-dark .thumb h5,
.theme-dark .thumb h6,
.theme-dark .thumb p,
.theme-dark .thumb a,
.theme-dark .thumb strong,
.theme-dark .thumb i,
.theme-dark .thumb em,
.theme-dark .thumb mark,
.theme-dark .thumb small,
.theme-dark .thumb del,
.theme-dark .thumb ins,
.theme-dark .thumb sub,
.theme-dark .thumb sup,
.theme-dark .thumb time,
.theme-dark .thumb .icon,
.theme-dark .thumb button {
  color: hsl(0, 0%, 0%);
}
.theme-dark .menu {
  background-color: color-mix(in srgb, hsl(0, 0%, 0%) 85%, hsl(0, 0%, 100%) 15%);
  box-shadow: 0 0.1rem 0.8rem -0.3rem black;
}
.theme-dark .selector {
  background-color: inherit;
}
.theme-dark .selector:hover {
  background-color: color-mix(in srgb, hsl(0, 0%, 100%) 40%, hsl(266, 57%, 49%) 100%);
  color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 100%) 40%, hsl(266, 57%, 49%) 100%) 20%, hsl(0, 0%, 0%));
}
.theme-dark .selector:hover > .element {
  color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 100%) 40%, hsl(266, 57%, 49%) 100%) 20%, hsl(0, 0%, 0%));
}
.theme-dark .selector:hover > .icon {
  color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 100%) 40%, hsl(266, 57%, 49%) 100%) 20%, hsl(0, 0%, 0%));
}
.theme-dark .selector:active {
  background-color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 100%) 40%, hsl(266, 57%, 49%) 100%) 60%, hsl(0, 0%, 0%));
  color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 100%) 40%, hsl(266, 57%, 49%) 100%) 40%, hsl(0, 0%, 100%));
  box-shadow: 0px 0px 4px 2px color-mix(in srgb, hsl(0, 0%, 100%) 40%, hsl(266, 57%, 49%) 100%) inset;
}
.theme-dark .selector:active > .icon {
  color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 100%) 40%, hsl(266, 57%, 49%) 100%) 40%, hsl(0, 0%, 100%));
}
.theme-dark .selector:active > .element {
  color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 100%) 40%, hsl(266, 57%, 49%) 100%) 40%, hsl(0, 0%, 100%));
}
.theme-dark .toggle {
  background-color: color-mix(in srgb, hsl(0, 0%, 0%) 75%, hsl(0, 0%, 100%) 25%);
}
.theme-dark .toggle > span {
  background-color: hsl(0, 0%, 0%);
}
.theme-dark .toggle input[type=checkbox]:checked + span {
  background-color: color-mix(in srgb, hsl(0, 0%, 100%) 40%, hsl(266, 57%, 49%) 100%);
}
.theme-dark .ring {
  outline-color: color-mix(in srgb, hsl(0, 0%, 100%) 40%, hsl(266, 57%, 49%) 100%);
}
.theme-dark .icon:before {
  color: inherit;
}
.theme-dark .div-highlight {
  background-color: color-mix(in srgb, hsl(0, 0%, 100%) 40%, hsl(266, 57%, 49%) 100%);
}
.theme-dark .div-highlight h1,
.theme-dark .div-highlight h2,
.theme-dark .div-highlight h3,
.theme-dark .div-highlight h4,
.theme-dark .div-highlight h5,
.theme-dark .div-highlight h6,
.theme-dark .div-highlight p,
.theme-dark .div-highlight a,
.theme-dark .div-highlight strong,
.theme-dark .div-highlight i,
.theme-dark .div-highlight em,
.theme-dark .div-highlight mark,
.theme-dark .div-highlight small,
.theme-dark .div-highlight del,
.theme-dark .div-highlight ins,
.theme-dark .div-highlight sub,
.theme-dark .div-highlight sup,
.theme-dark .div-highlight time,
.theme-dark .div-highlight .icon,
.theme-dark .div-highlight button {
  color: hsl(0, 0%, 0%);
}
.theme-dark .div-base90 {
  background-color: color-mix(in srgb, hsl(0, 0%, 0%) 90%, hsl(0, 0%, 100%) 10%);
}
.theme-dark .base {
  background-color: hsl(0, 0%, 0%);
}
.theme-dark .base-color {
  color: hsl(0, 0%, 0%);
}
.theme-dark .base-color.tint {
  background-color: color-mix(in srgb, hsl(0, 0%, 0%) 95%, hsl(266, 57%, 49%) 5%);
}
.theme-dark .base10 {
  background-color: color-mix(in srgb, hsl(0, 0%, 0%) 10%, hsl(0, 0%, 100%) 90%);
}
.theme-dark .base10.tint {
  background-color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 0%) 10%, hsl(0, 0%, 100%) 90%) 95%, hsl(266, 57%, 49%) 5%);
}
.theme-dark .base15 {
  background-color: color-mix(in srgb, hsl(0, 0%, 0%) 15%, hsl(0, 0%, 100%) 85%);
}
.theme-dark .base15.tint {
  background-color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 0%) 15%, hsl(0, 0%, 100%) 85%) 95%, hsl(266, 57%, 49%) 5%);
}
.theme-dark .base25 {
  background-color: color-mix(in srgb, hsl(0, 0%, 0%) 25%, hsl(0, 0%, 100%) 75%);
}
.theme-dark .base25.tint {
  background-color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 0%) 25%, hsl(0, 0%, 100%) 75%) 95%, hsl(266, 57%, 49%) 5%);
}
.theme-dark .base33 {
  background-color: color-mix(in srgb, hsl(0, 0%, 0%) 33%, hsl(0, 0%, 100%) 66%);
}
.theme-dark .base33.tint {
  background-color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 0%) 33%, hsl(0, 0%, 100%) 66%) 95%, hsl(266, 57%, 49%) 5%);
}
.theme-dark .base50 {
  background-color: color-mix(in srgb, hsl(0, 0%, 0%) 50%, hsl(0, 0%, 100%) 50%);
}
.theme-dark .base50.tint {
  background-color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 0%) 50%, hsl(0, 0%, 100%) 50%) 95%, hsl(266, 57%, 49%) 5%);
}
.theme-dark .base66 {
  background-color: color-mix(in srgb, hsl(0, 0%, 0%) 66%, hsl(0, 0%, 100%) 33%);
}
.theme-dark .base66.tint {
  background-color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 0%) 66%, hsl(0, 0%, 100%) 33%) 95%, hsl(266, 57%, 49%) 5%);
}
.theme-dark .base75 {
  background-color: color-mix(in srgb, hsl(0, 0%, 0%) 75%, hsl(0, 0%, 100%) 25%);
}
.theme-dark .base75.tint {
  background-color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 0%) 75%, hsl(0, 0%, 100%) 25%) 95%, hsl(266, 57%, 49%) 5%);
}
.theme-dark .base85 {
  background-color: color-mix(in srgb, hsl(0, 0%, 0%) 85%, hsl(0, 0%, 100%) 15%);
}
.theme-dark .base85.tint {
  background-color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 0%) 85%, hsl(0, 0%, 100%) 15%) 95%, hsl(266, 57%, 49%) 5%);
}
.theme-dark .base90 {
  background-color: color-mix(in srgb, hsl(0, 0%, 0%) 90%, hsl(0, 0%, 100%) 10%);
}
.theme-dark .base90.tint {
  background-color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 0%) 90%, hsl(0, 0%, 100%) 10%) 95%, hsl(266, 57%, 49%) 5%);
}
.theme-dark .base15 {
  background-color: color-mix(in srgb, hsl(0, 0%, 0%) 5%, hsl(0, 0%, 100%) 95%);
}
.theme-dark .base15.tint {
  background-color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 0%) 15%, hsl(0, 0%, 100%) 85%) 95%, hsl(266, 57%, 49%) 5%);
}
.theme-dark .base95 {
  background-color: color-mix(in srgb, hsl(0, 0%, 0%) 95%, hsl(0, 0%, 100%) 5%);
}
.theme-dark .base95.tint {
  background-color: color-mix(in srgb, color-mix(in srgb, hsl(0, 0%, 0%) 95%, hsl(0, 0%, 100%) 5%) 95%, hsl(266, 57%, 49%) 5%);
}
.theme-dark .baseInv {
  background-color: hsl(0, 0%, 100%);
}
.theme-dark .baseInv.tint {
  background-color: color-mix(in srgb, hsl(0, 0%, 100%) 95%, hsl(266, 57%, 49%) 5%);
}
.theme-dark .success {
  background-color: hsl(129, 69%, 41%);
}
.theme-dark .success.tint {
  background-color: color-mix(in srgb, hsl(129, 69%, 41%) 75%, hsl(266, 57%, 49%) 25%);
}
.theme-dark .success > .element {
  color: color-mix(in srgb, hsl(129, 69%, 41%) 25%, hsl(0, 0%, 0%) 75%);
}
.theme-dark hr {
  border-color: color-mix(in srgb, hsl(0, 0%, 0%) 75%, hsl(0, 0%, 100%) 25%);
}
.theme-dark .hr-highlight {
  border-color: color-mix(in srgb, hsl(0, 0%, 100%) 40%, hsl(266, 57%, 49%) 100%);
}
.theme-dark .hr-base90 {
  border-color: color-mix(in srgb, hsl(0, 0%, 0%) 90%, hsl(0, 0%, 100%) 10%);
}
.theme-dark .ico-color {
  color: rgb(83, 83, 69) !important;
}

:root {
  font-size: 16px;
}
@media screen and (max-width: 450px) {
  :root {
    font-size: 12px;
  }
}
@media screen and (max-width: 345px) {
  :root {
    font-size: 10px;
  }
}

* {
  font-family: "Open Sans", sans-serif;
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html {
  overflow-y: scroll;
}

::-webkit-scrollbar {
  width: 8px; /* width of the scrollbar */
  background-color: rgba(245, 245, 245, 0); /* background color */
  border-radius: 100%; /* rounder corners */
}

::-webkit-scrollbar-thumb {
  background-color: #888; /* color of the scrollbar thumb */
  border-radius: 4px; /* rounder corners on the thumb */
  height: 5px !important;
}

.user-name {
  display: none;
}/*# sourceMappingURL=styles.css.map */